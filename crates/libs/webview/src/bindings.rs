#[repr(transparent)]
pub struct COREWEBVIEW2_BOUNDS_MODE(pub u32);
pub const COREWEBVIEW2_BOUNDS_MODE_USE_RAW_PIXELS: COREWEBVIEW2_BOUNDS_MODE =
    COREWEBVIEW2_BOUNDS_MODE(0i64);
pub const COREWEBVIEW2_BOUNDS_MODE_USE_RASTERIZATION_SCALE: COREWEBVIEW2_BOUNDS_MODE =
    COREWEBVIEW2_BOUNDS_MODE(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND(pub u32);
pub const COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND_NORMAL: COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND =
    COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND(0i64);
pub const COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND_FAILED: COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND =
    COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_BROWSING_DATA_KINDS(pub u32);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_FILE_SYSTEMS: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(1i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_INDEXED_DB: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(2i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_LOCAL_STORAGE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(4i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_WEB_SQL: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(8i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_CACHE_STORAGE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(16i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_DOM_STORAGE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(32i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_COOKIES: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(64i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_SITE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(128i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_DISK_CACHE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(256i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_DOWNLOAD_HISTORY: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(512i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_GENERAL_AUTOFILL: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(1024i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_PASSWORD_AUTOSAVE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(2048i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_BROWSING_HISTORY: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(4096i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_SETTINGS: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(8192i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_PROFILE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(16384i64);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_SERVICE_WORKERS: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(32768i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT(pub u32);
pub const COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_PNG: COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT =
    COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT(0i64);
pub const COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_JPEG:
    COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT = COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_CHANNEL_SEARCH_KIND(pub u32);
pub const COREWEBVIEW2_CHANNEL_SEARCH_KIND_MOST_STABLE: COREWEBVIEW2_CHANNEL_SEARCH_KIND =
    COREWEBVIEW2_CHANNEL_SEARCH_KIND(0i64);
pub const COREWEBVIEW2_CHANNEL_SEARCH_KIND_LEAST_STABLE: COREWEBVIEW2_CHANNEL_SEARCH_KIND =
    COREWEBVIEW2_CHANNEL_SEARCH_KIND(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_CLIENT_CERTIFICATE_KIND(pub u32);
pub const COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_SMART_CARD: COREWEBVIEW2_CLIENT_CERTIFICATE_KIND =
    COREWEBVIEW2_CLIENT_CERTIFICATE_KIND(0i64);
pub const COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_PIN: COREWEBVIEW2_CLIENT_CERTIFICATE_KIND =
    COREWEBVIEW2_CLIENT_CERTIFICATE_KIND(1i64);
pub const COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_OTHER: COREWEBVIEW2_CLIENT_CERTIFICATE_KIND =
    COREWEBVIEW2_CLIENT_CERTIFICATE_KIND(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(pub u32);
pub const COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_COMMAND: COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND =
    COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(0i64);
pub const COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_CHECK_BOX: COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND =
    COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(1i64);
pub const COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_RADIO: COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND =
    COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(2i64);
pub const COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_SEPARATOR: COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND =
    COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(3i64);
pub const COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_SUBMENU: COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND =
    COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(4i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(pub u32);
pub const COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_PAGE: COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND =
    COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(0i64);
pub const COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_IMAGE: COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND =
    COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(1i64);
pub const COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_SELECTED_TEXT:
    COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND = COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(2i64);
pub const COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_AUDIO: COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND =
    COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(3i64);
pub const COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_VIDEO: COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND =
    COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(4i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_COOKIE_SAME_SITE_KIND(pub u32);
pub const COREWEBVIEW2_COOKIE_SAME_SITE_KIND_NONE: COREWEBVIEW2_COOKIE_SAME_SITE_KIND =
    COREWEBVIEW2_COOKIE_SAME_SITE_KIND(0i64);
pub const COREWEBVIEW2_COOKIE_SAME_SITE_KIND_LAX: COREWEBVIEW2_COOKIE_SAME_SITE_KIND =
    COREWEBVIEW2_COOKIE_SAME_SITE_KIND(1i64);
pub const COREWEBVIEW2_COOKIE_SAME_SITE_KIND_STRICT: COREWEBVIEW2_COOKIE_SAME_SITE_KIND =
    COREWEBVIEW2_COOKIE_SAME_SITE_KIND(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT(pub u32);
pub const COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_LEFT:
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT =
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT(0i64);
pub const COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_RIGHT:
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT =
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT(1i64);
pub const COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_BOTTOM_LEFT:
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT =
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT(2i64);
pub const COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_BOTTOM_RIGHT:
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT =
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT(3i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(pub u32);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NONE: COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON =
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_FAILED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(1i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_ACCESS_DENIED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(2i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NO_SPACE:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(3i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NAME_TOO_LONG:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(4i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_LARGE:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(5i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_MALICIOUS:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(6i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TRANSIENT_ERROR:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(7i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_BLOCKED_BY_POLICY:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(8i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_SECURITY_CHECK_FAILED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(9i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_SHORT:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(10i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_HASH_MISMATCH:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(11i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_FAILED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(12i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_TIMEOUT:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(13i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_DISCONNECTED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(14i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_SERVER_DOWN:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(15i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_INVALID_REQUEST:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(16i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FAILED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(17i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_NO_RANGE:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(18i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_BAD_CONTENT:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(19i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNAUTHORIZED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(20i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CERTIFICATE_PROBLEM:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(21i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FORBIDDEN:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(22i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNEXPECTED_RESPONSE:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(23i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CONTENT_LENGTH_MISMATCH:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(24i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CROSS_ORIGIN_REDIRECT:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(25i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_CANCELED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(26i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_SHUTDOWN:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(27i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_PAUSED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(28i64);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_DOWNLOAD_PROCESS_CRASHED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(29i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_DOWNLOAD_STATE(pub u32);
pub const COREWEBVIEW2_DOWNLOAD_STATE_IN_PROGRESS: COREWEBVIEW2_DOWNLOAD_STATE =
    COREWEBVIEW2_DOWNLOAD_STATE(0i64);
pub const COREWEBVIEW2_DOWNLOAD_STATE_INTERRUPTED: COREWEBVIEW2_DOWNLOAD_STATE =
    COREWEBVIEW2_DOWNLOAD_STATE(1i64);
pub const COREWEBVIEW2_DOWNLOAD_STATE_COMPLETED: COREWEBVIEW2_DOWNLOAD_STATE =
    COREWEBVIEW2_DOWNLOAD_STATE(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_FAVICON_IMAGE_FORMAT(pub u32);
pub const COREWEBVIEW2_FAVICON_IMAGE_FORMAT_PNG: COREWEBVIEW2_FAVICON_IMAGE_FORMAT =
    COREWEBVIEW2_FAVICON_IMAGE_FORMAT(0i64);
pub const COREWEBVIEW2_FAVICON_IMAGE_FORMAT_JPEG: COREWEBVIEW2_FAVICON_IMAGE_FORMAT =
    COREWEBVIEW2_FAVICON_IMAGE_FORMAT(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND(pub u32);
pub const COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND_FILE: COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND =
    COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND(0i64);
pub const COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND_DIRECTORY: COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND =
    COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION(pub u32);
pub const COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION_READ_ONLY:
    COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION = COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION(0i64);
pub const COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION_READ_WRITE:
    COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION = COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_FRAME_KIND(pub u32);
pub const COREWEBVIEW2_FRAME_KIND_UNKNOWN: COREWEBVIEW2_FRAME_KIND = COREWEBVIEW2_FRAME_KIND(0i64);
pub const COREWEBVIEW2_FRAME_KIND_MAIN_FRAME: COREWEBVIEW2_FRAME_KIND =
    COREWEBVIEW2_FRAME_KIND(1i64);
pub const COREWEBVIEW2_FRAME_KIND_IFRAME: COREWEBVIEW2_FRAME_KIND = COREWEBVIEW2_FRAME_KIND(2i64);
pub const COREWEBVIEW2_FRAME_KIND_EMBED: COREWEBVIEW2_FRAME_KIND = COREWEBVIEW2_FRAME_KIND(3i64);
pub const COREWEBVIEW2_FRAME_KIND_OBJECT: COREWEBVIEW2_FRAME_KIND = COREWEBVIEW2_FRAME_KIND(4i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND(pub u32);
pub const COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_DENY: COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND =
    COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND(0i64);
pub const COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_ALLOW: COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND =
    COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND(1i64);
pub const COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_DENY_CORS: COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND =
    COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_KEY_EVENT_KIND(pub u32);
pub const COREWEBVIEW2_KEY_EVENT_KIND_KEY_DOWN: COREWEBVIEW2_KEY_EVENT_KIND =
    COREWEBVIEW2_KEY_EVENT_KIND(0i64);
pub const COREWEBVIEW2_KEY_EVENT_KIND_KEY_UP: COREWEBVIEW2_KEY_EVENT_KIND =
    COREWEBVIEW2_KEY_EVENT_KIND(1i64);
pub const COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_DOWN: COREWEBVIEW2_KEY_EVENT_KIND =
    COREWEBVIEW2_KEY_EVENT_KIND(2i64);
pub const COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_UP: COREWEBVIEW2_KEY_EVENT_KIND =
    COREWEBVIEW2_KEY_EVENT_KIND(3i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL(pub u32);
pub const COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL_NORMAL: COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL =
    COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL(0i64);
pub const COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL_LOW: COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL =
    COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_MOUSE_EVENT_KIND(pub u32);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_HORIZONTAL_WHEEL: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(526i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOUBLE_CLICK: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(515i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOWN: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(513i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_UP: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(514i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_LEAVE: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(675i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOUBLE_CLICK: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(521i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOWN: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(519i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_UP: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(520i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_MOVE: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(512i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOUBLE_CLICK: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(518i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOWN: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(516i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_UP: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(517i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_WHEEL: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(522i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOUBLE_CLICK: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(525i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOWN: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(523i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_UP: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(524i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_NON_CLIENT_RIGHT_BUTTON_DOWN:
    COREWEBVIEW2_MOUSE_EVENT_KIND = COREWEBVIEW2_MOUSE_EVENT_KIND(164i64);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_NON_CLIENT_RIGHT_BUTTON_UP: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(165i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(pub u32);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_NONE: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0i64);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_LEFT_BUTTON: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(1i64);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_RIGHT_BUTTON:
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(2i64);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_SHIFT: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(4i64);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_CONTROL: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(8i64);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_MIDDLE_BUTTON:
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(16i64);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON1: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(32i64);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON2: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(64i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_MOVE_FOCUS_REASON(pub u32);
pub const COREWEBVIEW2_MOVE_FOCUS_REASON_PROGRAMMATIC: COREWEBVIEW2_MOVE_FOCUS_REASON =
    COREWEBVIEW2_MOVE_FOCUS_REASON(0i64);
pub const COREWEBVIEW2_MOVE_FOCUS_REASON_NEXT: COREWEBVIEW2_MOVE_FOCUS_REASON =
    COREWEBVIEW2_MOVE_FOCUS_REASON(1i64);
pub const COREWEBVIEW2_MOVE_FOCUS_REASON_PREVIOUS: COREWEBVIEW2_MOVE_FOCUS_REASON =
    COREWEBVIEW2_MOVE_FOCUS_REASON(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_NAVIGATION_KIND(pub u32);
pub const COREWEBVIEW2_NAVIGATION_KIND_RELOAD: COREWEBVIEW2_NAVIGATION_KIND =
    COREWEBVIEW2_NAVIGATION_KIND(0i64);
pub const COREWEBVIEW2_NAVIGATION_KIND_BACK_OR_FORWARD: COREWEBVIEW2_NAVIGATION_KIND =
    COREWEBVIEW2_NAVIGATION_KIND(1i64);
pub const COREWEBVIEW2_NAVIGATION_KIND_NEW_DOCUMENT: COREWEBVIEW2_NAVIGATION_KIND =
    COREWEBVIEW2_NAVIGATION_KIND(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_NON_CLIENT_REGION_KIND(pub u32);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_NOWHERE: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(0i64);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_CLIENT: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(1i64);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_CAPTION: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(2i64);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_MINIMIZE: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(8i64);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_MAXIMIZE: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(9i64);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_CLOSE: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(20i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PDF_TOOLBAR_ITEMS(pub u32);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_NONE: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SAVE: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(1i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PRINT: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(2i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SAVE_AS: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(4i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ZOOM_IN: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(8i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ZOOM_OUT: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(16i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ROTATE: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(32i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_FIT_PAGE: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(64i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PAGE_LAYOUT: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(128i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_BOOKMARKS: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(256i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PAGE_SELECTOR: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(512i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SEARCH: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(1024i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_FULL_SCREEN: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(2048i64);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_MORE_SETTINGS: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(4096i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PERMISSION_KIND(pub u32);
pub const COREWEBVIEW2_PERMISSION_KIND_UNKNOWN_PERMISSION: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0i64);
pub const COREWEBVIEW2_PERMISSION_KIND_MICROPHONE: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(1i64);
pub const COREWEBVIEW2_PERMISSION_KIND_CAMERA: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(2i64);
pub const COREWEBVIEW2_PERMISSION_KIND_GEOLOCATION: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(3i64);
pub const COREWEBVIEW2_PERMISSION_KIND_NOTIFICATIONS: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(4i64);
pub const COREWEBVIEW2_PERMISSION_KIND_OTHER_SENSORS: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(5i64);
pub const COREWEBVIEW2_PERMISSION_KIND_CLIPBOARD_READ: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(6i64);
pub const COREWEBVIEW2_PERMISSION_KIND_MULTIPLE_AUTOMATIC_DOWNLOADS: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(7i64);
pub const COREWEBVIEW2_PERMISSION_KIND_FILE_READ_WRITE: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(8i64);
pub const COREWEBVIEW2_PERMISSION_KIND_AUTOPLAY: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(9i64);
pub const COREWEBVIEW2_PERMISSION_KIND_LOCAL_FONTS: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(10i64);
pub const COREWEBVIEW2_PERMISSION_KIND_MIDI_SYSTEM_EXCLUSIVE_MESSAGES:
    COREWEBVIEW2_PERMISSION_KIND = COREWEBVIEW2_PERMISSION_KIND(11i64);
pub const COREWEBVIEW2_PERMISSION_KIND_WINDOW_MANAGEMENT: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(12i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PERMISSION_STATE(pub u32);
pub const COREWEBVIEW2_PERMISSION_STATE_DEFAULT: COREWEBVIEW2_PERMISSION_STATE =
    COREWEBVIEW2_PERMISSION_STATE(0i64);
pub const COREWEBVIEW2_PERMISSION_STATE_ALLOW: COREWEBVIEW2_PERMISSION_STATE =
    COREWEBVIEW2_PERMISSION_STATE(1i64);
pub const COREWEBVIEW2_PERMISSION_STATE_DENY: COREWEBVIEW2_PERMISSION_STATE =
    COREWEBVIEW2_PERMISSION_STATE(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_POINTER_EVENT_KIND(pub u32);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_ACTIVATE: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(587i64);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_DOWN: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(582i64);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_ENTER: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(585i64);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_LEAVE: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(586i64);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_UP: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(583i64);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_UPDATE: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(581i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PREFERRED_COLOR_SCHEME(pub u32);
pub const COREWEBVIEW2_PREFERRED_COLOR_SCHEME_AUTO: COREWEBVIEW2_PREFERRED_COLOR_SCHEME =
    COREWEBVIEW2_PREFERRED_COLOR_SCHEME(0i64);
pub const COREWEBVIEW2_PREFERRED_COLOR_SCHEME_LIGHT: COREWEBVIEW2_PREFERRED_COLOR_SCHEME =
    COREWEBVIEW2_PREFERRED_COLOR_SCHEME(1i64);
pub const COREWEBVIEW2_PREFERRED_COLOR_SCHEME_DARK: COREWEBVIEW2_PREFERRED_COLOR_SCHEME =
    COREWEBVIEW2_PREFERRED_COLOR_SCHEME(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_COLLATION(pub u32);
pub const COREWEBVIEW2_PRINT_COLLATION_DEFAULT: COREWEBVIEW2_PRINT_COLLATION =
    COREWEBVIEW2_PRINT_COLLATION(0i64);
pub const COREWEBVIEW2_PRINT_COLLATION_COLLATED: COREWEBVIEW2_PRINT_COLLATION =
    COREWEBVIEW2_PRINT_COLLATION(1i64);
pub const COREWEBVIEW2_PRINT_COLLATION_UNCOLLATED: COREWEBVIEW2_PRINT_COLLATION =
    COREWEBVIEW2_PRINT_COLLATION(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_COLOR_MODE(pub u32);
pub const COREWEBVIEW2_PRINT_COLOR_MODE_DEFAULT: COREWEBVIEW2_PRINT_COLOR_MODE =
    COREWEBVIEW2_PRINT_COLOR_MODE(0i64);
pub const COREWEBVIEW2_PRINT_COLOR_MODE_COLOR: COREWEBVIEW2_PRINT_COLOR_MODE =
    COREWEBVIEW2_PRINT_COLOR_MODE(1i64);
pub const COREWEBVIEW2_PRINT_COLOR_MODE_GRAYSCALE: COREWEBVIEW2_PRINT_COLOR_MODE =
    COREWEBVIEW2_PRINT_COLOR_MODE(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_DIALOG_KIND(pub u32);
pub const COREWEBVIEW2_PRINT_DIALOG_KIND_BROWSER: COREWEBVIEW2_PRINT_DIALOG_KIND =
    COREWEBVIEW2_PRINT_DIALOG_KIND(0i64);
pub const COREWEBVIEW2_PRINT_DIALOG_KIND_SYSTEM: COREWEBVIEW2_PRINT_DIALOG_KIND =
    COREWEBVIEW2_PRINT_DIALOG_KIND(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_DUPLEX(pub u32);
pub const COREWEBVIEW2_PRINT_DUPLEX_DEFAULT: COREWEBVIEW2_PRINT_DUPLEX =
    COREWEBVIEW2_PRINT_DUPLEX(0i64);
pub const COREWEBVIEW2_PRINT_DUPLEX_ONE_SIDED: COREWEBVIEW2_PRINT_DUPLEX =
    COREWEBVIEW2_PRINT_DUPLEX(1i64);
pub const COREWEBVIEW2_PRINT_DUPLEX_TWO_SIDED_LONG_EDGE: COREWEBVIEW2_PRINT_DUPLEX =
    COREWEBVIEW2_PRINT_DUPLEX(2i64);
pub const COREWEBVIEW2_PRINT_DUPLEX_TWO_SIDED_SHORT_EDGE: COREWEBVIEW2_PRINT_DUPLEX =
    COREWEBVIEW2_PRINT_DUPLEX(3i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_MEDIA_SIZE(pub u32);
pub const COREWEBVIEW2_PRINT_MEDIA_SIZE_DEFAULT: COREWEBVIEW2_PRINT_MEDIA_SIZE =
    COREWEBVIEW2_PRINT_MEDIA_SIZE(0i64);
pub const COREWEBVIEW2_PRINT_MEDIA_SIZE_CUSTOM: COREWEBVIEW2_PRINT_MEDIA_SIZE =
    COREWEBVIEW2_PRINT_MEDIA_SIZE(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_ORIENTATION(pub u32);
pub const COREWEBVIEW2_PRINT_ORIENTATION_PORTRAIT: COREWEBVIEW2_PRINT_ORIENTATION =
    COREWEBVIEW2_PRINT_ORIENTATION(0i64);
pub const COREWEBVIEW2_PRINT_ORIENTATION_LANDSCAPE: COREWEBVIEW2_PRINT_ORIENTATION =
    COREWEBVIEW2_PRINT_ORIENTATION(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_STATUS(pub u32);
pub const COREWEBVIEW2_PRINT_STATUS_SUCCEEDED: COREWEBVIEW2_PRINT_STATUS =
    COREWEBVIEW2_PRINT_STATUS(0i64);
pub const COREWEBVIEW2_PRINT_STATUS_PRINTER_UNAVAILABLE: COREWEBVIEW2_PRINT_STATUS =
    COREWEBVIEW2_PRINT_STATUS(1i64);
pub const COREWEBVIEW2_PRINT_STATUS_OTHER_ERROR: COREWEBVIEW2_PRINT_STATUS =
    COREWEBVIEW2_PRINT_STATUS(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PROCESS_FAILED_KIND(pub u32);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_BROWSER_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(0i64);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_EXITED: COREWEBVIEW2_PROCESS_FAILED_KIND =
    COREWEBVIEW2_PROCESS_FAILED_KIND(1i64);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_UNRESPONSIVE:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(2i64);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_FRAME_RENDER_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(3i64);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_UTILITY_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(4i64);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_SANDBOX_HELPER_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(5i64);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_GPU_PROCESS_EXITED: COREWEBVIEW2_PROCESS_FAILED_KIND =
    COREWEBVIEW2_PROCESS_FAILED_KIND(6i64);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_PLUGIN_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(7i64);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_BROKER_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(8i64);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_UNKNOWN_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(9i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PROCESS_FAILED_REASON(pub u32);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_UNEXPECTED: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(0i64);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_UNRESPONSIVE: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(1i64);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_TERMINATED: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(2i64);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_CRASHED: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(3i64);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_LAUNCH_FAILED: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(4i64);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_OUT_OF_MEMORY: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(5i64);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_PROFILE_DELETED: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(6i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_PROCESS_KIND(pub u32);
pub const COREWEBVIEW2_PROCESS_KIND_BROWSER: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(0i64);
pub const COREWEBVIEW2_PROCESS_KIND_RENDERER: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(1i64);
pub const COREWEBVIEW2_PROCESS_KIND_UTILITY: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(2i64);
pub const COREWEBVIEW2_PROCESS_KIND_SANDBOX_HELPER: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(3i64);
pub const COREWEBVIEW2_PROCESS_KIND_GPU: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(4i64);
pub const COREWEBVIEW2_PROCESS_KIND_PPAPI_PLUGIN: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(5i64);
pub const COREWEBVIEW2_PROCESS_KIND_PPAPI_BROKER: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(6i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_RELEASE_CHANNELS(pub u32);
pub const COREWEBVIEW2_RELEASE_CHANNELS_NONE: COREWEBVIEW2_RELEASE_CHANNELS =
    COREWEBVIEW2_RELEASE_CHANNELS(0i64);
pub const COREWEBVIEW2_RELEASE_CHANNELS_STABLE: COREWEBVIEW2_RELEASE_CHANNELS =
    COREWEBVIEW2_RELEASE_CHANNELS(1i64);
pub const COREWEBVIEW2_RELEASE_CHANNELS_BETA: COREWEBVIEW2_RELEASE_CHANNELS =
    COREWEBVIEW2_RELEASE_CHANNELS(2i64);
pub const COREWEBVIEW2_RELEASE_CHANNELS_DEV: COREWEBVIEW2_RELEASE_CHANNELS =
    COREWEBVIEW2_RELEASE_CHANNELS(4i64);
pub const COREWEBVIEW2_RELEASE_CHANNELS_CANARY: COREWEBVIEW2_RELEASE_CHANNELS =
    COREWEBVIEW2_RELEASE_CHANNELS(8i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_SAVE_AS_KIND(pub u32);
pub const COREWEBVIEW2_SAVE_AS_KIND_DEFAULT: COREWEBVIEW2_SAVE_AS_KIND =
    COREWEBVIEW2_SAVE_AS_KIND(0i64);
pub const COREWEBVIEW2_SAVE_AS_KIND_HTML_ONLY: COREWEBVIEW2_SAVE_AS_KIND =
    COREWEBVIEW2_SAVE_AS_KIND(1i64);
pub const COREWEBVIEW2_SAVE_AS_KIND_SINGLE_FILE: COREWEBVIEW2_SAVE_AS_KIND =
    COREWEBVIEW2_SAVE_AS_KIND(2i64);
pub const COREWEBVIEW2_SAVE_AS_KIND_COMPLETE: COREWEBVIEW2_SAVE_AS_KIND =
    COREWEBVIEW2_SAVE_AS_KIND(3i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_SAVE_AS_UI_RESULT(pub u32);
pub const COREWEBVIEW2_SAVE_AS_UI_RESULT_SUCCESS: COREWEBVIEW2_SAVE_AS_UI_RESULT =
    COREWEBVIEW2_SAVE_AS_UI_RESULT(0i64);
pub const COREWEBVIEW2_SAVE_AS_UI_RESULT_INVALID_PATH: COREWEBVIEW2_SAVE_AS_UI_RESULT =
    COREWEBVIEW2_SAVE_AS_UI_RESULT(1i64);
pub const COREWEBVIEW2_SAVE_AS_UI_RESULT_FILE_ALREADY_EXISTS: COREWEBVIEW2_SAVE_AS_UI_RESULT =
    COREWEBVIEW2_SAVE_AS_UI_RESULT(2i64);
pub const COREWEBVIEW2_SAVE_AS_UI_RESULT_KIND_NOT_SUPPORTED: COREWEBVIEW2_SAVE_AS_UI_RESULT =
    COREWEBVIEW2_SAVE_AS_UI_RESULT(3i64);
pub const COREWEBVIEW2_SAVE_AS_UI_RESULT_CANCELLED: COREWEBVIEW2_SAVE_AS_UI_RESULT =
    COREWEBVIEW2_SAVE_AS_UI_RESULT(4i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_SCRIPT_DIALOG_KIND(pub u32);
pub const COREWEBVIEW2_SCRIPT_DIALOG_KIND_ALERT: COREWEBVIEW2_SCRIPT_DIALOG_KIND =
    COREWEBVIEW2_SCRIPT_DIALOG_KIND(0i64);
pub const COREWEBVIEW2_SCRIPT_DIALOG_KIND_CONFIRM: COREWEBVIEW2_SCRIPT_DIALOG_KIND =
    COREWEBVIEW2_SCRIPT_DIALOG_KIND(1i64);
pub const COREWEBVIEW2_SCRIPT_DIALOG_KIND_PROMPT: COREWEBVIEW2_SCRIPT_DIALOG_KIND =
    COREWEBVIEW2_SCRIPT_DIALOG_KIND(2i64);
pub const COREWEBVIEW2_SCRIPT_DIALOG_KIND_BEFOREUNLOAD: COREWEBVIEW2_SCRIPT_DIALOG_KIND =
    COREWEBVIEW2_SCRIPT_DIALOG_KIND(3i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_SCROLLBAR_STYLE(pub u32);
pub const COREWEBVIEW2_SCROLLBAR_STYLE_DEFAULT: COREWEBVIEW2_SCROLLBAR_STYLE =
    COREWEBVIEW2_SCROLLBAR_STYLE(0i64);
pub const COREWEBVIEW2_SCROLLBAR_STYLE_FLUENT_OVERLAY: COREWEBVIEW2_SCROLLBAR_STYLE =
    COREWEBVIEW2_SCROLLBAR_STYLE(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION(pub u32);
pub const COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_ALWAYS_ALLOW:
    COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION =
    COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION(0i64);
pub const COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_CANCEL:
    COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION =
    COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION(1i64);
pub const COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_DEFAULT:
    COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION =
    COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_SHARED_BUFFER_ACCESS(pub u32);
pub const COREWEBVIEW2_SHARED_BUFFER_ACCESS_READ_ONLY: COREWEBVIEW2_SHARED_BUFFER_ACCESS =
    COREWEBVIEW2_SHARED_BUFFER_ACCESS(0i64);
pub const COREWEBVIEW2_SHARED_BUFFER_ACCESS_READ_WRITE: COREWEBVIEW2_SHARED_BUFFER_ACCESS =
    COREWEBVIEW2_SHARED_BUFFER_ACCESS(1i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_TEXT_DIRECTION_KIND(pub u32);
pub const COREWEBVIEW2_TEXT_DIRECTION_KIND_DEFAULT: COREWEBVIEW2_TEXT_DIRECTION_KIND =
    COREWEBVIEW2_TEXT_DIRECTION_KIND(0i64);
pub const COREWEBVIEW2_TEXT_DIRECTION_KIND_LEFT_TO_RIGHT: COREWEBVIEW2_TEXT_DIRECTION_KIND =
    COREWEBVIEW2_TEXT_DIRECTION_KIND(1i64);
pub const COREWEBVIEW2_TEXT_DIRECTION_KIND_RIGHT_TO_LEFT: COREWEBVIEW2_TEXT_DIRECTION_KIND =
    COREWEBVIEW2_TEXT_DIRECTION_KIND(2i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_TRACKING_PREVENTION_LEVEL(pub u32);
pub const COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_NONE: COREWEBVIEW2_TRACKING_PREVENTION_LEVEL =
    COREWEBVIEW2_TRACKING_PREVENTION_LEVEL(0i64);
pub const COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_BASIC: COREWEBVIEW2_TRACKING_PREVENTION_LEVEL =
    COREWEBVIEW2_TRACKING_PREVENTION_LEVEL(1i64);
pub const COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_BALANCED: COREWEBVIEW2_TRACKING_PREVENTION_LEVEL =
    COREWEBVIEW2_TRACKING_PREVENTION_LEVEL(2i64);
pub const COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_STRICT: COREWEBVIEW2_TRACKING_PREVENTION_LEVEL =
    COREWEBVIEW2_TRACKING_PREVENTION_LEVEL(3i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_WEB_ERROR_STATUS(pub u32);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_UNKNOWN: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_COMMON_NAME_IS_INCORRECT:
    COREWEBVIEW2_WEB_ERROR_STATUS = COREWEBVIEW2_WEB_ERROR_STATUS(1i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_EXPIRED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(2i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CLIENT_CERTIFICATE_CONTAINS_ERRORS:
    COREWEBVIEW2_WEB_ERROR_STATUS = COREWEBVIEW2_WEB_ERROR_STATUS(3i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_REVOKED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(4i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_IS_INVALID: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(5i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_SERVER_UNREACHABLE: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(6i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_TIMEOUT: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(7i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_ERROR_HTTP_INVALID_SERVER_RESPONSE:
    COREWEBVIEW2_WEB_ERROR_STATUS = COREWEBVIEW2_WEB_ERROR_STATUS(8i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_ABORTED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(9i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_RESET: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(10i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_DISCONNECTED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(11i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CANNOT_CONNECT: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(12i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_HOST_NAME_NOT_RESOLVED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(13i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_OPERATION_CANCELED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(14i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_REDIRECT_FAILED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(15i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_UNEXPECTED_ERROR: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(16i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_VALID_AUTHENTICATION_CREDENTIALS_REQUIRED:
    COREWEBVIEW2_WEB_ERROR_STATUS = COREWEBVIEW2_WEB_ERROR_STATUS(17i64);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_VALID_PROXY_AUTHENTICATION_REQUIRED:
    COREWEBVIEW2_WEB_ERROR_STATUS = COREWEBVIEW2_WEB_ERROR_STATUS(18i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_WEB_RESOURCE_CONTEXT(pub u32);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_ALL: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_DOCUMENT: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(1i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_STYLESHEET: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(2i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_IMAGE: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(3i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MEDIA: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(4i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FONT: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(5i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SCRIPT: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(6i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_XML_HTTP_REQUEST: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(7i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FETCH: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(8i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_TEXT_TRACK: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(9i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_EVENT_SOURCE: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(10i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_WEBSOCKET: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(11i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MANIFEST: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(12i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SIGNED_EXCHANGE: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(13i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_PING: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(14i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_CSP_VIOLATION_REPORT:
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT = COREWEBVIEW2_WEB_RESOURCE_CONTEXT(15i64);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_OTHER: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(16i64);
#[repr(transparent)]
pub struct COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(pub u32);
pub const COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_NONE:
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(0i64);
pub const COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_DOCUMENT:
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(1i64);
pub const COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_SHARED_WORKER:
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(2i64);
pub const COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_SERVICE_WORKER:
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(4i64);
pub const COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_ALL:
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(4294967295i64);
#[repr(C)]
pub struct COREWEBVIEW2_COLOR {
    pub A: u32,
    pub R: u32,
    pub G: u32,
    pub B: u32,
}
#[repr(C)]
pub struct COREWEBVIEW2_PHYSICAL_KEY_STATUS {
    pub RepeatCount: u32,
    pub ScanCode: u32,
    pub IsExtendedKey: u32,
    pub IsMenuKeyDown: u32,
    pub WasKeyDown: u32,
    pub IsKeyReleased: u32,
}
#[repr(transparent)]
pub struct ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler(pub u32);
impl ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ExecuteScriptCompletedHandler(pub u32);
impl ICoreWebView2ExecuteScriptCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CapturePreviewCompletedHandler(pub u32);
impl ICoreWebView2CapturePreviewCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CallDevToolsProtocolMethodCompletedHandler(pub u32);
impl ICoreWebView2CallDevToolsProtocolMethodCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ContainsFullScreenElementChangedEventHandler(pub u32);
impl ICoreWebView2ContainsFullScreenElementChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ContentLoadingEventHandler(pub u32);
impl ICoreWebView2ContentLoadingEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2DocumentTitleChangedEventHandler(pub u32);
impl ICoreWebView2DocumentTitleChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2HistoryChangedEventHandler(pub u32);
impl ICoreWebView2HistoryChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationCompletedEventHandler(pub u32);
impl ICoreWebView2NavigationCompletedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationStartingEventHandler(pub u32);
impl ICoreWebView2NavigationStartingEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NewWindowRequestedEventHandler(pub u32);
impl ICoreWebView2NewWindowRequestedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionRequestedEventHandler(pub u32);
impl ICoreWebView2PermissionRequestedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessFailedEventHandler(pub u32);
impl ICoreWebView2ProcessFailedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ScriptDialogOpeningEventHandler(pub u32);
impl ICoreWebView2ScriptDialogOpeningEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2SourceChangedEventHandler(pub u32);
impl ICoreWebView2SourceChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebMessageReceivedEventHandler(pub u32);
impl ICoreWebView2WebMessageReceivedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceRequestedEventHandler(pub u32);
impl ICoreWebView2WebResourceRequestedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WindowCloseRequestedEventHandler(pub u32);
impl ICoreWebView2WindowCloseRequestedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2DOMContentLoadedEventHandler(pub u32);
impl ICoreWebView2DOMContentLoadedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceResponseReceivedEventHandler(pub u32);
impl ICoreWebView2WebResourceResponseReceivedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2TrySuspendCompletedHandler(pub u32);
impl ICoreWebView2TrySuspendCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2DownloadStartingEventHandler(pub u32);
impl ICoreWebView2DownloadStartingEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameCreatedEventHandler(pub u32);
impl ICoreWebView2FrameCreatedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2IsDocumentPlayingAudioChangedEventHandler(pub u32);
impl ICoreWebView2IsDocumentPlayingAudioChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2IsMutedChangedEventHandler(pub u32);
impl ICoreWebView2IsMutedChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler(pub u32);
impl ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ContextMenuRequestedEventHandler(pub u32);
impl ICoreWebView2ContextMenuRequestedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2StatusBarTextChangedEventHandler(pub u32);
impl ICoreWebView2StatusBarTextChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2GetFaviconCompletedHandler(pub u32);
impl ICoreWebView2GetFaviconCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FaviconChangedEventHandler(pub u32);
impl ICoreWebView2FaviconChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PrintCompletedHandler(pub u32);
impl ICoreWebView2PrintCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PrintToPdfStreamCompletedHandler(pub u32);
impl ICoreWebView2PrintToPdfStreamCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CursorChangedEventHandler(pub u32);
impl ICoreWebView2CursorChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NonClientRegionChangedEventHandler(pub u32);
impl ICoreWebView2NonClientRegionChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2RegionRectCollectionView(pub u32);
impl ICoreWebView2RegionRectCollectionView {
    pub fn get_Count(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2AcceleratorKeyPressedEventHandler(pub u32);
impl ICoreWebView2AcceleratorKeyPressedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FocusChangedEventHandler(pub u32);
impl ICoreWebView2FocusChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2MoveFocusRequestedEventHandler(pub u32);
impl ICoreWebView2MoveFocusRequestedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ZoomFactorChangedEventHandler(pub u32);
impl ICoreWebView2ZoomFactorChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2RasterizationScaleChangedEventHandler(pub u32);
impl ICoreWebView2RasterizationScaleChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CreateCoreWebView2ControllerCompletedHandler(pub u32);
impl ICoreWebView2CreateCoreWebView2ControllerCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NewBrowserVersionAvailableEventHandler(pub u32);
impl ICoreWebView2NewBrowserVersionAvailableEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserExtensionRemoveCompletedHandler(pub u32);
impl ICoreWebView2BrowserExtensionRemoveCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserExtensionEnableCompletedHandler(pub u32);
impl ICoreWebView2BrowserExtensionEnableCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2StringCollection(pub u32);
impl ICoreWebView2StringCollection {
    pub fn get_Count(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ClientCertificateCollection(pub u32);
impl ICoreWebView2ClientCertificateCollection {
    pub fn get_Count(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CustomItemSelectedEventHandler(pub u32);
impl ICoreWebView2CustomItemSelectedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2GetCookiesCompletedHandler(pub u32);
impl ICoreWebView2GetCookiesCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CookieList(pub u32);
impl ICoreWebView2CookieList {
    pub fn get_Count(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2BytesReceivedChangedEventHandler(pub u32);
impl ICoreWebView2BytesReceivedChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2EstimatedEndTimeChangedEventHandler(pub u32);
impl ICoreWebView2EstimatedEndTimeChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2StateChangedEventHandler(pub u32);
impl ICoreWebView2StateChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameDestroyedEventHandler(pub u32);
impl ICoreWebView2FrameDestroyedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameNameChangedEventHandler(pub u32);
impl ICoreWebView2FrameNameChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameContentLoadingEventHandler(pub u32);
impl ICoreWebView2FrameContentLoadingEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameDOMContentLoadedEventHandler(pub u32);
impl ICoreWebView2FrameDOMContentLoadedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameNavigationCompletedEventHandler(pub u32);
impl ICoreWebView2FrameNavigationCompletedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameNavigationStartingEventHandler(pub u32);
impl ICoreWebView2FrameNavigationStartingEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameWebMessageReceivedEventHandler(pub u32);
impl ICoreWebView2FrameWebMessageReceivedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProfileDeletedEventHandler(pub u32);
impl ICoreWebView2ProfileDeletedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceResponseViewGetContentCompletedHandler(pub u32);
impl ICoreWebView2WebResourceResponseViewGetContentCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NotificationCloseRequestedEventHandler(pub u32);
impl ICoreWebView2NotificationCloseRequestedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2(pub u32);
impl ICoreWebView2 {
    pub fn get_Settings(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Source(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Navigate(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn NavigateToString(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_NavigationStarting(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_NavigationStarting(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_ContentLoading(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ContentLoading(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_SourceChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_SourceChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_HistoryChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_HistoryChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_NavigationCompleted(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_NavigationCompleted(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_FrameNavigationStarting(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_FrameNavigationStarting(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_FrameNavigationCompleted(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_FrameNavigationCompleted(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_ScriptDialogOpening(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ScriptDialogOpening(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_PermissionRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_PermissionRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_ProcessFailed(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ProcessFailed(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn AddScriptToExecuteOnDocumentCreated(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn RemoveScriptToExecuteOnDocumentCreated(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ExecuteScript(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn CapturePreview(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Reload(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn PostWebMessageAsJson(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn PostWebMessageAsString(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_WebMessageReceived(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_WebMessageReceived(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn CallDevToolsProtocolMethod(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_BrowserProcessId(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_CanGoBack(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_CanGoForward(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GoBack(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GoForward(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDevToolsProtocolEventReceiver(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Stop(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_NewWindowRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_NewWindowRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_DocumentTitleChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_DocumentTitleChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_DocumentTitle(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn AddHostObjectToScript(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn RemoveHostObjectFromScript(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn OpenDevToolsWindow(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_ContainsFullScreenElementChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ContainsFullScreenElementChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ContainsFullScreenElement(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_WebResourceRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_WebResourceRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn AddWebResourceRequestedFilter(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn RemoveWebResourceRequestedFilter(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_WindowCloseRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_WindowCloseRequested(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_2(pub u32);
impl ICoreWebView2_2 {
    pub fn add_WebResourceResponseReceived(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_WebResourceResponseReceived(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn NavigateWithWebResourceRequest(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_DOMContentLoaded(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_DOMContentLoaded(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_CookieManager(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Environment(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_3(pub u32);
impl ICoreWebView2_3 {
    pub fn TrySuspend(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Resume(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsSuspended(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn SetVirtualHostNameToFolderMapping(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ClearVirtualHostNameToFolderMapping(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_4(pub u32);
impl ICoreWebView2_4 {
    pub fn add_FrameCreated(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_FrameCreated(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_DownloadStarting(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_DownloadStarting(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_8(pub u32);
impl ICoreWebView2_8 {
    pub fn add_IsMutedChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_IsMutedChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsMuted(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsMuted(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_IsDocumentPlayingAudioChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_IsDocumentPlayingAudioChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsDocumentPlayingAudio(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_9(pub u32);
impl ICoreWebView2_9 {
    pub fn add_IsDefaultDownloadDialogOpenChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_IsDefaultDownloadDialogOpenChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsDefaultDownloadDialogOpen(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn OpenDefaultDownloadDialog(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn CloseDefaultDownloadDialog(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_DefaultDownloadDialogCornerAlignment(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_DefaultDownloadDialogCornerAlignment(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_DefaultDownloadDialogMargin(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_DefaultDownloadDialogMargin(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_11(pub u32);
impl ICoreWebView2_11 {
    pub fn CallDevToolsProtocolMethodForSession(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_ContextMenuRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ContextMenuRequested(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_12(pub u32);
impl ICoreWebView2_12 {
    pub fn add_StatusBarTextChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_StatusBarTextChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_StatusBarText(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_15(pub u32);
impl ICoreWebView2_15 {
    pub fn add_FaviconChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_FaviconChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_FaviconUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetFavicon(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_16(pub u32);
impl ICoreWebView2_16 {
    pub fn Print(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ShowPrintUI(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn PrintToPdfStream(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Settings(pub u32);
impl ICoreWebView2Settings {
    pub fn get_IsScriptEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsScriptEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsWebMessageEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsWebMessageEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_AreDefaultScriptDialogsEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_AreDefaultScriptDialogsEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsStatusBarEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsStatusBarEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_AreDevToolsEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_AreDevToolsEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_AreDefaultContextMenusEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_AreDefaultContextMenusEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_AreHostObjectsAllowed(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_AreHostObjectsAllowed(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsZoomControlEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsZoomControlEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsBuiltInErrorPageEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsBuiltInErrorPageEnabled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Settings4(pub u32);
impl ICoreWebView2Settings4 {
    pub fn get_IsPasswordAutosaveEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsPasswordAutosaveEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsGeneralAutofillEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsGeneralAutofillEnabled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Controller(pub u32);
impl ICoreWebView2Controller {
    pub fn get_IsVisible(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsVisible(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Bounds(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Bounds(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ZoomFactor(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ZoomFactor(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_ZoomFactorChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ZoomFactorChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn SetBoundsAndZoomFactor(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn MoveFocus(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_MoveFocusRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_MoveFocusRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_GotFocus(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_GotFocus(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_LostFocus(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_LostFocus(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_AcceleratorKeyPressed(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_AcceleratorKeyPressed(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ParentWindow(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ParentWindow(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn NotifyParentWindowPositionChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Close(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_CoreWebView2(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Controller3(pub u32);
impl ICoreWebView2Controller3 {
    pub fn get_RasterizationScale(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_RasterizationScale(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ShouldDetectMonitorScaleChanges(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ShouldDetectMonitorScaleChanges(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_RasterizationScaleChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_RasterizationScaleChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_BoundsMode(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_BoundsMode(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment(pub u32);
impl ICoreWebView2Environment {
    pub fn CreateCoreWebView2Controller(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn CreateWebResourceResponse(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_BrowserVersionString(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_NewBrowserVersionAvailable(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_NewBrowserVersionAvailable(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions(pub u32);
impl ICoreWebView2EnvironmentOptions {
    pub fn get_AdditionalBrowserArguments(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_AdditionalBrowserArguments(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Language(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Language(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_TargetCompatibleBrowserVersion(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_TargetCompatibleBrowserVersion(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_AllowSingleSignOnUsingOSPrimaryAccount(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_AllowSingleSignOnUsingOSPrimaryAccount(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2AcceleratorKeyPressedEventArgs(pub u32);
impl ICoreWebView2AcceleratorKeyPressedEventArgs {
    pub fn get_KeyEventKind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_VirtualKey(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_KeyEventLParam(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PhysicalKeyStatus(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Handled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2BasicAuthenticationRequestedEventArgs(pub u32);
impl ICoreWebView2BasicAuthenticationRequestedEventArgs {
    pub fn get_Uri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Challenge(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Response(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2BasicAuthenticationResponse(pub u32);
impl ICoreWebView2BasicAuthenticationResponse {
    pub fn get_UserName(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_UserName(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Password(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Password(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserExtension(pub u32);
impl ICoreWebView2BrowserExtension {
    pub fn get_Id(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Name(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Remove(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Enable(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Certificate(pub u32);
impl ICoreWebView2Certificate {
    pub fn get_Subject(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Issuer(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ValidFrom(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ValidTo(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_DerEncodedSerialNumber(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_DisplayName(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ToPemEncoding(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PemEncodedIssuerCertificateChain(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ClientCertificate(pub u32);
impl ICoreWebView2ClientCertificate {
    pub fn get_Subject(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Issuer(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ValidFrom(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ValidTo(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_DerEncodedSerialNumber(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_DisplayName(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ToPemEncoding(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PemEncodedIssuerCertificateChain(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Kind(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ClientCertificateRequestedEventArgs(pub u32);
impl ICoreWebView2ClientCertificateRequestedEventArgs {
    pub fn get_Host(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Port(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsProxy(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_AllowedCertificateAuthorities(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_MutuallyTrustedCertificates(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_SelectedCertificate(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_SelectedCertificate(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CompositionController(pub u32);
impl ICoreWebView2CompositionController {
    pub fn get_RootVisualTarget(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_RootVisualTarget(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn SendMouseInput(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn SendPointerInput(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Cursor(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_SystemCursorId(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_CursorChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_CursorChanged(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CompositionController3(pub u32);
impl ICoreWebView2CompositionController3 {
    pub fn DragEnter(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn DragLeave(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn DragOver(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Drop(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CompositionController4(pub u32);
impl ICoreWebView2CompositionController4 {
    pub fn GetNonClientRegionAtPoint(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn QueryNonClientRegion(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_NonClientRegionChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_NonClientRegionChanged(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ContextMenuItem(pub u32);
impl ICoreWebView2ContextMenuItem {
    pub fn get_Name(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Label(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_CommandId(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ShortcutKeyDescription(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Icon(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Kind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsChecked(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsChecked(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Children(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_CustomItemSelected(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_CustomItemSelected(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ContextMenuTarget(pub u32);
impl ICoreWebView2ContextMenuTarget {
    pub fn get_Kind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsEditable(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsRequestedForMainFrame(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PageUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_FrameUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_HasLinkUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_LinkUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_HasLinkText(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_LinkText(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_HasSourceUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_SourceUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_HasSelection(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_SelectionText(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ContextMenuRequestedEventArgs(pub u32);
impl ICoreWebView2ContextMenuRequestedEventArgs {
    pub fn get_MenuItems(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ContextMenuTarget(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Location(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_SelectedCommandId(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_SelectedCommandId(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ControllerOptions(pub u32);
impl ICoreWebView2ControllerOptions {
    pub fn get_ProfileName(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ProfileName(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsInPrivateModeEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsInPrivateModeEnabled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Cookie(pub u32);
impl ICoreWebView2Cookie {
    pub fn get_Name(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Value(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Value(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Domain(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Path(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Expires(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Expires(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsHttpOnly(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsHttpOnly(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_SameSite(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_SameSite(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsSecure(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsSecure(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsSession(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CookieManager(pub u32);
impl ICoreWebView2CookieManager {
    pub fn CreateCookie(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn CopyCookie(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetCookies(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn AddOrUpdateCookie(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn DeleteCookie(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn DeleteCookies(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn DeleteCookiesWithDomainAndPath(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn DeleteAllCookies(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CustomSchemeRegistration(pub u32);
impl ICoreWebView2CustomSchemeRegistration {
    pub fn get_SchemeName(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_TreatAsSecure(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_TreatAsSecure(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetAllowedOrigins(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn SetAllowedOrigins(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_HasAuthorityComponent(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_HasAuthorityComponent(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2DownloadOperation(pub u32);
impl ICoreWebView2DownloadOperation {
    pub fn add_BytesReceivedChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_BytesReceivedChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_EstimatedEndTimeChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_EstimatedEndTimeChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_StateChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_StateChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Uri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ContentDisposition(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_MimeType(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_TotalBytesToReceive(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_BytesReceived(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_EstimatedEndTime(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ResultFilePath(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_State(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_InterruptReason(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Pause(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Resume(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_CanResume(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2DownloadStartingEventArgs(pub u32);
impl ICoreWebView2DownloadStartingEventArgs {
    pub fn get_DownloadOperation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ResultFilePath(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ResultFilePath(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ExecuteScriptResult(pub u32);
impl ICoreWebView2ExecuteScriptResult {
    pub fn get_Succeeded(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ResultAsJson(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn TryGetResultAsString(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Exception(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Frame(pub u32);
impl ICoreWebView2Frame {
    pub fn get_Name(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_NameChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_NameChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn AddHostObjectToScriptWithOrigins(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn RemoveHostObjectFromScript(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_Destroyed(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_Destroyed(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn IsDestroyed(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Frame2(pub u32);
impl ICoreWebView2Frame2 {
    pub fn add_NavigationStarting(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_NavigationStarting(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_ContentLoading(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ContentLoading(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_NavigationCompleted(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_NavigationCompleted(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_DOMContentLoaded(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_DOMContentLoaded(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ExecuteScript(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn PostWebMessageAsJson(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn PostWebMessageAsString(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_WebMessageReceived(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_WebMessageReceived(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameInfo2(pub u32);
impl ICoreWebView2FrameInfo2 {
    pub fn get_ParentFrameInfo(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_FrameId(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_FrameKind(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2HttpHeadersCollectionIterator(pub u32);
impl ICoreWebView2HttpHeadersCollectionIterator {
    pub fn GetCurrentHeader(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_HasCurrentHeader(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn MoveNext(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2LaunchingExternalUriSchemeEventArgs(pub u32);
impl ICoreWebView2LaunchingExternalUriSchemeEventArgs {
    pub fn get_Uri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_InitiatingOrigin(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsUserInitiated(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2MoveFocusRequestedEventArgs(pub u32);
impl ICoreWebView2MoveFocusRequestedEventArgs {
    pub fn get_Reason(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Handled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationCompletedEventArgs(pub u32);
impl ICoreWebView2NavigationCompletedEventArgs {
    pub fn get_IsSuccess(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_WebErrorStatus(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_NavigationId(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationStartingEventArgs(pub u32);
impl ICoreWebView2NavigationStartingEventArgs {
    pub fn get_Uri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsUserInitiated(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsRedirected(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_RequestHeaders(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_NavigationId(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NewWindowRequestedEventArgs(pub u32);
impl ICoreWebView2NewWindowRequestedEventArgs {
    pub fn get_Uri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_NewWindow(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_NewWindow(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsUserInitiated(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_WindowFeatures(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionRequestedEventArgs(pub u32);
impl ICoreWebView2PermissionRequestedEventArgs {
    pub fn get_Uri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PermissionKind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsUserInitiated(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_State(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_State(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionSettingCollectionView(pub u32);
impl ICoreWebView2PermissionSettingCollectionView {
    pub fn GetValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Count(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PointerInfo(pub u32);
impl ICoreWebView2PointerInfo {
    pub fn get_PointerKind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PointerKind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PointerId(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PointerId(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_FrameId(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_FrameId(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PointerFlags(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PointerFlags(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PointerDeviceRect(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PointerDeviceRect(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_DisplayRect(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_DisplayRect(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PixelLocation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PixelLocation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_HimetricLocation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_HimetricLocation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PixelLocationRaw(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PixelLocationRaw(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_HimetricLocationRaw(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_HimetricLocationRaw(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Time(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Time(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_HistoryCount(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_HistoryCount(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_InputData(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_InputData(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_KeyStates(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_KeyStates(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PerformanceCount(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PerformanceCount(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ButtonChangeKind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ButtonChangeKind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PenFlags(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PenFlags(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PenMask(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PenMask(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PenPressure(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PenPressure(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PenRotation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PenRotation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PenTiltX(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PenTiltX(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PenTiltY(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PenTiltY(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_TouchFlags(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_TouchFlags(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_TouchMask(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_TouchMask(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_TouchContact(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_TouchContact(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_TouchContactRaw(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_TouchContactRaw(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_TouchOrientation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_TouchOrientation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_TouchPressure(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_TouchPressure(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PrintSettings(pub u32);
impl ICoreWebView2PrintSettings {
    pub fn get_Orientation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Orientation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ScaleFactor(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ScaleFactor(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PageWidth(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PageWidth(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PageHeight(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PageHeight(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_MarginTop(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_MarginTop(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_MarginBottom(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_MarginBottom(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_MarginLeft(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_MarginLeft(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_MarginRight(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_MarginRight(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ShouldPrintBackgrounds(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ShouldPrintBackgrounds(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ShouldPrintSelectionOnly(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ShouldPrintSelectionOnly(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ShouldPrintHeaderAndFooter(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ShouldPrintHeaderAndFooter(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_HeaderTitle(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_HeaderTitle(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_FooterUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_FooterUri(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PrintSettings2(pub u32);
impl ICoreWebView2PrintSettings2 {
    pub fn get_PageRanges(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PageRanges(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PagesPerSide(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PagesPerSide(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Copies(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Copies(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Collation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Collation(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ColorMode(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ColorMode(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Duplex(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Duplex(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_MediaSize(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_MediaSize(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PrinterName(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PrinterName(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessExtendedInfo(pub u32);
impl ICoreWebView2ProcessExtendedInfo {
    pub fn get_ProcessInfo(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_AssociatedFrameInfos(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessFailedEventArgs2(pub u32);
impl ICoreWebView2ProcessFailedEventArgs2 {
    pub fn get_Reason(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ExitCode(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ProcessDescription(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_FrameInfosForFailedProcess(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessInfo(pub u32);
impl ICoreWebView2ProcessInfo {
    pub fn get_ProcessId(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Kind(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Profile(pub u32);
impl ICoreWebView2Profile {
    pub fn get_ProfileName(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsInPrivateModeEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ProfilePath(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_DefaultDownloadFolderPath(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_DefaultDownloadFolderPath(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PreferredColorScheme(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PreferredColorScheme(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Profile6(pub u32);
impl ICoreWebView2Profile6 {
    pub fn get_IsPasswordAutosaveEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsPasswordAutosaveEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsGeneralAutofillEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsGeneralAutofillEnabled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Profile8(pub u32);
impl ICoreWebView2Profile8 {
    pub fn Delete(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn add_Deleted(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_Deleted(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ScriptDialogOpeningEventArgs(pub u32);
impl ICoreWebView2ScriptDialogOpeningEventArgs {
    pub fn get_Uri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Kind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Message(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Accept(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_DefaultText(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ResultText(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ResultText(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ScriptException(pub u32);
impl ICoreWebView2ScriptException {
    pub fn get_LineNumber(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ColumnNumber(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Name(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Message(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ToJson(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ServerCertificateErrorDetectedEventArgs(pub u32);
impl ICoreWebView2ServerCertificateErrorDetectedEventArgs {
    pub fn get_ErrorStatus(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_RequestUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ServerCertificate(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Action(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Action(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2SharedBuffer(pub u32);
impl ICoreWebView2SharedBuffer {
    pub fn get_Size(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Buffer(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn OpenStream(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_FileMappingHandle(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Close(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceRequest(pub u32);
impl ICoreWebView2WebResourceRequest {
    pub fn get_Uri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Uri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Method(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Method(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Content(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Content(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Headers(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceRequestedEventArgs(pub u32);
impl ICoreWebView2WebResourceRequestedEventArgs {
    pub fn get_Request(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Response(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Response(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ResourceContext(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceResponse(pub u32);
impl ICoreWebView2WebResourceResponse {
    pub fn get_Content(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Content(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Headers(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_StatusCode(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_StatusCode(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ReasonPhrase(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ReasonPhrase(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceResponseView(pub u32);
impl ICoreWebView2WebResourceResponseView {
    pub fn get_Headers(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_StatusCode(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ReasonPhrase(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetContent(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WindowFeatures(pub u32);
impl ICoreWebView2WindowFeatures {
    pub fn get_HasPosition(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_HasSize(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Left(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Top(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Height(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Width(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ShouldDisplayMenuBar(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ShouldDisplayStatus(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ShouldDisplayToolbar(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ShouldDisplayScrollBars(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ObjectCollection(pub u32);
impl ICoreWebView2ObjectCollection {
    pub fn RemoveValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn InsertValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Notification(pub u32);
impl ICoreWebView2Notification {
    pub fn add_CloseRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_CloseRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ReportShown(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ReportClicked(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ReportClosed(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Body(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Direction(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Language(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Tag(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IconUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Title(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_BadgeUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_BodyImageUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ShouldRenotify(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_RequiresInteraction(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_IsSilent(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Timestamp(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetVibrationPattern(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NotificationReceivedEventArgs(pub u32);
impl ICoreWebView2NotificationReceivedEventArgs {
    pub fn get_SenderOrigin(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Notification(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2SaveAsUIShowingEventArgs(pub u32);
impl ICoreWebView2SaveAsUIShowingEventArgs {
    pub fn get_ContentMimeType(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_SuppressDefaultDialog(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_SuppressDefaultDialog(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_SaveAsFilePath(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_SaveAsFilePath(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_AllowReplace(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_AllowReplace(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Kind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Kind(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2AcceleratorKeyPressedEventArgs2(pub u32);
impl ICoreWebView2AcceleratorKeyPressedEventArgs2 {
    pub fn get_IsBrowserAcceleratorKeyEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsBrowserAcceleratorKeyEnabled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserProcessExitedEventArgs(pub u32);
impl ICoreWebView2BrowserProcessExitedEventArgs {
    pub fn get_BrowserProcessExitKind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_BrowserProcessId(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CompositionController2(pub u32);
impl ICoreWebView2CompositionController2 {
    pub fn get_AutomationProvider(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ContentLoadingEventArgs(pub u32);
impl ICoreWebView2ContentLoadingEventArgs {
    pub fn get_IsErrorPage(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_NavigationId(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ContextMenuItemCollection(pub u32);
impl ICoreWebView2ContextMenuItemCollection {
    pub fn get_Count(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn RemoveValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn InsertValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Controller2(pub u32);
impl ICoreWebView2Controller2 {
    pub fn get_DefaultBackgroundColor(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_DefaultBackgroundColor(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Controller4(pub u32);
impl ICoreWebView2Controller4 {
    pub fn get_AllowExternalDrop(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_AllowExternalDrop(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ControllerOptions2(pub u32);
impl ICoreWebView2ControllerOptions2 {
    pub fn get_ScriptLocale(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ScriptLocale(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2DOMContentLoadedEventArgs(pub u32);
impl ICoreWebView2DOMContentLoadedEventArgs {
    pub fn get_NavigationId(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Deferral(pub u32);
impl ICoreWebView2Deferral {
    pub fn Complete(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2DevToolsProtocolEventReceivedEventArgs(pub u32);
impl ICoreWebView2DevToolsProtocolEventReceivedEventArgs {
    pub fn get_ParameterObjectAsJson(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2DevToolsProtocolEventReceivedEventArgs2(pub u32);
impl ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 {
    pub fn get_SessionId(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2DevToolsProtocolEventReceivedEventHandler(pub u32);
impl ICoreWebView2DevToolsProtocolEventReceivedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2DevToolsProtocolEventReceiver(pub u32);
impl ICoreWebView2DevToolsProtocolEventReceiver {
    pub fn add_DevToolsProtocolEventReceived(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_DevToolsProtocolEventReceived(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment10(pub u32);
impl ICoreWebView2Environment10 {
    pub fn CreateCoreWebView2ControllerOptions(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn CreateCoreWebView2ControllerWithOptions(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn CreateCoreWebView2CompositionControllerWithOptions(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment11(pub u32);
impl ICoreWebView2Environment11 {
    pub fn get_FailureReportFolderPath(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment12(pub u32);
impl ICoreWebView2Environment12 {
    pub fn CreateSharedBuffer(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2GetProcessExtendedInfosCompletedHandler(pub u32);
impl ICoreWebView2GetProcessExtendedInfosCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessExtendedInfoCollection(pub u32);
impl ICoreWebView2ProcessExtendedInfoCollection {
    pub fn get_Count(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment13(pub u32);
impl ICoreWebView2Environment13 {
    pub fn GetProcessExtendedInfos(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment14(pub u32);
impl ICoreWebView2Environment14 {
    pub fn CreateWebFileSystemFileHandle(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn CreateWebFileSystemDirectoryHandle(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn CreateObjectCollection(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment2(pub u32);
impl ICoreWebView2Environment2 {
    pub fn CreateWebResourceRequest(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler(pub u32);
impl ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment3(pub u32);
impl ICoreWebView2Environment3 {
    pub fn CreateCoreWebView2CompositionController(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn CreateCoreWebView2PointerInfo(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment4(pub u32);
impl ICoreWebView2Environment4 {
    pub fn GetAutomationProviderForWindow(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserProcessExitedEventHandler(pub u32);
impl ICoreWebView2BrowserProcessExitedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment5(pub u32);
impl ICoreWebView2Environment5 {
    pub fn add_BrowserProcessExited(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_BrowserProcessExited(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment6(pub u32);
impl ICoreWebView2Environment6 {
    pub fn CreatePrintSettings(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment7(pub u32);
impl ICoreWebView2Environment7 {
    pub fn get_UserDataFolder(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessInfosChangedEventHandler(pub u32);
impl ICoreWebView2ProcessInfosChangedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessInfoCollection(pub u32);
impl ICoreWebView2ProcessInfoCollection {
    pub fn get_Count(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment8(pub u32);
impl ICoreWebView2Environment8 {
    pub fn add_ProcessInfosChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ProcessInfosChanged(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetProcessInfos(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Environment9(pub u32);
impl ICoreWebView2Environment9 {
    pub fn CreateContextMenuItem(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions2(pub u32);
impl ICoreWebView2EnvironmentOptions2 {
    pub fn get_ExclusiveUserDataFolderAccess(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ExclusiveUserDataFolderAccess(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions3(pub u32);
impl ICoreWebView2EnvironmentOptions3 {
    pub fn get_IsCustomCrashReportingEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsCustomCrashReportingEnabled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions4(pub u32);
impl ICoreWebView2EnvironmentOptions4 {
    pub fn GetCustomSchemeRegistrations(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn SetCustomSchemeRegistrations(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions5(pub u32);
impl ICoreWebView2EnvironmentOptions5 {
    pub fn get_EnableTrackingPrevention(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_EnableTrackingPrevention(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions6(pub u32);
impl ICoreWebView2EnvironmentOptions6 {
    pub fn get_AreBrowserExtensionsEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_AreBrowserExtensionsEnabled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions8(pub u32);
impl ICoreWebView2EnvironmentOptions8 {
    pub fn get_ScrollBarStyle(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ScrollBarStyle(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions7(pub u32);
impl ICoreWebView2EnvironmentOptions7 {
    pub fn get_ChannelSearchKind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ChannelSearchKind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_ReleaseChannels(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_ReleaseChannels(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler(pub u32);
impl ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2File(pub u32);
impl ICoreWebView2File {
    pub fn get_Path(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FileSystemHandle(pub u32);
impl ICoreWebView2FileSystemHandle {
    pub fn get_Kind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Path(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Permission(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FramePermissionRequestedEventHandler(pub u32);
impl ICoreWebView2FramePermissionRequestedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Frame3(pub u32);
impl ICoreWebView2Frame3 {
    pub fn add_PermissionRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_PermissionRequested(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Frame4(pub u32);
impl ICoreWebView2Frame4 {
    pub fn PostSharedBufferToScript(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Frame5(pub u32);
impl ICoreWebView2Frame5 {
    pub fn get_FrameId(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameScreenCaptureStartingEventHandler(pub u32);
impl ICoreWebView2FrameScreenCaptureStartingEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Frame6(pub u32);
impl ICoreWebView2Frame6 {
    pub fn add_ScreenCaptureStarting(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ScreenCaptureStarting(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameChildFrameCreatedEventHandler(pub u32);
impl ICoreWebView2FrameChildFrameCreatedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Frame7(pub u32);
impl ICoreWebView2Frame7 {
    pub fn add_FrameCreated(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_FrameCreated(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameCreatedEventArgs(pub u32);
impl ICoreWebView2FrameCreatedEventArgs {
    pub fn get_Frame(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameInfo(pub u32);
impl ICoreWebView2FrameInfo {
    pub fn get_Name(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Source(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameInfoCollection(pub u32);
impl ICoreWebView2FrameInfoCollection {
    pub fn GetIterator(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2FrameInfoCollectionIterator(pub u32);
impl ICoreWebView2FrameInfoCollectionIterator {
    pub fn get_HasCurrent(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetCurrent(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn MoveNext(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2HttpRequestHeaders(pub u32);
impl ICoreWebView2HttpRequestHeaders {
    pub fn GetHeader(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetHeaders(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Contains(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn SetHeader(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn RemoveHeader(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetIterator(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2HttpResponseHeaders(pub u32);
impl ICoreWebView2HttpResponseHeaders {
    pub fn AppendHeader(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn Contains(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetHeader(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetHeaders(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetIterator(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationCompletedEventArgs2(pub u32);
impl ICoreWebView2NavigationCompletedEventArgs2 {
    pub fn get_HttpStatusCode(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationStartingEventArgs2(pub u32);
impl ICoreWebView2NavigationStartingEventArgs2 {
    pub fn get_AdditionalAllowedFrameAncestors(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_AdditionalAllowedFrameAncestors(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationStartingEventArgs3(pub u32);
impl ICoreWebView2NavigationStartingEventArgs3 {
    pub fn get_NavigationKind(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NewWindowRequestedEventArgs2(pub u32);
impl ICoreWebView2NewWindowRequestedEventArgs2 {
    pub fn get_Name(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NewWindowRequestedEventArgs3(pub u32);
impl ICoreWebView2NewWindowRequestedEventArgs3 {
    pub fn get_OriginalSourceFrameInfo(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NonClientRegionChangedEventArgs(pub u32);
impl ICoreWebView2NonClientRegionChangedEventArgs {
    pub fn get_RegionKind(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ObjectCollectionView(pub u32);
impl ICoreWebView2ObjectCollectionView {
    pub fn get_Count(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionRequestedEventArgs2(pub u32);
impl ICoreWebView2PermissionRequestedEventArgs2 {
    pub fn get_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Handled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionRequestedEventArgs3(pub u32);
impl ICoreWebView2PermissionRequestedEventArgs3 {
    pub fn get_SavesInProfile(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_SavesInProfile(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionSetting(pub u32);
impl ICoreWebView2PermissionSetting {
    pub fn get_PermissionKind(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PermissionOrigin(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_PermissionState(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessFailedEventArgs(pub u32);
impl ICoreWebView2ProcessFailedEventArgs {
    pub fn get_ProcessFailedKind(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessFailedEventArgs3(pub u32);
impl ICoreWebView2ProcessFailedEventArgs3 {
    pub fn get_FailureSourceModulePath(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ClearBrowsingDataCompletedHandler(pub u32);
impl ICoreWebView2ClearBrowsingDataCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Profile2(pub u32);
impl ICoreWebView2Profile2 {
    pub fn ClearBrowsingData(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ClearBrowsingDataInTimeRange(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ClearBrowsingDataAll(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Profile3(pub u32);
impl ICoreWebView2Profile3 {
    pub fn get_PreferredTrackingPreventionLevel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_PreferredTrackingPreventionLevel(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2SetPermissionStateCompletedHandler(pub u32);
impl ICoreWebView2SetPermissionStateCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler(pub u32);
impl ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Profile4(pub u32);
impl ICoreWebView2Profile4 {
    pub fn SetPermissionState(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetNonDefaultPermissionSettings(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Profile5(pub u32);
impl ICoreWebView2Profile5 {
    pub fn get_CookieManager(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProfileAddBrowserExtensionCompletedHandler(pub u32);
impl ICoreWebView2ProfileAddBrowserExtensionCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler(pub u32);
impl ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserExtensionList(pub u32);
impl ICoreWebView2BrowserExtensionList {
    pub fn get_Count(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetValueAtIndex(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Profile7(pub u32);
impl ICoreWebView2Profile7 {
    pub fn AddBrowserExtension(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetBrowserExtensions(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2SaveFileSecurityCheckStartingEventArgs(pub u32);
impl ICoreWebView2SaveFileSecurityCheckStartingEventArgs {
    pub fn get_CancelSave(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_CancelSave(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_DocumentOriginUri(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_FileExtension(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_FilePath(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_SuppressDefaultPolicy(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_SuppressDefaultPolicy(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ScreenCaptureStartingEventArgs(pub u32);
impl ICoreWebView2ScreenCaptureStartingEventArgs {
    pub fn get_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Cancel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_Handled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_OriginalSourceFrameInfo(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn GetDeferral(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Settings2(pub u32);
impl ICoreWebView2Settings2 {
    pub fn get_UserAgent(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_UserAgent(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Settings3(pub u32);
impl ICoreWebView2Settings3 {
    pub fn get_AreBrowserAcceleratorKeysEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_AreBrowserAcceleratorKeysEnabled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Settings5(pub u32);
impl ICoreWebView2Settings5 {
    pub fn get_IsPinchZoomEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsPinchZoomEnabled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Settings6(pub u32);
impl ICoreWebView2Settings6 {
    pub fn get_IsSwipeNavigationEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsSwipeNavigationEnabled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Settings7(pub u32);
impl ICoreWebView2Settings7 {
    pub fn get_HiddenPdfToolbarItems(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_HiddenPdfToolbarItems(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Settings8(pub u32);
impl ICoreWebView2Settings8 {
    pub fn get_IsReputationCheckingRequired(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsReputationCheckingRequired(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2Settings9(pub u32);
impl ICoreWebView2Settings9 {
    pub fn get_IsNonClientRegionSupportEnabled(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_IsNonClientRegionSupportEnabled(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2SourceChangedEventArgs(pub u32);
impl ICoreWebView2SourceChangedEventArgs {
    pub fn get_IsNewDocument(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebMessageReceivedEventArgs(pub u32);
impl ICoreWebView2WebMessageReceivedEventArgs {
    pub fn get_Source(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_WebMessageAsJson(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn TryGetWebMessageAsString(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebMessageReceivedEventArgs2(pub u32);
impl ICoreWebView2WebMessageReceivedEventArgs2 {
    pub fn get_AdditionalObjects(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceRequestedEventArgs2(pub u32);
impl ICoreWebView2WebResourceRequestedEventArgs2 {
    pub fn get_RequestedSourceKind(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceResponseReceivedEventArgs(pub u32);
impl ICoreWebView2WebResourceResponseReceivedEventArgs {
    pub fn get_Request(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn get_Response(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2BasicAuthenticationRequestedEventHandler(pub u32);
impl ICoreWebView2BasicAuthenticationRequestedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_10(pub u32);
impl ICoreWebView2_10 {
    pub fn add_BasicAuthenticationRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_BasicAuthenticationRequested(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_13(pub u32);
impl ICoreWebView2_13 {
    pub fn get_Profile(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler(pub u32);
impl ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ServerCertificateErrorDetectedEventHandler(pub u32);
impl ICoreWebView2ServerCertificateErrorDetectedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_14(pub u32);
impl ICoreWebView2_14 {
    pub fn add_ServerCertificateErrorDetected(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ServerCertificateErrorDetected(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ClearServerCertificateErrorActions(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_17(pub u32);
impl ICoreWebView2_17 {
    pub fn PostSharedBufferToScript(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2LaunchingExternalUriSchemeEventHandler(pub u32);
impl ICoreWebView2LaunchingExternalUriSchemeEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_18(pub u32);
impl ICoreWebView2_18 {
    pub fn add_LaunchingExternalUriScheme(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_LaunchingExternalUriScheme(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_19(pub u32);
impl ICoreWebView2_19 {
    pub fn get_MemoryUsageTargetLevel(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn put_MemoryUsageTargetLevel(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_20(pub u32);
impl ICoreWebView2_20 {
    pub fn get_FrameId(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ExecuteScriptWithResultCompletedHandler(pub u32);
impl ICoreWebView2ExecuteScriptWithResultCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_21(pub u32);
impl ICoreWebView2_21 {
    pub fn ExecuteScriptWithResult(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_22(pub u32);
impl ICoreWebView2_22 {
    pub fn AddWebResourceRequestedFilterWithRequestSourceKinds(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn RemoveWebResourceRequestedFilterWithRequestSourceKinds(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ShowSaveAsUICompletedHandler(pub u32);
impl ICoreWebView2ShowSaveAsUICompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2SaveAsUIShowingEventHandler(pub u32);
impl ICoreWebView2SaveAsUIShowingEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_25(pub u32);
impl ICoreWebView2_25 {
    pub fn add_SaveAsUIShowing(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_SaveAsUIShowing(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn ShowSaveAsUI(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_23(pub u32);
impl ICoreWebView2_23 {
    pub fn PostWebMessageAsJsonWithAdditionalObjects(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ScreenCaptureStartingEventHandler(pub u32);
impl ICoreWebView2ScreenCaptureStartingEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_27(pub u32);
impl ICoreWebView2_27 {
    pub fn add_ScreenCaptureStarting(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ScreenCaptureStarting(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2SaveFileSecurityCheckStartingEventHandler(pub u32);
impl ICoreWebView2SaveFileSecurityCheckStartingEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_26(pub u32);
impl ICoreWebView2_26 {
    pub fn add_SaveFileSecurityCheckStarting(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_SaveFileSecurityCheckStarting(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2NotificationReceivedEventHandler(pub u32);
impl ICoreWebView2NotificationReceivedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_24(pub u32);
impl ICoreWebView2_24 {
    pub fn add_NotificationReceived(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_NotificationReceived(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2ClientCertificateRequestedEventHandler(pub u32);
impl ICoreWebView2ClientCertificateRequestedEventHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_5(pub u32);
impl ICoreWebView2_5 {
    pub fn add_ClientCertificateRequested(&self) -> crate::HRESULT {
        todo!()
    }
    pub fn remove_ClientCertificateRequested(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_6(pub u32);
impl ICoreWebView2_6 {
    pub fn OpenTaskManagerWindow(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2PrintToPdfCompletedHandler(pub u32);
impl ICoreWebView2PrintToPdfCompletedHandler {
    pub fn Invoke(&self) -> crate::HRESULT {
        todo!()
    }
}
#[repr(transparent)]
pub struct ICoreWebView2_7(pub u32);
impl ICoreWebView2_7 {
    pub fn PrintToPdf(&self) -> crate::HRESULT {
        todo!()
    }
}
