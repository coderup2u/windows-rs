#[repr(transparent)]
pub struct COREWEBVIEW2_BOUNDS_MODE(pub u32);
pub const COREWEBVIEW2_BOUNDS_MODE_USE_RAW_PIXELS: COREWEBVIEW2_BOUNDS_MODE =
    COREWEBVIEW2_BOUNDS_MODE(0);
pub const COREWEBVIEW2_BOUNDS_MODE_USE_RASTERIZATION_SCALE: COREWEBVIEW2_BOUNDS_MODE =
    COREWEBVIEW2_BOUNDS_MODE(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND(pub u32);
pub const COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND_NORMAL: COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND =
    COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND(0);
pub const COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND_FAILED: COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND =
    COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_BROWSING_DATA_KINDS(pub u32);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_FILE_SYSTEMS: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x1: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_INDEXED_DB: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x2: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_LOCAL_STORAGE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x4: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_WEB_SQL: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x8: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_CACHE_STORAGE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x10: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_DOM_STORAGE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x20: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_COOKIES: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x40: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_SITE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x80: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_DISK_CACHE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x100: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_DOWNLOAD_HISTORY: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x200: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_GENERAL_AUTOFILL: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x400: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_PASSWORD_AUTOSAVE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x800: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_BROWSING_HISTORY: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x1000: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_SETTINGS: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x2000: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_PROFILE: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x4000: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const COREWEBVIEW2_BROWSING_DATA_KINDS_SERVICE_WORKERS: COREWEBVIEW2_BROWSING_DATA_KINDS =
    COREWEBVIEW2_BROWSING_DATA_KINDS(0);
pub const x8000: COREWEBVIEW2_BROWSING_DATA_KINDS = COREWEBVIEW2_BROWSING_DATA_KINDS(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT(pub u32);
pub const COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_PNG: COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT =
    COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT(0);
pub const COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_JPEG:
    COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT = COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_CHANNEL_SEARCH_KIND(pub u32);
pub const COREWEBVIEW2_CHANNEL_SEARCH_KIND_MOST_STABLE: COREWEBVIEW2_CHANNEL_SEARCH_KIND =
    COREWEBVIEW2_CHANNEL_SEARCH_KIND(0);
pub const COREWEBVIEW2_CHANNEL_SEARCH_KIND_LEAST_STABLE: COREWEBVIEW2_CHANNEL_SEARCH_KIND =
    COREWEBVIEW2_CHANNEL_SEARCH_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_CLIENT_CERTIFICATE_KIND(pub u32);
pub const COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_SMART_CARD: COREWEBVIEW2_CLIENT_CERTIFICATE_KIND =
    COREWEBVIEW2_CLIENT_CERTIFICATE_KIND(0);
pub const COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_PIN: COREWEBVIEW2_CLIENT_CERTIFICATE_KIND =
    COREWEBVIEW2_CLIENT_CERTIFICATE_KIND(0);
pub const COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_OTHER: COREWEBVIEW2_CLIENT_CERTIFICATE_KIND =
    COREWEBVIEW2_CLIENT_CERTIFICATE_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(pub u32);
pub const COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_COMMAND: COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND =
    COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(0);
pub const COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_CHECK_BOX: COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND =
    COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(0);
pub const COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_RADIO: COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND =
    COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(0);
pub const COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_SEPARATOR: COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND =
    COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(0);
pub const COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_SUBMENU: COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND =
    COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(pub u32);
pub const COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_PAGE: COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND =
    COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(0);
pub const COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_IMAGE: COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND =
    COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(0);
pub const COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_SELECTED_TEXT:
    COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND = COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(0);
pub const COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_AUDIO: COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND =
    COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(0);
pub const COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_VIDEO: COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND =
    COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_COOKIE_SAME_SITE_KIND(pub u32);
pub const COREWEBVIEW2_COOKIE_SAME_SITE_KIND_NONE: COREWEBVIEW2_COOKIE_SAME_SITE_KIND =
    COREWEBVIEW2_COOKIE_SAME_SITE_KIND(0);
pub const COREWEBVIEW2_COOKIE_SAME_SITE_KIND_LAX: COREWEBVIEW2_COOKIE_SAME_SITE_KIND =
    COREWEBVIEW2_COOKIE_SAME_SITE_KIND(0);
pub const COREWEBVIEW2_COOKIE_SAME_SITE_KIND_STRICT: COREWEBVIEW2_COOKIE_SAME_SITE_KIND =
    COREWEBVIEW2_COOKIE_SAME_SITE_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT(pub u32);
pub const COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_LEFT:
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT =
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT(0);
pub const COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_RIGHT:
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT =
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT(0);
pub const COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_BOTTOM_LEFT:
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT =
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT(0);
pub const COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_BOTTOM_RIGHT:
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT =
    COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(pub u32);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NONE: COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON =
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_FAILED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_ACCESS_DENIED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NO_SPACE:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NAME_TOO_LONG:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_LARGE:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_MALICIOUS:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TRANSIENT_ERROR:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_BLOCKED_BY_POLICY:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_SECURITY_CHECK_FAILED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_SHORT:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_HASH_MISMATCH:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_FAILED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_TIMEOUT:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_DISCONNECTED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_SERVER_DOWN:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_INVALID_REQUEST:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FAILED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_NO_RANGE:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_BAD_CONTENT:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNAUTHORIZED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CERTIFICATE_PROBLEM:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FORBIDDEN:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNEXPECTED_RESPONSE:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CONTENT_LENGTH_MISMATCH:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CROSS_ORIGIN_REDIRECT:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_CANCELED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_SHUTDOWN:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_PAUSED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
pub const COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_DOWNLOAD_PROCESS_CRASHED:
    COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON = COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_DOWNLOAD_STATE(pub u32);
pub const COREWEBVIEW2_DOWNLOAD_STATE_IN_PROGRESS: COREWEBVIEW2_DOWNLOAD_STATE =
    COREWEBVIEW2_DOWNLOAD_STATE(0);
pub const COREWEBVIEW2_DOWNLOAD_STATE_INTERRUPTED: COREWEBVIEW2_DOWNLOAD_STATE =
    COREWEBVIEW2_DOWNLOAD_STATE(0);
pub const COREWEBVIEW2_DOWNLOAD_STATE_COMPLETED: COREWEBVIEW2_DOWNLOAD_STATE =
    COREWEBVIEW2_DOWNLOAD_STATE(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_FAVICON_IMAGE_FORMAT(pub u32);
pub const COREWEBVIEW2_FAVICON_IMAGE_FORMAT_PNG: COREWEBVIEW2_FAVICON_IMAGE_FORMAT =
    COREWEBVIEW2_FAVICON_IMAGE_FORMAT(0);
pub const COREWEBVIEW2_FAVICON_IMAGE_FORMAT_JPEG: COREWEBVIEW2_FAVICON_IMAGE_FORMAT =
    COREWEBVIEW2_FAVICON_IMAGE_FORMAT(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND(pub u32);
pub const COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND_FILE: COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND =
    COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND(0);
pub const COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND_DIRECTORY: COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND =
    COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION(pub u32);
pub const COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION_READ_ONLY:
    COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION = COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION(0);
pub const COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION_READ_WRITE:
    COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION = COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_FRAME_KIND(pub u32);
pub const COREWEBVIEW2_FRAME_KIND_UNKNOWN: COREWEBVIEW2_FRAME_KIND = COREWEBVIEW2_FRAME_KIND(0);
pub const COREWEBVIEW2_FRAME_KIND_MAIN_FRAME: COREWEBVIEW2_FRAME_KIND = COREWEBVIEW2_FRAME_KIND(0);
pub const COREWEBVIEW2_FRAME_KIND_IFRAME: COREWEBVIEW2_FRAME_KIND = COREWEBVIEW2_FRAME_KIND(0);
pub const COREWEBVIEW2_FRAME_KIND_EMBED: COREWEBVIEW2_FRAME_KIND = COREWEBVIEW2_FRAME_KIND(0);
pub const COREWEBVIEW2_FRAME_KIND_OBJECT: COREWEBVIEW2_FRAME_KIND = COREWEBVIEW2_FRAME_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND(pub u32);
pub const COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_DENY: COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND =
    COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND(0);
pub const COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_ALLOW: COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND =
    COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND(0);
pub const COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_DENY_CORS: COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND =
    COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_KEY_EVENT_KIND(pub u32);
pub const COREWEBVIEW2_KEY_EVENT_KIND_KEY_DOWN: COREWEBVIEW2_KEY_EVENT_KIND =
    COREWEBVIEW2_KEY_EVENT_KIND(0);
pub const COREWEBVIEW2_KEY_EVENT_KIND_KEY_UP: COREWEBVIEW2_KEY_EVENT_KIND =
    COREWEBVIEW2_KEY_EVENT_KIND(0);
pub const COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_DOWN: COREWEBVIEW2_KEY_EVENT_KIND =
    COREWEBVIEW2_KEY_EVENT_KIND(0);
pub const COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_UP: COREWEBVIEW2_KEY_EVENT_KIND =
    COREWEBVIEW2_KEY_EVENT_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL(pub u32);
pub const COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL_NORMAL: COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL =
    COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL(0);
pub const COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL_LOW: COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL =
    COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_MOUSE_EVENT_KIND(pub u32);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_HORIZONTAL_WHEEL: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOUBLE_CLICK: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOWN: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_UP: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_LEAVE: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOUBLE_CLICK: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOWN: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_UP: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_MOVE: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOUBLE_CLICK: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOWN: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_UP: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_WHEEL: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOUBLE_CLICK: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOWN: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_UP: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_NON_CLIENT_RIGHT_BUTTON_DOWN:
    COREWEBVIEW2_MOUSE_EVENT_KIND = COREWEBVIEW2_MOUSE_EVENT_KIND(0);
pub const COREWEBVIEW2_MOUSE_EVENT_KIND_NON_CLIENT_RIGHT_BUTTON_UP: COREWEBVIEW2_MOUSE_EVENT_KIND =
    COREWEBVIEW2_MOUSE_EVENT_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(pub u32);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_NONE: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const x0: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_LEFT_BUTTON: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const x1: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_RIGHT_BUTTON:
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const x2: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_SHIFT: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const x4: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_CONTROL: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const x8: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_MIDDLE_BUTTON:
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const x10: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON1: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const x20: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON2: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS =
    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
pub const x40: COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS = COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_MOVE_FOCUS_REASON(pub u32);
pub const COREWEBVIEW2_MOVE_FOCUS_REASON_PROGRAMMATIC: COREWEBVIEW2_MOVE_FOCUS_REASON =
    COREWEBVIEW2_MOVE_FOCUS_REASON(0);
pub const COREWEBVIEW2_MOVE_FOCUS_REASON_NEXT: COREWEBVIEW2_MOVE_FOCUS_REASON =
    COREWEBVIEW2_MOVE_FOCUS_REASON(0);
pub const COREWEBVIEW2_MOVE_FOCUS_REASON_PREVIOUS: COREWEBVIEW2_MOVE_FOCUS_REASON =
    COREWEBVIEW2_MOVE_FOCUS_REASON(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_NAVIGATION_KIND(pub u32);
pub const COREWEBVIEW2_NAVIGATION_KIND_RELOAD: COREWEBVIEW2_NAVIGATION_KIND =
    COREWEBVIEW2_NAVIGATION_KIND(0);
pub const COREWEBVIEW2_NAVIGATION_KIND_BACK_OR_FORWARD: COREWEBVIEW2_NAVIGATION_KIND =
    COREWEBVIEW2_NAVIGATION_KIND(0);
pub const COREWEBVIEW2_NAVIGATION_KIND_NEW_DOCUMENT: COREWEBVIEW2_NAVIGATION_KIND =
    COREWEBVIEW2_NAVIGATION_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_NON_CLIENT_REGION_KIND(pub u32);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_NOWHERE: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(0);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_CLIENT: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(0);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_CAPTION: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(0);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_MINIMIZE: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(0);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_MAXIMIZE: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(0);
pub const COREWEBVIEW2_NON_CLIENT_REGION_KIND_CLOSE: COREWEBVIEW2_NON_CLIENT_REGION_KIND =
    COREWEBVIEW2_NON_CLIENT_REGION_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PDF_TOOLBAR_ITEMS(pub u32);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_NONE: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x0: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SAVE: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x1: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PRINT: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x2: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SAVE_AS: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x4: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ZOOM_IN: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x8: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ZOOM_OUT: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x10: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ROTATE: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x20: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_FIT_PAGE: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x40: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PAGE_LAYOUT: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x80: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_BOOKMARKS: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x100: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PAGE_SELECTOR: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x200: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SEARCH: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x400: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_FULL_SCREEN: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x800: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const COREWEBVIEW2_PDF_TOOLBAR_ITEMS_MORE_SETTINGS: COREWEBVIEW2_PDF_TOOLBAR_ITEMS =
    COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
pub const x1000: COREWEBVIEW2_PDF_TOOLBAR_ITEMS = COREWEBVIEW2_PDF_TOOLBAR_ITEMS(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PERMISSION_KIND(pub u32);
pub const COREWEBVIEW2_PERMISSION_KIND_UNKNOWN_PERMISSION: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_MICROPHONE: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_CAMERA: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_GEOLOCATION: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_NOTIFICATIONS: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_OTHER_SENSORS: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_CLIPBOARD_READ: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_MULTIPLE_AUTOMATIC_DOWNLOADS: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_FILE_READ_WRITE: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_AUTOPLAY: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_LOCAL_FONTS: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_MIDI_SYSTEM_EXCLUSIVE_MESSAGES:
    COREWEBVIEW2_PERMISSION_KIND = COREWEBVIEW2_PERMISSION_KIND(0);
pub const COREWEBVIEW2_PERMISSION_KIND_WINDOW_MANAGEMENT: COREWEBVIEW2_PERMISSION_KIND =
    COREWEBVIEW2_PERMISSION_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PERMISSION_STATE(pub u32);
pub const COREWEBVIEW2_PERMISSION_STATE_DEFAULT: COREWEBVIEW2_PERMISSION_STATE =
    COREWEBVIEW2_PERMISSION_STATE(0);
pub const COREWEBVIEW2_PERMISSION_STATE_ALLOW: COREWEBVIEW2_PERMISSION_STATE =
    COREWEBVIEW2_PERMISSION_STATE(0);
pub const COREWEBVIEW2_PERMISSION_STATE_DENY: COREWEBVIEW2_PERMISSION_STATE =
    COREWEBVIEW2_PERMISSION_STATE(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_POINTER_EVENT_KIND(pub u32);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_ACTIVATE: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(0);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_DOWN: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(0);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_ENTER: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(0);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_LEAVE: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(0);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_UP: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(0);
pub const COREWEBVIEW2_POINTER_EVENT_KIND_UPDATE: COREWEBVIEW2_POINTER_EVENT_KIND =
    COREWEBVIEW2_POINTER_EVENT_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PREFERRED_COLOR_SCHEME(pub u32);
pub const COREWEBVIEW2_PREFERRED_COLOR_SCHEME_AUTO: COREWEBVIEW2_PREFERRED_COLOR_SCHEME =
    COREWEBVIEW2_PREFERRED_COLOR_SCHEME(0);
pub const COREWEBVIEW2_PREFERRED_COLOR_SCHEME_LIGHT: COREWEBVIEW2_PREFERRED_COLOR_SCHEME =
    COREWEBVIEW2_PREFERRED_COLOR_SCHEME(0);
pub const COREWEBVIEW2_PREFERRED_COLOR_SCHEME_DARK: COREWEBVIEW2_PREFERRED_COLOR_SCHEME =
    COREWEBVIEW2_PREFERRED_COLOR_SCHEME(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_COLLATION(pub u32);
pub const COREWEBVIEW2_PRINT_COLLATION_DEFAULT: COREWEBVIEW2_PRINT_COLLATION =
    COREWEBVIEW2_PRINT_COLLATION(0);
pub const COREWEBVIEW2_PRINT_COLLATION_COLLATED: COREWEBVIEW2_PRINT_COLLATION =
    COREWEBVIEW2_PRINT_COLLATION(0);
pub const COREWEBVIEW2_PRINT_COLLATION_UNCOLLATED: COREWEBVIEW2_PRINT_COLLATION =
    COREWEBVIEW2_PRINT_COLLATION(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_COLOR_MODE(pub u32);
pub const COREWEBVIEW2_PRINT_COLOR_MODE_DEFAULT: COREWEBVIEW2_PRINT_COLOR_MODE =
    COREWEBVIEW2_PRINT_COLOR_MODE(0);
pub const COREWEBVIEW2_PRINT_COLOR_MODE_COLOR: COREWEBVIEW2_PRINT_COLOR_MODE =
    COREWEBVIEW2_PRINT_COLOR_MODE(0);
pub const COREWEBVIEW2_PRINT_COLOR_MODE_GRAYSCALE: COREWEBVIEW2_PRINT_COLOR_MODE =
    COREWEBVIEW2_PRINT_COLOR_MODE(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_DIALOG_KIND(pub u32);
pub const COREWEBVIEW2_PRINT_DIALOG_KIND_BROWSER: COREWEBVIEW2_PRINT_DIALOG_KIND =
    COREWEBVIEW2_PRINT_DIALOG_KIND(0);
pub const COREWEBVIEW2_PRINT_DIALOG_KIND_SYSTEM: COREWEBVIEW2_PRINT_DIALOG_KIND =
    COREWEBVIEW2_PRINT_DIALOG_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_DUPLEX(pub u32);
pub const COREWEBVIEW2_PRINT_DUPLEX_DEFAULT: COREWEBVIEW2_PRINT_DUPLEX =
    COREWEBVIEW2_PRINT_DUPLEX(0);
pub const COREWEBVIEW2_PRINT_DUPLEX_ONE_SIDED: COREWEBVIEW2_PRINT_DUPLEX =
    COREWEBVIEW2_PRINT_DUPLEX(0);
pub const COREWEBVIEW2_PRINT_DUPLEX_TWO_SIDED_LONG_EDGE: COREWEBVIEW2_PRINT_DUPLEX =
    COREWEBVIEW2_PRINT_DUPLEX(0);
pub const COREWEBVIEW2_PRINT_DUPLEX_TWO_SIDED_SHORT_EDGE: COREWEBVIEW2_PRINT_DUPLEX =
    COREWEBVIEW2_PRINT_DUPLEX(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_MEDIA_SIZE(pub u32);
pub const COREWEBVIEW2_PRINT_MEDIA_SIZE_DEFAULT: COREWEBVIEW2_PRINT_MEDIA_SIZE =
    COREWEBVIEW2_PRINT_MEDIA_SIZE(0);
pub const COREWEBVIEW2_PRINT_MEDIA_SIZE_CUSTOM: COREWEBVIEW2_PRINT_MEDIA_SIZE =
    COREWEBVIEW2_PRINT_MEDIA_SIZE(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_ORIENTATION(pub u32);
pub const COREWEBVIEW2_PRINT_ORIENTATION_PORTRAIT: COREWEBVIEW2_PRINT_ORIENTATION =
    COREWEBVIEW2_PRINT_ORIENTATION(0);
pub const COREWEBVIEW2_PRINT_ORIENTATION_LANDSCAPE: COREWEBVIEW2_PRINT_ORIENTATION =
    COREWEBVIEW2_PRINT_ORIENTATION(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PRINT_STATUS(pub u32);
pub const COREWEBVIEW2_PRINT_STATUS_SUCCEEDED: COREWEBVIEW2_PRINT_STATUS =
    COREWEBVIEW2_PRINT_STATUS(0);
pub const COREWEBVIEW2_PRINT_STATUS_PRINTER_UNAVAILABLE: COREWEBVIEW2_PRINT_STATUS =
    COREWEBVIEW2_PRINT_STATUS(0);
pub const COREWEBVIEW2_PRINT_STATUS_OTHER_ERROR: COREWEBVIEW2_PRINT_STATUS =
    COREWEBVIEW2_PRINT_STATUS(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PROCESS_FAILED_KIND(pub u32);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_BROWSER_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(0);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_EXITED: COREWEBVIEW2_PROCESS_FAILED_KIND =
    COREWEBVIEW2_PROCESS_FAILED_KIND(0);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_UNRESPONSIVE:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(0);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_FRAME_RENDER_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(0);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_UTILITY_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(0);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_SANDBOX_HELPER_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(0);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_GPU_PROCESS_EXITED: COREWEBVIEW2_PROCESS_FAILED_KIND =
    COREWEBVIEW2_PROCESS_FAILED_KIND(0);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_PLUGIN_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(0);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_BROKER_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(0);
pub const COREWEBVIEW2_PROCESS_FAILED_KIND_UNKNOWN_PROCESS_EXITED:
    COREWEBVIEW2_PROCESS_FAILED_KIND = COREWEBVIEW2_PROCESS_FAILED_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PROCESS_FAILED_REASON(pub u32);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_UNEXPECTED: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(0);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_UNRESPONSIVE: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(0);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_TERMINATED: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(0);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_CRASHED: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(0);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_LAUNCH_FAILED: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(0);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_OUT_OF_MEMORY: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(0);
pub const COREWEBVIEW2_PROCESS_FAILED_REASON_PROFILE_DELETED: COREWEBVIEW2_PROCESS_FAILED_REASON =
    COREWEBVIEW2_PROCESS_FAILED_REASON(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_PROCESS_KIND(pub u32);
pub const COREWEBVIEW2_PROCESS_KIND_BROWSER: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(0);
pub const COREWEBVIEW2_PROCESS_KIND_RENDERER: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(0);
pub const COREWEBVIEW2_PROCESS_KIND_UTILITY: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(0);
pub const COREWEBVIEW2_PROCESS_KIND_SANDBOX_HELPER: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(0);
pub const COREWEBVIEW2_PROCESS_KIND_GPU: COREWEBVIEW2_PROCESS_KIND = COREWEBVIEW2_PROCESS_KIND(0);
pub const COREWEBVIEW2_PROCESS_KIND_PPAPI_PLUGIN: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(0);
pub const COREWEBVIEW2_PROCESS_KIND_PPAPI_BROKER: COREWEBVIEW2_PROCESS_KIND =
    COREWEBVIEW2_PROCESS_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_RELEASE_CHANNELS(pub u32);
pub const COREWEBVIEW2_RELEASE_CHANNELS_NONE: COREWEBVIEW2_RELEASE_CHANNELS =
    COREWEBVIEW2_RELEASE_CHANNELS(0);
pub const x0: COREWEBVIEW2_RELEASE_CHANNELS = COREWEBVIEW2_RELEASE_CHANNELS(0);
pub const COREWEBVIEW2_RELEASE_CHANNELS_STABLE: COREWEBVIEW2_RELEASE_CHANNELS =
    COREWEBVIEW2_RELEASE_CHANNELS(0);
pub const x1: COREWEBVIEW2_RELEASE_CHANNELS = COREWEBVIEW2_RELEASE_CHANNELS(0);
pub const COREWEBVIEW2_RELEASE_CHANNELS_BETA: COREWEBVIEW2_RELEASE_CHANNELS =
    COREWEBVIEW2_RELEASE_CHANNELS(0);
pub const x2: COREWEBVIEW2_RELEASE_CHANNELS = COREWEBVIEW2_RELEASE_CHANNELS(0);
pub const COREWEBVIEW2_RELEASE_CHANNELS_DEV: COREWEBVIEW2_RELEASE_CHANNELS =
    COREWEBVIEW2_RELEASE_CHANNELS(0);
pub const x4: COREWEBVIEW2_RELEASE_CHANNELS = COREWEBVIEW2_RELEASE_CHANNELS(0);
pub const COREWEBVIEW2_RELEASE_CHANNELS_CANARY: COREWEBVIEW2_RELEASE_CHANNELS =
    COREWEBVIEW2_RELEASE_CHANNELS(0);
pub const x8: COREWEBVIEW2_RELEASE_CHANNELS = COREWEBVIEW2_RELEASE_CHANNELS(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_SAVE_AS_KIND(pub u32);
pub const COREWEBVIEW2_SAVE_AS_KIND_DEFAULT: COREWEBVIEW2_SAVE_AS_KIND =
    COREWEBVIEW2_SAVE_AS_KIND(0);
pub const COREWEBVIEW2_SAVE_AS_KIND_HTML_ONLY: COREWEBVIEW2_SAVE_AS_KIND =
    COREWEBVIEW2_SAVE_AS_KIND(0);
pub const COREWEBVIEW2_SAVE_AS_KIND_SINGLE_FILE: COREWEBVIEW2_SAVE_AS_KIND =
    COREWEBVIEW2_SAVE_AS_KIND(0);
pub const COREWEBVIEW2_SAVE_AS_KIND_COMPLETE: COREWEBVIEW2_SAVE_AS_KIND =
    COREWEBVIEW2_SAVE_AS_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_SAVE_AS_UI_RESULT(pub u32);
pub const COREWEBVIEW2_SAVE_AS_UI_RESULT_SUCCESS: COREWEBVIEW2_SAVE_AS_UI_RESULT =
    COREWEBVIEW2_SAVE_AS_UI_RESULT(0);
pub const COREWEBVIEW2_SAVE_AS_UI_RESULT_INVALID_PATH: COREWEBVIEW2_SAVE_AS_UI_RESULT =
    COREWEBVIEW2_SAVE_AS_UI_RESULT(0);
pub const COREWEBVIEW2_SAVE_AS_UI_RESULT_FILE_ALREADY_EXISTS: COREWEBVIEW2_SAVE_AS_UI_RESULT =
    COREWEBVIEW2_SAVE_AS_UI_RESULT(0);
pub const COREWEBVIEW2_SAVE_AS_UI_RESULT_KIND_NOT_SUPPORTED: COREWEBVIEW2_SAVE_AS_UI_RESULT =
    COREWEBVIEW2_SAVE_AS_UI_RESULT(0);
pub const COREWEBVIEW2_SAVE_AS_UI_RESULT_CANCELLED: COREWEBVIEW2_SAVE_AS_UI_RESULT =
    COREWEBVIEW2_SAVE_AS_UI_RESULT(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_SCRIPT_DIALOG_KIND(pub u32);
pub const COREWEBVIEW2_SCRIPT_DIALOG_KIND_ALERT: COREWEBVIEW2_SCRIPT_DIALOG_KIND =
    COREWEBVIEW2_SCRIPT_DIALOG_KIND(0);
pub const COREWEBVIEW2_SCRIPT_DIALOG_KIND_CONFIRM: COREWEBVIEW2_SCRIPT_DIALOG_KIND =
    COREWEBVIEW2_SCRIPT_DIALOG_KIND(0);
pub const COREWEBVIEW2_SCRIPT_DIALOG_KIND_PROMPT: COREWEBVIEW2_SCRIPT_DIALOG_KIND =
    COREWEBVIEW2_SCRIPT_DIALOG_KIND(0);
pub const COREWEBVIEW2_SCRIPT_DIALOG_KIND_BEFOREUNLOAD: COREWEBVIEW2_SCRIPT_DIALOG_KIND =
    COREWEBVIEW2_SCRIPT_DIALOG_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_SCROLLBAR_STYLE(pub u32);
pub const COREWEBVIEW2_SCROLLBAR_STYLE_DEFAULT: COREWEBVIEW2_SCROLLBAR_STYLE =
    COREWEBVIEW2_SCROLLBAR_STYLE(0);
pub const COREWEBVIEW2_SCROLLBAR_STYLE_FLUENT_OVERLAY: COREWEBVIEW2_SCROLLBAR_STYLE =
    COREWEBVIEW2_SCROLLBAR_STYLE(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION(pub u32);
pub const COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_ALWAYS_ALLOW:
    COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION = COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION(0);
pub const COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_CANCEL:
    COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION = COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION(0);
pub const COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_DEFAULT:
    COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION = COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_SHARED_BUFFER_ACCESS(pub u32);
pub const COREWEBVIEW2_SHARED_BUFFER_ACCESS_READ_ONLY: COREWEBVIEW2_SHARED_BUFFER_ACCESS =
    COREWEBVIEW2_SHARED_BUFFER_ACCESS(0);
pub const COREWEBVIEW2_SHARED_BUFFER_ACCESS_READ_WRITE: COREWEBVIEW2_SHARED_BUFFER_ACCESS =
    COREWEBVIEW2_SHARED_BUFFER_ACCESS(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_TEXT_DIRECTION_KIND(pub u32);
pub const COREWEBVIEW2_TEXT_DIRECTION_KIND_DEFAULT: COREWEBVIEW2_TEXT_DIRECTION_KIND =
    COREWEBVIEW2_TEXT_DIRECTION_KIND(0);
pub const COREWEBVIEW2_TEXT_DIRECTION_KIND_LEFT_TO_RIGHT: COREWEBVIEW2_TEXT_DIRECTION_KIND =
    COREWEBVIEW2_TEXT_DIRECTION_KIND(0);
pub const COREWEBVIEW2_TEXT_DIRECTION_KIND_RIGHT_TO_LEFT: COREWEBVIEW2_TEXT_DIRECTION_KIND =
    COREWEBVIEW2_TEXT_DIRECTION_KIND(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_TRACKING_PREVENTION_LEVEL(pub u32);
pub const COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_NONE: COREWEBVIEW2_TRACKING_PREVENTION_LEVEL =
    COREWEBVIEW2_TRACKING_PREVENTION_LEVEL(0);
pub const COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_BASIC: COREWEBVIEW2_TRACKING_PREVENTION_LEVEL =
    COREWEBVIEW2_TRACKING_PREVENTION_LEVEL(0);
pub const COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_BALANCED: COREWEBVIEW2_TRACKING_PREVENTION_LEVEL =
    COREWEBVIEW2_TRACKING_PREVENTION_LEVEL(0);
pub const COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_STRICT: COREWEBVIEW2_TRACKING_PREVENTION_LEVEL =
    COREWEBVIEW2_TRACKING_PREVENTION_LEVEL(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_WEB_ERROR_STATUS(pub u32);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_UNKNOWN: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_COMMON_NAME_IS_INCORRECT:
    COREWEBVIEW2_WEB_ERROR_STATUS = COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_EXPIRED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CLIENT_CERTIFICATE_CONTAINS_ERRORS:
    COREWEBVIEW2_WEB_ERROR_STATUS = COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_REVOKED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_IS_INVALID: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_SERVER_UNREACHABLE: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_TIMEOUT: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_ERROR_HTTP_INVALID_SERVER_RESPONSE:
    COREWEBVIEW2_WEB_ERROR_STATUS = COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_ABORTED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_RESET: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_DISCONNECTED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_CANNOT_CONNECT: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_HOST_NAME_NOT_RESOLVED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_OPERATION_CANCELED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_REDIRECT_FAILED: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_UNEXPECTED_ERROR: COREWEBVIEW2_WEB_ERROR_STATUS =
    COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_VALID_AUTHENTICATION_CREDENTIALS_REQUIRED:
    COREWEBVIEW2_WEB_ERROR_STATUS = COREWEBVIEW2_WEB_ERROR_STATUS(0);
pub const COREWEBVIEW2_WEB_ERROR_STATUS_VALID_PROXY_AUTHENTICATION_REQUIRED:
    COREWEBVIEW2_WEB_ERROR_STATUS = COREWEBVIEW2_WEB_ERROR_STATUS(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_WEB_RESOURCE_CONTEXT(pub u32);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_ALL: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_DOCUMENT: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_STYLESHEET: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_IMAGE: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MEDIA: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FONT: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SCRIPT: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_XML_HTTP_REQUEST: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FETCH: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_TEXT_TRACK: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_EVENT_SOURCE: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_WEBSOCKET: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MANIFEST: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SIGNED_EXCHANGE: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_PING: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_CSP_VIOLATION_REPORT:
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT = COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
pub const COREWEBVIEW2_WEB_RESOURCE_CONTEXT_OTHER: COREWEBVIEW2_WEB_RESOURCE_CONTEXT =
    COREWEBVIEW2_WEB_RESOURCE_CONTEXT(0);
#[repr(transparent)]
pub struct COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(pub u32);
pub const COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_NONE:
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(0);
pub const x0: COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(0);
pub const COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_DOCUMENT:
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(0);
pub const x1: COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(0);
pub const COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_SHARED_WORKER:
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(0);
pub const x2: COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(0);
pub const COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_SERVICE_WORKER:
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(0);
pub const x4: COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(0);
pub const COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_ALL:
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(0);
pub const xFFFFFFFF: COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS =
    COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS(0);
#[repr(C)]
pub struct COREWEBVIEW2_COLOR {
    pub A: u32,
    pub R: u32,
    pub G: u32,
    pub B: u32,
}
#[repr(C)]
pub struct COREWEBVIEW2_PHYSICAL_KEY_STATUS {
    pub RepeatCount: u32,
    pub ScanCode: u32,
    pub IsExtendedKey: u32,
    pub IsMenuKeyDown: u32,
    pub WasKeyDown: u32,
    pub IsKeyReleased: u32,
}
#[repr(transparent)]
pub struct ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler(pub u32);
impl ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ExecuteScriptCompletedHandler(pub u32);
impl ICoreWebView2ExecuteScriptCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CapturePreviewCompletedHandler(pub u32);
impl ICoreWebView2CapturePreviewCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CallDevToolsProtocolMethodCompletedHandler(pub u32);
impl ICoreWebView2CallDevToolsProtocolMethodCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ContainsFullScreenElementChangedEventHandler(pub u32);
impl ICoreWebView2ContainsFullScreenElementChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ContentLoadingEventHandler(pub u32);
impl ICoreWebView2ContentLoadingEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2DocumentTitleChangedEventHandler(pub u32);
impl ICoreWebView2DocumentTitleChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2HistoryChangedEventHandler(pub u32);
impl ICoreWebView2HistoryChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationCompletedEventHandler(pub u32);
impl ICoreWebView2NavigationCompletedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationStartingEventHandler(pub u32);
impl ICoreWebView2NavigationStartingEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NewWindowRequestedEventHandler(pub u32);
impl ICoreWebView2NewWindowRequestedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionRequestedEventHandler(pub u32);
impl ICoreWebView2PermissionRequestedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessFailedEventHandler(pub u32);
impl ICoreWebView2ProcessFailedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ScriptDialogOpeningEventHandler(pub u32);
impl ICoreWebView2ScriptDialogOpeningEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2SourceChangedEventHandler(pub u32);
impl ICoreWebView2SourceChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebMessageReceivedEventHandler(pub u32);
impl ICoreWebView2WebMessageReceivedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceRequestedEventHandler(pub u32);
impl ICoreWebView2WebResourceRequestedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WindowCloseRequestedEventHandler(pub u32);
impl ICoreWebView2WindowCloseRequestedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2DOMContentLoadedEventHandler(pub u32);
impl ICoreWebView2DOMContentLoadedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceResponseReceivedEventHandler(pub u32);
impl ICoreWebView2WebResourceResponseReceivedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2TrySuspendCompletedHandler(pub u32);
impl ICoreWebView2TrySuspendCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2DownloadStartingEventHandler(pub u32);
impl ICoreWebView2DownloadStartingEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameCreatedEventHandler(pub u32);
impl ICoreWebView2FrameCreatedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2IsDocumentPlayingAudioChangedEventHandler(pub u32);
impl ICoreWebView2IsDocumentPlayingAudioChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2IsMutedChangedEventHandler(pub u32);
impl ICoreWebView2IsMutedChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler(pub u32);
impl ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ContextMenuRequestedEventHandler(pub u32);
impl ICoreWebView2ContextMenuRequestedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2StatusBarTextChangedEventHandler(pub u32);
impl ICoreWebView2StatusBarTextChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2GetFaviconCompletedHandler(pub u32);
impl ICoreWebView2GetFaviconCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FaviconChangedEventHandler(pub u32);
impl ICoreWebView2FaviconChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PrintCompletedHandler(pub u32);
impl ICoreWebView2PrintCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PrintToPdfStreamCompletedHandler(pub u32);
impl ICoreWebView2PrintToPdfStreamCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CursorChangedEventHandler(pub u32);
impl ICoreWebView2CursorChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NonClientRegionChangedEventHandler(pub u32);
impl ICoreWebView2NonClientRegionChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2RegionRectCollectionView(pub u32);
impl ICoreWebView2RegionRectCollectionView {
    pub fn Count() -> HRESULT;
    pub fn GetValueAtIndex() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2AcceleratorKeyPressedEventHandler(pub u32);
impl ICoreWebView2AcceleratorKeyPressedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FocusChangedEventHandler(pub u32);
impl ICoreWebView2FocusChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2MoveFocusRequestedEventHandler(pub u32);
impl ICoreWebView2MoveFocusRequestedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ZoomFactorChangedEventHandler(pub u32);
impl ICoreWebView2ZoomFactorChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2RasterizationScaleChangedEventHandler(pub u32);
impl ICoreWebView2RasterizationScaleChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CreateCoreWebView2ControllerCompletedHandler(pub u32);
impl ICoreWebView2CreateCoreWebView2ControllerCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NewBrowserVersionAvailableEventHandler(pub u32);
impl ICoreWebView2NewBrowserVersionAvailableEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserExtensionRemoveCompletedHandler(pub u32);
impl ICoreWebView2BrowserExtensionRemoveCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserExtensionEnableCompletedHandler(pub u32);
impl ICoreWebView2BrowserExtensionEnableCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2StringCollection(pub u32);
impl ICoreWebView2StringCollection {
    pub fn Count() -> HRESULT;
    pub fn GetValueAtIndex() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ClientCertificateCollection(pub u32);
impl ICoreWebView2ClientCertificateCollection {
    pub fn Count() -> HRESULT;
    pub fn GetValueAtIndex() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CustomItemSelectedEventHandler(pub u32);
impl ICoreWebView2CustomItemSelectedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2GetCookiesCompletedHandler(pub u32);
impl ICoreWebView2GetCookiesCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CookieList(pub u32);
impl ICoreWebView2CookieList {
    pub fn Count() -> HRESULT;
    pub fn GetValueAtIndex() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2BytesReceivedChangedEventHandler(pub u32);
impl ICoreWebView2BytesReceivedChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2EstimatedEndTimeChangedEventHandler(pub u32);
impl ICoreWebView2EstimatedEndTimeChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2StateChangedEventHandler(pub u32);
impl ICoreWebView2StateChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameDestroyedEventHandler(pub u32);
impl ICoreWebView2FrameDestroyedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameNameChangedEventHandler(pub u32);
impl ICoreWebView2FrameNameChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameContentLoadingEventHandler(pub u32);
impl ICoreWebView2FrameContentLoadingEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameDOMContentLoadedEventHandler(pub u32);
impl ICoreWebView2FrameDOMContentLoadedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameNavigationCompletedEventHandler(pub u32);
impl ICoreWebView2FrameNavigationCompletedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameNavigationStartingEventHandler(pub u32);
impl ICoreWebView2FrameNavigationStartingEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameWebMessageReceivedEventHandler(pub u32);
impl ICoreWebView2FrameWebMessageReceivedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProfileDeletedEventHandler(pub u32);
impl ICoreWebView2ProfileDeletedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceResponseViewGetContentCompletedHandler(pub u32);
impl ICoreWebView2WebResourceResponseViewGetContentCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NotificationCloseRequestedEventHandler(pub u32);
impl ICoreWebView2NotificationCloseRequestedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2(pub u32);
impl ICoreWebView2 {
    pub fn Settings() -> HRESULT;
    pub fn Source() -> HRESULT;
    pub fn Navigate() -> HRESULT;
    pub fn NavigateToString() -> HRESULT;
    pub fn add_NavigationStarting() -> HRESULT;
    pub fn remove_NavigationStarting() -> HRESULT;
    pub fn add_ContentLoading() -> HRESULT;
    pub fn remove_ContentLoading() -> HRESULT;
    pub fn add_SourceChanged() -> HRESULT;
    pub fn remove_SourceChanged() -> HRESULT;
    pub fn add_HistoryChanged() -> HRESULT;
    pub fn remove_HistoryChanged() -> HRESULT;
    pub fn add_NavigationCompleted() -> HRESULT;
    pub fn remove_NavigationCompleted() -> HRESULT;
    pub fn add_FrameNavigationStarting() -> HRESULT;
    pub fn remove_FrameNavigationStarting() -> HRESULT;
    pub fn add_FrameNavigationCompleted() -> HRESULT;
    pub fn remove_FrameNavigationCompleted() -> HRESULT;
    pub fn add_ScriptDialogOpening() -> HRESULT;
    pub fn remove_ScriptDialogOpening() -> HRESULT;
    pub fn add_PermissionRequested() -> HRESULT;
    pub fn remove_PermissionRequested() -> HRESULT;
    pub fn add_ProcessFailed() -> HRESULT;
    pub fn remove_ProcessFailed() -> HRESULT;
    pub fn AddScriptToExecuteOnDocumentCreated() -> HRESULT;
    pub fn RemoveScriptToExecuteOnDocumentCreated() -> HRESULT;
    pub fn ExecuteScript() -> HRESULT;
    pub fn CapturePreview() -> HRESULT;
    pub fn Reload() -> HRESULT;
    pub fn PostWebMessageAsJson() -> HRESULT;
    pub fn PostWebMessageAsString() -> HRESULT;
    pub fn add_WebMessageReceived() -> HRESULT;
    pub fn remove_WebMessageReceived() -> HRESULT;
    pub fn CallDevToolsProtocolMethod() -> HRESULT;
    pub fn BrowserProcessId() -> HRESULT;
    pub fn CanGoBack() -> HRESULT;
    pub fn CanGoForward() -> HRESULT;
    pub fn GoBack() -> HRESULT;
    pub fn GoForward() -> HRESULT;
    pub fn GetDevToolsProtocolEventReceiver() -> HRESULT;
    pub fn Stop() -> HRESULT;
    pub fn add_NewWindowRequested() -> HRESULT;
    pub fn remove_NewWindowRequested() -> HRESULT;
    pub fn add_DocumentTitleChanged() -> HRESULT;
    pub fn remove_DocumentTitleChanged() -> HRESULT;
    pub fn DocumentTitle() -> HRESULT;
    pub fn AddHostObjectToScript() -> HRESULT;
    pub fn RemoveHostObjectFromScript() -> HRESULT;
    pub fn OpenDevToolsWindow() -> HRESULT;
    pub fn add_ContainsFullScreenElementChanged() -> HRESULT;
    pub fn remove_ContainsFullScreenElementChanged() -> HRESULT;
    pub fn ContainsFullScreenElement() -> HRESULT;
    pub fn add_WebResourceRequested() -> HRESULT;
    pub fn remove_WebResourceRequested() -> HRESULT;
    pub fn AddWebResourceRequestedFilter() -> HRESULT;
    pub fn RemoveWebResourceRequestedFilter() -> HRESULT;
    pub fn add_WindowCloseRequested() -> HRESULT;
    pub fn remove_WindowCloseRequested() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_2(pub u32);
impl ICoreWebView2_2 {
    pub fn add_WebResourceResponseReceived() -> HRESULT;
    pub fn remove_WebResourceResponseReceived() -> HRESULT;
    pub fn NavigateWithWebResourceRequest() -> HRESULT;
    pub fn add_DOMContentLoaded() -> HRESULT;
    pub fn remove_DOMContentLoaded() -> HRESULT;
    pub fn CookieManager() -> HRESULT;
    pub fn Environment() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_3(pub u32);
impl ICoreWebView2_3 {
    pub fn TrySuspend() -> HRESULT;
    pub fn Resume() -> HRESULT;
    pub fn IsSuspended() -> HRESULT;
    pub fn SetVirtualHostNameToFolderMapping() -> HRESULT;
    pub fn ClearVirtualHostNameToFolderMapping() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_4(pub u32);
impl ICoreWebView2_4 {
    pub fn add_FrameCreated() -> HRESULT;
    pub fn remove_FrameCreated() -> HRESULT;
    pub fn add_DownloadStarting() -> HRESULT;
    pub fn remove_DownloadStarting() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_8(pub u32);
impl ICoreWebView2_8 {
    pub fn add_IsMutedChanged() -> HRESULT;
    pub fn remove_IsMutedChanged() -> HRESULT;
    pub fn IsMuted() -> HRESULT;
    pub fn IsMuted() -> HRESULT;
    pub fn add_IsDocumentPlayingAudioChanged() -> HRESULT;
    pub fn remove_IsDocumentPlayingAudioChanged() -> HRESULT;
    pub fn IsDocumentPlayingAudio() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_9(pub u32);
impl ICoreWebView2_9 {
    pub fn add_IsDefaultDownloadDialogOpenChanged() -> HRESULT;
    pub fn remove_IsDefaultDownloadDialogOpenChanged() -> HRESULT;
    pub fn IsDefaultDownloadDialogOpen() -> HRESULT;
    pub fn OpenDefaultDownloadDialog() -> HRESULT;
    pub fn CloseDefaultDownloadDialog() -> HRESULT;
    pub fn DefaultDownloadDialogCornerAlignment() -> HRESULT;
    pub fn DefaultDownloadDialogCornerAlignment() -> HRESULT;
    pub fn DefaultDownloadDialogMargin() -> HRESULT;
    pub fn DefaultDownloadDialogMargin() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_11(pub u32);
impl ICoreWebView2_11 {
    pub fn CallDevToolsProtocolMethodForSession() -> HRESULT;
    pub fn add_ContextMenuRequested() -> HRESULT;
    pub fn remove_ContextMenuRequested() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_12(pub u32);
impl ICoreWebView2_12 {
    pub fn add_StatusBarTextChanged() -> HRESULT;
    pub fn remove_StatusBarTextChanged() -> HRESULT;
    pub fn StatusBarText() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_15(pub u32);
impl ICoreWebView2_15 {
    pub fn add_FaviconChanged() -> HRESULT;
    pub fn remove_FaviconChanged() -> HRESULT;
    pub fn FaviconUri() -> HRESULT;
    pub fn GetFavicon() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_16(pub u32);
impl ICoreWebView2_16 {
    pub fn Print() -> HRESULT;
    pub fn ShowPrintUI() -> HRESULT;
    pub fn PrintToPdfStream() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Settings(pub u32);
impl ICoreWebView2Settings {
    pub fn IsScriptEnabled() -> HRESULT;
    pub fn IsScriptEnabled() -> HRESULT;
    pub fn IsWebMessageEnabled() -> HRESULT;
    pub fn IsWebMessageEnabled() -> HRESULT;
    pub fn AreDefaultScriptDialogsEnabled() -> HRESULT;
    pub fn AreDefaultScriptDialogsEnabled() -> HRESULT;
    pub fn IsStatusBarEnabled() -> HRESULT;
    pub fn IsStatusBarEnabled() -> HRESULT;
    pub fn AreDevToolsEnabled() -> HRESULT;
    pub fn AreDevToolsEnabled() -> HRESULT;
    pub fn AreDefaultContextMenusEnabled() -> HRESULT;
    pub fn AreDefaultContextMenusEnabled() -> HRESULT;
    pub fn AreHostObjectsAllowed() -> HRESULT;
    pub fn AreHostObjectsAllowed() -> HRESULT;
    pub fn IsZoomControlEnabled() -> HRESULT;
    pub fn IsZoomControlEnabled() -> HRESULT;
    pub fn IsBuiltInErrorPageEnabled() -> HRESULT;
    pub fn IsBuiltInErrorPageEnabled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Settings4(pub u32);
impl ICoreWebView2Settings4 {
    pub fn IsPasswordAutosaveEnabled() -> HRESULT;
    pub fn IsPasswordAutosaveEnabled() -> HRESULT;
    pub fn IsGeneralAutofillEnabled() -> HRESULT;
    pub fn IsGeneralAutofillEnabled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Controller(pub u32);
impl ICoreWebView2Controller {
    pub fn IsVisible() -> HRESULT;
    pub fn IsVisible() -> HRESULT;
    pub fn Bounds() -> HRESULT;
    pub fn Bounds() -> HRESULT;
    pub fn ZoomFactor() -> HRESULT;
    pub fn ZoomFactor() -> HRESULT;
    pub fn add_ZoomFactorChanged() -> HRESULT;
    pub fn remove_ZoomFactorChanged() -> HRESULT;
    pub fn SetBoundsAndZoomFactor() -> HRESULT;
    pub fn MoveFocus() -> HRESULT;
    pub fn add_MoveFocusRequested() -> HRESULT;
    pub fn remove_MoveFocusRequested() -> HRESULT;
    pub fn add_GotFocus() -> HRESULT;
    pub fn remove_GotFocus() -> HRESULT;
    pub fn add_LostFocus() -> HRESULT;
    pub fn remove_LostFocus() -> HRESULT;
    pub fn add_AcceleratorKeyPressed() -> HRESULT;
    pub fn remove_AcceleratorKeyPressed() -> HRESULT;
    pub fn ParentWindow() -> HRESULT;
    pub fn ParentWindow() -> HRESULT;
    pub fn NotifyParentWindowPositionChanged() -> HRESULT;
    pub fn Close() -> HRESULT;
    pub fn CoreWebView2() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Controller3(pub u32);
impl ICoreWebView2Controller3 {
    pub fn RasterizationScale() -> HRESULT;
    pub fn RasterizationScale() -> HRESULT;
    pub fn ShouldDetectMonitorScaleChanges() -> HRESULT;
    pub fn ShouldDetectMonitorScaleChanges() -> HRESULT;
    pub fn add_RasterizationScaleChanged() -> HRESULT;
    pub fn remove_RasterizationScaleChanged() -> HRESULT;
    pub fn BoundsMode() -> HRESULT;
    pub fn BoundsMode() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment(pub u32);
impl ICoreWebView2Environment {
    pub fn CreateCoreWebView2Controller() -> HRESULT;
    pub fn CreateWebResourceResponse() -> HRESULT;
    pub fn BrowserVersionString() -> HRESULT;
    pub fn add_NewBrowserVersionAvailable() -> HRESULT;
    pub fn remove_NewBrowserVersionAvailable() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions(pub u32);
impl ICoreWebView2EnvironmentOptions {
    pub fn AdditionalBrowserArguments() -> HRESULT;
    pub fn AdditionalBrowserArguments() -> HRESULT;
    pub fn Language() -> HRESULT;
    pub fn Language() -> HRESULT;
    pub fn TargetCompatibleBrowserVersion() -> HRESULT;
    pub fn TargetCompatibleBrowserVersion() -> HRESULT;
    pub fn AllowSingleSignOnUsingOSPrimaryAccount() -> HRESULT;
    pub fn AllowSingleSignOnUsingOSPrimaryAccount() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2AcceleratorKeyPressedEventArgs(pub u32);
impl ICoreWebView2AcceleratorKeyPressedEventArgs {
    pub fn KeyEventKind() -> HRESULT;
    pub fn VirtualKey() -> HRESULT;
    pub fn KeyEventLParam() -> HRESULT;
    pub fn PhysicalKeyStatus() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn Handled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2BasicAuthenticationRequestedEventArgs(pub u32);
impl ICoreWebView2BasicAuthenticationRequestedEventArgs {
    pub fn Uri() -> HRESULT;
    pub fn Challenge() -> HRESULT;
    pub fn Response() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2BasicAuthenticationResponse(pub u32);
impl ICoreWebView2BasicAuthenticationResponse {
    pub fn UserName() -> HRESULT;
    pub fn UserName() -> HRESULT;
    pub fn Password() -> HRESULT;
    pub fn Password() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserExtension(pub u32);
impl ICoreWebView2BrowserExtension {
    pub fn Id() -> HRESULT;
    pub fn Name() -> HRESULT;
    pub fn Remove() -> HRESULT;
    pub fn IsEnabled() -> HRESULT;
    pub fn Enable() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Certificate(pub u32);
impl ICoreWebView2Certificate {
    pub fn Subject() -> HRESULT;
    pub fn Issuer() -> HRESULT;
    pub fn ValidFrom() -> HRESULT;
    pub fn ValidTo() -> HRESULT;
    pub fn DerEncodedSerialNumber() -> HRESULT;
    pub fn DisplayName() -> HRESULT;
    pub fn ToPemEncoding() -> HRESULT;
    pub fn PemEncodedIssuerCertificateChain() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ClientCertificate(pub u32);
impl ICoreWebView2ClientCertificate {
    pub fn Subject() -> HRESULT;
    pub fn Issuer() -> HRESULT;
    pub fn ValidFrom() -> HRESULT;
    pub fn ValidTo() -> HRESULT;
    pub fn DerEncodedSerialNumber() -> HRESULT;
    pub fn DisplayName() -> HRESULT;
    pub fn ToPemEncoding() -> HRESULT;
    pub fn PemEncodedIssuerCertificateChain() -> HRESULT;
    pub fn Kind() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ClientCertificateRequestedEventArgs(pub u32);
impl ICoreWebView2ClientCertificateRequestedEventArgs {
    pub fn Host() -> HRESULT;
    pub fn Port() -> HRESULT;
    pub fn IsProxy() -> HRESULT;
    pub fn AllowedCertificateAuthorities() -> HRESULT;
    pub fn MutuallyTrustedCertificates() -> HRESULT;
    pub fn SelectedCertificate() -> HRESULT;
    pub fn SelectedCertificate() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CompositionController(pub u32);
impl ICoreWebView2CompositionController {
    pub fn RootVisualTarget() -> HRESULT;
    pub fn RootVisualTarget() -> HRESULT;
    pub fn SendMouseInput() -> HRESULT;
    pub fn SendPointerInput() -> HRESULT;
    pub fn Cursor() -> HRESULT;
    pub fn SystemCursorId() -> HRESULT;
    pub fn add_CursorChanged() -> HRESULT;
    pub fn remove_CursorChanged() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CompositionController3(pub u32);
impl ICoreWebView2CompositionController3 {
    pub fn DragEnter() -> HRESULT;
    pub fn DragLeave() -> HRESULT;
    pub fn DragOver() -> HRESULT;
    pub fn Drop() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CompositionController4(pub u32);
impl ICoreWebView2CompositionController4 {
    pub fn GetNonClientRegionAtPoint() -> HRESULT;
    pub fn QueryNonClientRegion() -> HRESULT;
    pub fn add_NonClientRegionChanged() -> HRESULT;
    pub fn remove_NonClientRegionChanged() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ContextMenuItem(pub u32);
impl ICoreWebView2ContextMenuItem {
    pub fn Name() -> HRESULT;
    pub fn Label() -> HRESULT;
    pub fn CommandId() -> HRESULT;
    pub fn ShortcutKeyDescription() -> HRESULT;
    pub fn Icon() -> HRESULT;
    pub fn Kind() -> HRESULT;
    pub fn IsEnabled() -> HRESULT;
    pub fn IsEnabled() -> HRESULT;
    pub fn IsChecked() -> HRESULT;
    pub fn IsChecked() -> HRESULT;
    pub fn Children() -> HRESULT;
    pub fn add_CustomItemSelected() -> HRESULT;
    pub fn remove_CustomItemSelected() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ContextMenuTarget(pub u32);
impl ICoreWebView2ContextMenuTarget {
    pub fn Kind() -> HRESULT;
    pub fn IsEditable() -> HRESULT;
    pub fn IsRequestedForMainFrame() -> HRESULT;
    pub fn PageUri() -> HRESULT;
    pub fn FrameUri() -> HRESULT;
    pub fn HasLinkUri() -> HRESULT;
    pub fn LinkUri() -> HRESULT;
    pub fn HasLinkText() -> HRESULT;
    pub fn LinkText() -> HRESULT;
    pub fn HasSourceUri() -> HRESULT;
    pub fn SourceUri() -> HRESULT;
    pub fn HasSelection() -> HRESULT;
    pub fn SelectionText() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ContextMenuRequestedEventArgs(pub u32);
impl ICoreWebView2ContextMenuRequestedEventArgs {
    pub fn MenuItems() -> HRESULT;
    pub fn ContextMenuTarget() -> HRESULT;
    pub fn Location() -> HRESULT;
    pub fn SelectedCommandId() -> HRESULT;
    pub fn SelectedCommandId() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ControllerOptions(pub u32);
impl ICoreWebView2ControllerOptions {
    pub fn ProfileName() -> HRESULT;
    pub fn ProfileName() -> HRESULT;
    pub fn IsInPrivateModeEnabled() -> HRESULT;
    pub fn IsInPrivateModeEnabled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Cookie(pub u32);
impl ICoreWebView2Cookie {
    pub fn Name() -> HRESULT;
    pub fn Value() -> HRESULT;
    pub fn Value() -> HRESULT;
    pub fn Domain() -> HRESULT;
    pub fn Path() -> HRESULT;
    pub fn Expires() -> HRESULT;
    pub fn Expires() -> HRESULT;
    pub fn IsHttpOnly() -> HRESULT;
    pub fn IsHttpOnly() -> HRESULT;
    pub fn SameSite() -> HRESULT;
    pub fn SameSite() -> HRESULT;
    pub fn IsSecure() -> HRESULT;
    pub fn IsSecure() -> HRESULT;
    pub fn IsSession() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CookieManager(pub u32);
impl ICoreWebView2CookieManager {
    pub fn CreateCookie() -> HRESULT;
    pub fn CopyCookie() -> HRESULT;
    pub fn GetCookies() -> HRESULT;
    pub fn AddOrUpdateCookie() -> HRESULT;
    pub fn DeleteCookie() -> HRESULT;
    pub fn DeleteCookies() -> HRESULT;
    pub fn DeleteCookiesWithDomainAndPath() -> HRESULT;
    pub fn DeleteAllCookies() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CustomSchemeRegistration(pub u32);
impl ICoreWebView2CustomSchemeRegistration {
    pub fn SchemeName() -> HRESULT;
    pub fn TreatAsSecure() -> HRESULT;
    pub fn TreatAsSecure() -> HRESULT;
    pub fn GetAllowedOrigins() -> HRESULT;
    pub fn SetAllowedOrigins() -> HRESULT;
    pub fn HasAuthorityComponent() -> HRESULT;
    pub fn HasAuthorityComponent() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2DownloadOperation(pub u32);
impl ICoreWebView2DownloadOperation {
    pub fn add_BytesReceivedChanged() -> HRESULT;
    pub fn remove_BytesReceivedChanged() -> HRESULT;
    pub fn add_EstimatedEndTimeChanged() -> HRESULT;
    pub fn remove_EstimatedEndTimeChanged() -> HRESULT;
    pub fn add_StateChanged() -> HRESULT;
    pub fn remove_StateChanged() -> HRESULT;
    pub fn Uri() -> HRESULT;
    pub fn ContentDisposition() -> HRESULT;
    pub fn MimeType() -> HRESULT;
    pub fn TotalBytesToReceive() -> HRESULT;
    pub fn BytesReceived() -> HRESULT;
    pub fn EstimatedEndTime() -> HRESULT;
    pub fn ResultFilePath() -> HRESULT;
    pub fn State() -> HRESULT;
    pub fn InterruptReason() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn Pause() -> HRESULT;
    pub fn Resume() -> HRESULT;
    pub fn CanResume() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2DownloadStartingEventArgs(pub u32);
impl ICoreWebView2DownloadStartingEventArgs {
    pub fn DownloadOperation() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn ResultFilePath() -> HRESULT;
    pub fn ResultFilePath() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ExecuteScriptResult(pub u32);
impl ICoreWebView2ExecuteScriptResult {
    pub fn Succeeded() -> HRESULT;
    pub fn ResultAsJson() -> HRESULT;
    pub fn TryGetResultAsString() -> HRESULT;
    pub fn Exception() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Frame(pub u32);
impl ICoreWebView2Frame {
    pub fn Name() -> HRESULT;
    pub fn add_NameChanged() -> HRESULT;
    pub fn remove_NameChanged() -> HRESULT;
    pub fn AddHostObjectToScriptWithOrigins() -> HRESULT;
    pub fn RemoveHostObjectFromScript() -> HRESULT;
    pub fn add_Destroyed() -> HRESULT;
    pub fn remove_Destroyed() -> HRESULT;
    pub fn IsDestroyed() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Frame2(pub u32);
impl ICoreWebView2Frame2 {
    pub fn add_NavigationStarting() -> HRESULT;
    pub fn remove_NavigationStarting() -> HRESULT;
    pub fn add_ContentLoading() -> HRESULT;
    pub fn remove_ContentLoading() -> HRESULT;
    pub fn add_NavigationCompleted() -> HRESULT;
    pub fn remove_NavigationCompleted() -> HRESULT;
    pub fn add_DOMContentLoaded() -> HRESULT;
    pub fn remove_DOMContentLoaded() -> HRESULT;
    pub fn ExecuteScript() -> HRESULT;
    pub fn PostWebMessageAsJson() -> HRESULT;
    pub fn PostWebMessageAsString() -> HRESULT;
    pub fn add_WebMessageReceived() -> HRESULT;
    pub fn remove_WebMessageReceived() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameInfo2(pub u32);
impl ICoreWebView2FrameInfo2 {
    pub fn ParentFrameInfo() -> HRESULT;
    pub fn FrameId() -> HRESULT;
    pub fn FrameKind() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2HttpHeadersCollectionIterator(pub u32);
impl ICoreWebView2HttpHeadersCollectionIterator {
    pub fn GetCurrentHeader() -> HRESULT;
    pub fn HasCurrentHeader() -> HRESULT;
    pub fn MoveNext() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2LaunchingExternalUriSchemeEventArgs(pub u32);
impl ICoreWebView2LaunchingExternalUriSchemeEventArgs {
    pub fn Uri() -> HRESULT;
    pub fn InitiatingOrigin() -> HRESULT;
    pub fn IsUserInitiated() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2MoveFocusRequestedEventArgs(pub u32);
impl ICoreWebView2MoveFocusRequestedEventArgs {
    pub fn Reason() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn Handled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationCompletedEventArgs(pub u32);
impl ICoreWebView2NavigationCompletedEventArgs {
    pub fn IsSuccess() -> HRESULT;
    pub fn WebErrorStatus() -> HRESULT;
    pub fn NavigationId() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationStartingEventArgs(pub u32);
impl ICoreWebView2NavigationStartingEventArgs {
    pub fn Uri() -> HRESULT;
    pub fn IsUserInitiated() -> HRESULT;
    pub fn IsRedirected() -> HRESULT;
    pub fn RequestHeaders() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn NavigationId() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NewWindowRequestedEventArgs(pub u32);
impl ICoreWebView2NewWindowRequestedEventArgs {
    pub fn Uri() -> HRESULT;
    pub fn NewWindow() -> HRESULT;
    pub fn NewWindow() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn IsUserInitiated() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
    pub fn WindowFeatures() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionRequestedEventArgs(pub u32);
impl ICoreWebView2PermissionRequestedEventArgs {
    pub fn Uri() -> HRESULT;
    pub fn PermissionKind() -> HRESULT;
    pub fn IsUserInitiated() -> HRESULT;
    pub fn State() -> HRESULT;
    pub fn State() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionSettingCollectionView(pub u32);
impl ICoreWebView2PermissionSettingCollectionView {
    pub fn GetValueAtIndex() -> HRESULT;
    pub fn Count() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PointerInfo(pub u32);
impl ICoreWebView2PointerInfo {
    pub fn PointerKind() -> HRESULT;
    pub fn PointerKind() -> HRESULT;
    pub fn PointerId() -> HRESULT;
    pub fn PointerId() -> HRESULT;
    pub fn FrameId() -> HRESULT;
    pub fn FrameId() -> HRESULT;
    pub fn PointerFlags() -> HRESULT;
    pub fn PointerFlags() -> HRESULT;
    pub fn PointerDeviceRect() -> HRESULT;
    pub fn PointerDeviceRect() -> HRESULT;
    pub fn DisplayRect() -> HRESULT;
    pub fn DisplayRect() -> HRESULT;
    pub fn PixelLocation() -> HRESULT;
    pub fn PixelLocation() -> HRESULT;
    pub fn HimetricLocation() -> HRESULT;
    pub fn HimetricLocation() -> HRESULT;
    pub fn PixelLocationRaw() -> HRESULT;
    pub fn PixelLocationRaw() -> HRESULT;
    pub fn HimetricLocationRaw() -> HRESULT;
    pub fn HimetricLocationRaw() -> HRESULT;
    pub fn Time() -> HRESULT;
    pub fn Time() -> HRESULT;
    pub fn HistoryCount() -> HRESULT;
    pub fn HistoryCount() -> HRESULT;
    pub fn InputData() -> HRESULT;
    pub fn InputData() -> HRESULT;
    pub fn KeyStates() -> HRESULT;
    pub fn KeyStates() -> HRESULT;
    pub fn PerformanceCount() -> HRESULT;
    pub fn PerformanceCount() -> HRESULT;
    pub fn ButtonChangeKind() -> HRESULT;
    pub fn ButtonChangeKind() -> HRESULT;
    pub fn PenFlags() -> HRESULT;
    pub fn PenFlags() -> HRESULT;
    pub fn PenMask() -> HRESULT;
    pub fn PenMask() -> HRESULT;
    pub fn PenPressure() -> HRESULT;
    pub fn PenPressure() -> HRESULT;
    pub fn PenRotation() -> HRESULT;
    pub fn PenRotation() -> HRESULT;
    pub fn PenTiltX() -> HRESULT;
    pub fn PenTiltX() -> HRESULT;
    pub fn PenTiltY() -> HRESULT;
    pub fn PenTiltY() -> HRESULT;
    pub fn TouchFlags() -> HRESULT;
    pub fn TouchFlags() -> HRESULT;
    pub fn TouchMask() -> HRESULT;
    pub fn TouchMask() -> HRESULT;
    pub fn TouchContact() -> HRESULT;
    pub fn TouchContact() -> HRESULT;
    pub fn TouchContactRaw() -> HRESULT;
    pub fn TouchContactRaw() -> HRESULT;
    pub fn TouchOrientation() -> HRESULT;
    pub fn TouchOrientation() -> HRESULT;
    pub fn TouchPressure() -> HRESULT;
    pub fn TouchPressure() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PrintSettings(pub u32);
impl ICoreWebView2PrintSettings {
    pub fn Orientation() -> HRESULT;
    pub fn Orientation() -> HRESULT;
    pub fn ScaleFactor() -> HRESULT;
    pub fn ScaleFactor() -> HRESULT;
    pub fn PageWidth() -> HRESULT;
    pub fn PageWidth() -> HRESULT;
    pub fn PageHeight() -> HRESULT;
    pub fn PageHeight() -> HRESULT;
    pub fn MarginTop() -> HRESULT;
    pub fn MarginTop() -> HRESULT;
    pub fn MarginBottom() -> HRESULT;
    pub fn MarginBottom() -> HRESULT;
    pub fn MarginLeft() -> HRESULT;
    pub fn MarginLeft() -> HRESULT;
    pub fn MarginRight() -> HRESULT;
    pub fn MarginRight() -> HRESULT;
    pub fn ShouldPrintBackgrounds() -> HRESULT;
    pub fn ShouldPrintBackgrounds() -> HRESULT;
    pub fn ShouldPrintSelectionOnly() -> HRESULT;
    pub fn ShouldPrintSelectionOnly() -> HRESULT;
    pub fn ShouldPrintHeaderAndFooter() -> HRESULT;
    pub fn ShouldPrintHeaderAndFooter() -> HRESULT;
    pub fn HeaderTitle() -> HRESULT;
    pub fn HeaderTitle() -> HRESULT;
    pub fn FooterUri() -> HRESULT;
    pub fn FooterUri() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PrintSettings2(pub u32);
impl ICoreWebView2PrintSettings2 {
    pub fn PageRanges() -> HRESULT;
    pub fn PageRanges() -> HRESULT;
    pub fn PagesPerSide() -> HRESULT;
    pub fn PagesPerSide() -> HRESULT;
    pub fn Copies() -> HRESULT;
    pub fn Copies() -> HRESULT;
    pub fn Collation() -> HRESULT;
    pub fn Collation() -> HRESULT;
    pub fn ColorMode() -> HRESULT;
    pub fn ColorMode() -> HRESULT;
    pub fn Duplex() -> HRESULT;
    pub fn Duplex() -> HRESULT;
    pub fn MediaSize() -> HRESULT;
    pub fn MediaSize() -> HRESULT;
    pub fn PrinterName() -> HRESULT;
    pub fn PrinterName() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessExtendedInfo(pub u32);
impl ICoreWebView2ProcessExtendedInfo {
    pub fn ProcessInfo() -> HRESULT;
    pub fn AssociatedFrameInfos() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessFailedEventArgs2(pub u32);
impl ICoreWebView2ProcessFailedEventArgs2 {
    pub fn Reason() -> HRESULT;
    pub fn ExitCode() -> HRESULT;
    pub fn ProcessDescription() -> HRESULT;
    pub fn FrameInfosForFailedProcess() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessInfo(pub u32);
impl ICoreWebView2ProcessInfo {
    pub fn ProcessId() -> HRESULT;
    pub fn Kind() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Profile(pub u32);
impl ICoreWebView2Profile {
    pub fn ProfileName() -> HRESULT;
    pub fn IsInPrivateModeEnabled() -> HRESULT;
    pub fn ProfilePath() -> HRESULT;
    pub fn DefaultDownloadFolderPath() -> HRESULT;
    pub fn DefaultDownloadFolderPath() -> HRESULT;
    pub fn PreferredColorScheme() -> HRESULT;
    pub fn PreferredColorScheme() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Profile6(pub u32);
impl ICoreWebView2Profile6 {
    pub fn IsPasswordAutosaveEnabled() -> HRESULT;
    pub fn IsPasswordAutosaveEnabled() -> HRESULT;
    pub fn IsGeneralAutofillEnabled() -> HRESULT;
    pub fn IsGeneralAutofillEnabled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Profile8(pub u32);
impl ICoreWebView2Profile8 {
    pub fn Delete() -> HRESULT;
    pub fn add_Deleted() -> HRESULT;
    pub fn remove_Deleted() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ScriptDialogOpeningEventArgs(pub u32);
impl ICoreWebView2ScriptDialogOpeningEventArgs {
    pub fn Uri() -> HRESULT;
    pub fn Kind() -> HRESULT;
    pub fn Message() -> HRESULT;
    pub fn Accept() -> HRESULT;
    pub fn DefaultText() -> HRESULT;
    pub fn ResultText() -> HRESULT;
    pub fn ResultText() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ScriptException(pub u32);
impl ICoreWebView2ScriptException {
    pub fn LineNumber() -> HRESULT;
    pub fn ColumnNumber() -> HRESULT;
    pub fn Name() -> HRESULT;
    pub fn Message() -> HRESULT;
    pub fn ToJson() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ServerCertificateErrorDetectedEventArgs(pub u32);
impl ICoreWebView2ServerCertificateErrorDetectedEventArgs {
    pub fn ErrorStatus() -> HRESULT;
    pub fn RequestUri() -> HRESULT;
    pub fn ServerCertificate() -> HRESULT;
    pub fn Action() -> HRESULT;
    pub fn Action() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2SharedBuffer(pub u32);
impl ICoreWebView2SharedBuffer {
    pub fn Size() -> HRESULT;
    pub fn Buffer() -> HRESULT;
    pub fn OpenStream() -> HRESULT;
    pub fn FileMappingHandle() -> HRESULT;
    pub fn Close() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceRequest(pub u32);
impl ICoreWebView2WebResourceRequest {
    pub fn Uri() -> HRESULT;
    pub fn Uri() -> HRESULT;
    pub fn Method() -> HRESULT;
    pub fn Method() -> HRESULT;
    pub fn Content() -> HRESULT;
    pub fn Content() -> HRESULT;
    pub fn Headers() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceRequestedEventArgs(pub u32);
impl ICoreWebView2WebResourceRequestedEventArgs {
    pub fn Request() -> HRESULT;
    pub fn Response() -> HRESULT;
    pub fn Response() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
    pub fn ResourceContext() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceResponse(pub u32);
impl ICoreWebView2WebResourceResponse {
    pub fn Content() -> HRESULT;
    pub fn Content() -> HRESULT;
    pub fn Headers() -> HRESULT;
    pub fn StatusCode() -> HRESULT;
    pub fn StatusCode() -> HRESULT;
    pub fn ReasonPhrase() -> HRESULT;
    pub fn ReasonPhrase() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceResponseView(pub u32);
impl ICoreWebView2WebResourceResponseView {
    pub fn Headers() -> HRESULT;
    pub fn StatusCode() -> HRESULT;
    pub fn ReasonPhrase() -> HRESULT;
    pub fn GetContent() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WindowFeatures(pub u32);
impl ICoreWebView2WindowFeatures {
    pub fn HasPosition() -> HRESULT;
    pub fn HasSize() -> HRESULT;
    pub fn Left() -> HRESULT;
    pub fn Top() -> HRESULT;
    pub fn Height() -> HRESULT;
    pub fn Width() -> HRESULT;
    pub fn ShouldDisplayMenuBar() -> HRESULT;
    pub fn ShouldDisplayStatus() -> HRESULT;
    pub fn ShouldDisplayToolbar() -> HRESULT;
    pub fn ShouldDisplayScrollBars() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ObjectCollection(pub u32);
impl ICoreWebView2ObjectCollection {
    pub fn RemoveValueAtIndex() -> HRESULT;
    pub fn InsertValueAtIndex() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Notification(pub u32);
impl ICoreWebView2Notification {
    pub fn add_CloseRequested() -> HRESULT;
    pub fn remove_CloseRequested() -> HRESULT;
    pub fn ReportShown() -> HRESULT;
    pub fn ReportClicked() -> HRESULT;
    pub fn ReportClosed() -> HRESULT;
    pub fn Body() -> HRESULT;
    pub fn Direction() -> HRESULT;
    pub fn Language() -> HRESULT;
    pub fn Tag() -> HRESULT;
    pub fn IconUri() -> HRESULT;
    pub fn Title() -> HRESULT;
    pub fn BadgeUri() -> HRESULT;
    pub fn BodyImageUri() -> HRESULT;
    pub fn ShouldRenotify() -> HRESULT;
    pub fn RequiresInteraction() -> HRESULT;
    pub fn IsSilent() -> HRESULT;
    pub fn Timestamp() -> HRESULT;
    pub fn GetVibrationPattern() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NotificationReceivedEventArgs(pub u32);
impl ICoreWebView2NotificationReceivedEventArgs {
    pub fn SenderOrigin() -> HRESULT;
    pub fn Notification() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2SaveAsUIShowingEventArgs(pub u32);
impl ICoreWebView2SaveAsUIShowingEventArgs {
    pub fn ContentMimeType() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn SuppressDefaultDialog() -> HRESULT;
    pub fn SuppressDefaultDialog() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
    pub fn SaveAsFilePath() -> HRESULT;
    pub fn SaveAsFilePath() -> HRESULT;
    pub fn AllowReplace() -> HRESULT;
    pub fn AllowReplace() -> HRESULT;
    pub fn Kind() -> HRESULT;
    pub fn Kind() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2AcceleratorKeyPressedEventArgs2(pub u32);
impl ICoreWebView2AcceleratorKeyPressedEventArgs2 {
    pub fn IsBrowserAcceleratorKeyEnabled() -> HRESULT;
    pub fn IsBrowserAcceleratorKeyEnabled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserProcessExitedEventArgs(pub u32);
impl ICoreWebView2BrowserProcessExitedEventArgs {
    pub fn BrowserProcessExitKind() -> HRESULT;
    pub fn BrowserProcessId() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CompositionController2(pub u32);
impl ICoreWebView2CompositionController2 {
    pub fn AutomationProvider() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ContentLoadingEventArgs(pub u32);
impl ICoreWebView2ContentLoadingEventArgs {
    pub fn IsErrorPage() -> HRESULT;
    pub fn NavigationId() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ContextMenuItemCollection(pub u32);
impl ICoreWebView2ContextMenuItemCollection {
    pub fn Count() -> HRESULT;
    pub fn GetValueAtIndex() -> HRESULT;
    pub fn RemoveValueAtIndex() -> HRESULT;
    pub fn InsertValueAtIndex() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Controller2(pub u32);
impl ICoreWebView2Controller2 {
    pub fn DefaultBackgroundColor() -> HRESULT;
    pub fn DefaultBackgroundColor() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Controller4(pub u32);
impl ICoreWebView2Controller4 {
    pub fn AllowExternalDrop() -> HRESULT;
    pub fn AllowExternalDrop() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ControllerOptions2(pub u32);
impl ICoreWebView2ControllerOptions2 {
    pub fn ScriptLocale() -> HRESULT;
    pub fn ScriptLocale() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2DOMContentLoadedEventArgs(pub u32);
impl ICoreWebView2DOMContentLoadedEventArgs {
    pub fn NavigationId() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Deferral(pub u32);
impl ICoreWebView2Deferral {
    pub fn Complete() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2DevToolsProtocolEventReceivedEventArgs(pub u32);
impl ICoreWebView2DevToolsProtocolEventReceivedEventArgs {
    pub fn ParameterObjectAsJson() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2DevToolsProtocolEventReceivedEventArgs2(pub u32);
impl ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 {
    pub fn SessionId() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2DevToolsProtocolEventReceivedEventHandler(pub u32);
impl ICoreWebView2DevToolsProtocolEventReceivedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2DevToolsProtocolEventReceiver(pub u32);
impl ICoreWebView2DevToolsProtocolEventReceiver {
    pub fn add_DevToolsProtocolEventReceived() -> HRESULT;
    pub fn remove_DevToolsProtocolEventReceived() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment10(pub u32);
impl ICoreWebView2Environment10 {
    pub fn CreateCoreWebView2ControllerOptions() -> HRESULT;
    pub fn CreateCoreWebView2ControllerWithOptions() -> HRESULT;
    pub fn CreateCoreWebView2CompositionControllerWithOptions() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment11(pub u32);
impl ICoreWebView2Environment11 {
    pub fn FailureReportFolderPath() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment12(pub u32);
impl ICoreWebView2Environment12 {
    pub fn CreateSharedBuffer() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2GetProcessExtendedInfosCompletedHandler(pub u32);
impl ICoreWebView2GetProcessExtendedInfosCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessExtendedInfoCollection(pub u32);
impl ICoreWebView2ProcessExtendedInfoCollection {
    pub fn Count() -> HRESULT;
    pub fn GetValueAtIndex() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment13(pub u32);
impl ICoreWebView2Environment13 {
    pub fn GetProcessExtendedInfos() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment14(pub u32);
impl ICoreWebView2Environment14 {
    pub fn CreateWebFileSystemFileHandle() -> HRESULT;
    pub fn CreateWebFileSystemDirectoryHandle() -> HRESULT;
    pub fn CreateObjectCollection() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment2(pub u32);
impl ICoreWebView2Environment2 {
    pub fn CreateWebResourceRequest() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler(pub u32);
impl ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment3(pub u32);
impl ICoreWebView2Environment3 {
    pub fn CreateCoreWebView2CompositionController() -> HRESULT;
    pub fn CreateCoreWebView2PointerInfo() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment4(pub u32);
impl ICoreWebView2Environment4 {
    pub fn GetAutomationProviderForWindow() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserProcessExitedEventHandler(pub u32);
impl ICoreWebView2BrowserProcessExitedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment5(pub u32);
impl ICoreWebView2Environment5 {
    pub fn add_BrowserProcessExited() -> HRESULT;
    pub fn remove_BrowserProcessExited() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment6(pub u32);
impl ICoreWebView2Environment6 {
    pub fn CreatePrintSettings() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment7(pub u32);
impl ICoreWebView2Environment7 {
    pub fn UserDataFolder() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessInfosChangedEventHandler(pub u32);
impl ICoreWebView2ProcessInfosChangedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessInfoCollection(pub u32);
impl ICoreWebView2ProcessInfoCollection {
    pub fn Count() -> HRESULT;
    pub fn GetValueAtIndex() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment8(pub u32);
impl ICoreWebView2Environment8 {
    pub fn add_ProcessInfosChanged() -> HRESULT;
    pub fn remove_ProcessInfosChanged() -> HRESULT;
    pub fn GetProcessInfos() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Environment9(pub u32);
impl ICoreWebView2Environment9 {
    pub fn CreateContextMenuItem() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions2(pub u32);
impl ICoreWebView2EnvironmentOptions2 {
    pub fn ExclusiveUserDataFolderAccess() -> HRESULT;
    pub fn ExclusiveUserDataFolderAccess() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions3(pub u32);
impl ICoreWebView2EnvironmentOptions3 {
    pub fn IsCustomCrashReportingEnabled() -> HRESULT;
    pub fn IsCustomCrashReportingEnabled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions4(pub u32);
impl ICoreWebView2EnvironmentOptions4 {
    pub fn GetCustomSchemeRegistrations() -> HRESULT;
    pub fn SetCustomSchemeRegistrations() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions5(pub u32);
impl ICoreWebView2EnvironmentOptions5 {
    pub fn EnableTrackingPrevention() -> HRESULT;
    pub fn EnableTrackingPrevention() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions6(pub u32);
impl ICoreWebView2EnvironmentOptions6 {
    pub fn AreBrowserExtensionsEnabled() -> HRESULT;
    pub fn AreBrowserExtensionsEnabled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions8(pub u32);
impl ICoreWebView2EnvironmentOptions8 {
    pub fn ScrollBarStyle() -> HRESULT;
    pub fn ScrollBarStyle() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2EnvironmentOptions7(pub u32);
impl ICoreWebView2EnvironmentOptions7 {
    pub fn ChannelSearchKind() -> HRESULT;
    pub fn ChannelSearchKind() -> HRESULT;
    pub fn ReleaseChannels() -> HRESULT;
    pub fn ReleaseChannels() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler(pub u32);
impl ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2File(pub u32);
impl ICoreWebView2File {
    pub fn Path() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FileSystemHandle(pub u32);
impl ICoreWebView2FileSystemHandle {
    pub fn Kind() -> HRESULT;
    pub fn Path() -> HRESULT;
    pub fn Permission() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FramePermissionRequestedEventHandler(pub u32);
impl ICoreWebView2FramePermissionRequestedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Frame3(pub u32);
impl ICoreWebView2Frame3 {
    pub fn add_PermissionRequested() -> HRESULT;
    pub fn remove_PermissionRequested() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Frame4(pub u32);
impl ICoreWebView2Frame4 {
    pub fn PostSharedBufferToScript() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Frame5(pub u32);
impl ICoreWebView2Frame5 {
    pub fn FrameId() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameScreenCaptureStartingEventHandler(pub u32);
impl ICoreWebView2FrameScreenCaptureStartingEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Frame6(pub u32);
impl ICoreWebView2Frame6 {
    pub fn add_ScreenCaptureStarting() -> HRESULT;
    pub fn remove_ScreenCaptureStarting() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameChildFrameCreatedEventHandler(pub u32);
impl ICoreWebView2FrameChildFrameCreatedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Frame7(pub u32);
impl ICoreWebView2Frame7 {
    pub fn add_FrameCreated() -> HRESULT;
    pub fn remove_FrameCreated() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameCreatedEventArgs(pub u32);
impl ICoreWebView2FrameCreatedEventArgs {
    pub fn Frame() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameInfo(pub u32);
impl ICoreWebView2FrameInfo {
    pub fn Name() -> HRESULT;
    pub fn Source() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameInfoCollection(pub u32);
impl ICoreWebView2FrameInfoCollection {
    pub fn GetIterator() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2FrameInfoCollectionIterator(pub u32);
impl ICoreWebView2FrameInfoCollectionIterator {
    pub fn HasCurrent() -> HRESULT;
    pub fn GetCurrent() -> HRESULT;
    pub fn MoveNext() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2HttpRequestHeaders(pub u32);
impl ICoreWebView2HttpRequestHeaders {
    pub fn GetHeader() -> HRESULT;
    pub fn GetHeaders() -> HRESULT;
    pub fn Contains() -> HRESULT;
    pub fn SetHeader() -> HRESULT;
    pub fn RemoveHeader() -> HRESULT;
    pub fn GetIterator() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2HttpResponseHeaders(pub u32);
impl ICoreWebView2HttpResponseHeaders {
    pub fn AppendHeader() -> HRESULT;
    pub fn Contains() -> HRESULT;
    pub fn GetHeader() -> HRESULT;
    pub fn GetHeaders() -> HRESULT;
    pub fn GetIterator() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationCompletedEventArgs2(pub u32);
impl ICoreWebView2NavigationCompletedEventArgs2 {
    pub fn HttpStatusCode() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationStartingEventArgs2(pub u32);
impl ICoreWebView2NavigationStartingEventArgs2 {
    pub fn AdditionalAllowedFrameAncestors() -> HRESULT;
    pub fn AdditionalAllowedFrameAncestors() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NavigationStartingEventArgs3(pub u32);
impl ICoreWebView2NavigationStartingEventArgs3 {
    pub fn NavigationKind() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NewWindowRequestedEventArgs2(pub u32);
impl ICoreWebView2NewWindowRequestedEventArgs2 {
    pub fn Name() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NewWindowRequestedEventArgs3(pub u32);
impl ICoreWebView2NewWindowRequestedEventArgs3 {
    pub fn OriginalSourceFrameInfo() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NonClientRegionChangedEventArgs(pub u32);
impl ICoreWebView2NonClientRegionChangedEventArgs {
    pub fn RegionKind() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ObjectCollectionView(pub u32);
impl ICoreWebView2ObjectCollectionView {
    pub fn Count() -> HRESULT;
    pub fn GetValueAtIndex() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionRequestedEventArgs2(pub u32);
impl ICoreWebView2PermissionRequestedEventArgs2 {
    pub fn Handled() -> HRESULT;
    pub fn Handled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionRequestedEventArgs3(pub u32);
impl ICoreWebView2PermissionRequestedEventArgs3 {
    pub fn SavesInProfile() -> HRESULT;
    pub fn SavesInProfile() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PermissionSetting(pub u32);
impl ICoreWebView2PermissionSetting {
    pub fn PermissionKind() -> HRESULT;
    pub fn PermissionOrigin() -> HRESULT;
    pub fn PermissionState() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessFailedEventArgs(pub u32);
impl ICoreWebView2ProcessFailedEventArgs {
    pub fn ProcessFailedKind() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProcessFailedEventArgs3(pub u32);
impl ICoreWebView2ProcessFailedEventArgs3 {
    pub fn FailureSourceModulePath() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ClearBrowsingDataCompletedHandler(pub u32);
impl ICoreWebView2ClearBrowsingDataCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Profile2(pub u32);
impl ICoreWebView2Profile2 {
    pub fn ClearBrowsingData() -> HRESULT;
    pub fn ClearBrowsingDataInTimeRange() -> HRESULT;
    pub fn ClearBrowsingDataAll() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Profile3(pub u32);
impl ICoreWebView2Profile3 {
    pub fn PreferredTrackingPreventionLevel() -> HRESULT;
    pub fn PreferredTrackingPreventionLevel() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2SetPermissionStateCompletedHandler(pub u32);
impl ICoreWebView2SetPermissionStateCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler(pub u32);
impl ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Profile4(pub u32);
impl ICoreWebView2Profile4 {
    pub fn SetPermissionState() -> HRESULT;
    pub fn GetNonDefaultPermissionSettings() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Profile5(pub u32);
impl ICoreWebView2Profile5 {
    pub fn CookieManager() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProfileAddBrowserExtensionCompletedHandler(pub u32);
impl ICoreWebView2ProfileAddBrowserExtensionCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler(pub u32);
impl ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2BrowserExtensionList(pub u32);
impl ICoreWebView2BrowserExtensionList {
    pub fn Count() -> HRESULT;
    pub fn GetValueAtIndex() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Profile7(pub u32);
impl ICoreWebView2Profile7 {
    pub fn AddBrowserExtension() -> HRESULT;
    pub fn GetBrowserExtensions() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2SaveFileSecurityCheckStartingEventArgs(pub u32);
impl ICoreWebView2SaveFileSecurityCheckStartingEventArgs {
    pub fn CancelSave() -> HRESULT;
    pub fn CancelSave() -> HRESULT;
    pub fn DocumentOriginUri() -> HRESULT;
    pub fn FileExtension() -> HRESULT;
    pub fn FilePath() -> HRESULT;
    pub fn SuppressDefaultPolicy() -> HRESULT;
    pub fn SuppressDefaultPolicy() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ScreenCaptureStartingEventArgs(pub u32);
impl ICoreWebView2ScreenCaptureStartingEventArgs {
    pub fn Cancel() -> HRESULT;
    pub fn Cancel() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn Handled() -> HRESULT;
    pub fn OriginalSourceFrameInfo() -> HRESULT;
    pub fn GetDeferral() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Settings2(pub u32);
impl ICoreWebView2Settings2 {
    pub fn UserAgent() -> HRESULT;
    pub fn UserAgent() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Settings3(pub u32);
impl ICoreWebView2Settings3 {
    pub fn AreBrowserAcceleratorKeysEnabled() -> HRESULT;
    pub fn AreBrowserAcceleratorKeysEnabled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Settings5(pub u32);
impl ICoreWebView2Settings5 {
    pub fn IsPinchZoomEnabled() -> HRESULT;
    pub fn IsPinchZoomEnabled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Settings6(pub u32);
impl ICoreWebView2Settings6 {
    pub fn IsSwipeNavigationEnabled() -> HRESULT;
    pub fn IsSwipeNavigationEnabled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Settings7(pub u32);
impl ICoreWebView2Settings7 {
    pub fn HiddenPdfToolbarItems() -> HRESULT;
    pub fn HiddenPdfToolbarItems() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Settings8(pub u32);
impl ICoreWebView2Settings8 {
    pub fn IsReputationCheckingRequired() -> HRESULT;
    pub fn IsReputationCheckingRequired() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2Settings9(pub u32);
impl ICoreWebView2Settings9 {
    pub fn IsNonClientRegionSupportEnabled() -> HRESULT;
    pub fn IsNonClientRegionSupportEnabled() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2SourceChangedEventArgs(pub u32);
impl ICoreWebView2SourceChangedEventArgs {
    pub fn IsNewDocument() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebMessageReceivedEventArgs(pub u32);
impl ICoreWebView2WebMessageReceivedEventArgs {
    pub fn Source() -> HRESULT;
    pub fn WebMessageAsJson() -> HRESULT;
    pub fn TryGetWebMessageAsString() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebMessageReceivedEventArgs2(pub u32);
impl ICoreWebView2WebMessageReceivedEventArgs2 {
    pub fn AdditionalObjects() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceRequestedEventArgs2(pub u32);
impl ICoreWebView2WebResourceRequestedEventArgs2 {
    pub fn RequestedSourceKind() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2WebResourceResponseReceivedEventArgs(pub u32);
impl ICoreWebView2WebResourceResponseReceivedEventArgs {
    pub fn Request() -> HRESULT;
    pub fn Response() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2BasicAuthenticationRequestedEventHandler(pub u32);
impl ICoreWebView2BasicAuthenticationRequestedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_10(pub u32);
impl ICoreWebView2_10 {
    pub fn add_BasicAuthenticationRequested() -> HRESULT;
    pub fn remove_BasicAuthenticationRequested() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_13(pub u32);
impl ICoreWebView2_13 {
    pub fn Profile() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler(pub u32);
impl ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ServerCertificateErrorDetectedEventHandler(pub u32);
impl ICoreWebView2ServerCertificateErrorDetectedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_14(pub u32);
impl ICoreWebView2_14 {
    pub fn add_ServerCertificateErrorDetected() -> HRESULT;
    pub fn remove_ServerCertificateErrorDetected() -> HRESULT;
    pub fn ClearServerCertificateErrorActions() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_17(pub u32);
impl ICoreWebView2_17 {
    pub fn PostSharedBufferToScript() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2LaunchingExternalUriSchemeEventHandler(pub u32);
impl ICoreWebView2LaunchingExternalUriSchemeEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_18(pub u32);
impl ICoreWebView2_18 {
    pub fn add_LaunchingExternalUriScheme() -> HRESULT;
    pub fn remove_LaunchingExternalUriScheme() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_19(pub u32);
impl ICoreWebView2_19 {
    pub fn MemoryUsageTargetLevel() -> HRESULT;
    pub fn MemoryUsageTargetLevel() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_20(pub u32);
impl ICoreWebView2_20 {
    pub fn FrameId() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ExecuteScriptWithResultCompletedHandler(pub u32);
impl ICoreWebView2ExecuteScriptWithResultCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_21(pub u32);
impl ICoreWebView2_21 {
    pub fn ExecuteScriptWithResult() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_22(pub u32);
impl ICoreWebView2_22 {
    pub fn AddWebResourceRequestedFilterWithRequestSourceKinds() -> HRESULT;
    pub fn RemoveWebResourceRequestedFilterWithRequestSourceKinds() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ShowSaveAsUICompletedHandler(pub u32);
impl ICoreWebView2ShowSaveAsUICompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2SaveAsUIShowingEventHandler(pub u32);
impl ICoreWebView2SaveAsUIShowingEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_25(pub u32);
impl ICoreWebView2_25 {
    pub fn add_SaveAsUIShowing() -> HRESULT;
    pub fn remove_SaveAsUIShowing() -> HRESULT;
    pub fn ShowSaveAsUI() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_23(pub u32);
impl ICoreWebView2_23 {
    pub fn PostWebMessageAsJsonWithAdditionalObjects() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ScreenCaptureStartingEventHandler(pub u32);
impl ICoreWebView2ScreenCaptureStartingEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_27(pub u32);
impl ICoreWebView2_27 {
    pub fn add_ScreenCaptureStarting() -> HRESULT;
    pub fn remove_ScreenCaptureStarting() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2SaveFileSecurityCheckStartingEventHandler(pub u32);
impl ICoreWebView2SaveFileSecurityCheckStartingEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_26(pub u32);
impl ICoreWebView2_26 {
    pub fn add_SaveFileSecurityCheckStarting() -> HRESULT;
    pub fn remove_SaveFileSecurityCheckStarting() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2NotificationReceivedEventHandler(pub u32);
impl ICoreWebView2NotificationReceivedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_24(pub u32);
impl ICoreWebView2_24 {
    pub fn add_NotificationReceived() -> HRESULT;
    pub fn remove_NotificationReceived() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2ClientCertificateRequestedEventHandler(pub u32);
impl ICoreWebView2ClientCertificateRequestedEventHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_5(pub u32);
impl ICoreWebView2_5 {
    pub fn add_ClientCertificateRequested() -> HRESULT;
    pub fn remove_ClientCertificateRequested() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_6(pub u32);
impl ICoreWebView2_6 {
    pub fn OpenTaskManagerWindow() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2PrintToPdfCompletedHandler(pub u32);
impl ICoreWebView2PrintToPdfCompletedHandler {
    pub fn Invoke() -> HRESULT;
}
#[repr(transparent)]
pub struct ICoreWebView2_7(pub u32);
impl ICoreWebView2_7 {
    pub fn PrintToPdf() -> HRESULT;
}
