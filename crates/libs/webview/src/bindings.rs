// Bindings generated by `windows-bindgen` 0.62.1

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]

pub mod WebView2 {
    #[repr(C)]
    #[derive(Clone, Copy, Debug, Default, PartialEq)]
    pub struct COREWEBVIEW2_COLOR(pub u8);
    #[repr(C)]
    #[derive(Clone, Copy, Debug, Default, PartialEq)]
    pub struct COREWEBVIEW2_PHYSICAL_KEY_STATUS(pub u8);
    windows_core::imp::define_interface!(ICoreWebView2, ICoreWebView2_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_Vtbl {}
    pub trait ICoreWebView2_Impl {}
    impl ICoreWebView2_Vtbl {
        pub const fn new<Identity: ICoreWebView2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_ImplVtbl<T: ICoreWebView2_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_Impl> ICoreWebView2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_Vtbl = ICoreWebView2_Vtbl::new::<T>();
    }
    impl ICoreWebView2 {
        pub fn new<'a, T: ICoreWebView2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2AcceleratorKeyPressedEventArgs,
        ICoreWebView2AcceleratorKeyPressedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2AcceleratorKeyPressedEventArgs_Vtbl {}
    pub trait ICoreWebView2AcceleratorKeyPressedEventArgs_Impl {}
    impl ICoreWebView2AcceleratorKeyPressedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2AcceleratorKeyPressedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2AcceleratorKeyPressedEventArgs_ImplVtbl<
        T: ICoreWebView2AcceleratorKeyPressedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2AcceleratorKeyPressedEventArgs_Impl>
        ICoreWebView2AcceleratorKeyPressedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2AcceleratorKeyPressedEventArgs_Vtbl =
            ICoreWebView2AcceleratorKeyPressedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2AcceleratorKeyPressedEventArgs {
        pub fn new<'a, T: ICoreWebView2AcceleratorKeyPressedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2AcceleratorKeyPressedEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2AcceleratorKeyPressedEventArgs2,
        ICoreWebView2AcceleratorKeyPressedEventArgs2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2AcceleratorKeyPressedEventArgs2_Vtbl {}
    pub trait ICoreWebView2AcceleratorKeyPressedEventArgs2_Impl {}
    impl ICoreWebView2AcceleratorKeyPressedEventArgs2_Vtbl {
        pub const fn new<Identity: ICoreWebView2AcceleratorKeyPressedEventArgs2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2AcceleratorKeyPressedEventArgs2_ImplVtbl<
        T: ICoreWebView2AcceleratorKeyPressedEventArgs2_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2AcceleratorKeyPressedEventArgs2_Impl>
        ICoreWebView2AcceleratorKeyPressedEventArgs2_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2AcceleratorKeyPressedEventArgs2_Vtbl =
            ICoreWebView2AcceleratorKeyPressedEventArgs2_Vtbl::new::<T>();
    }
    impl ICoreWebView2AcceleratorKeyPressedEventArgs2 {
        pub fn new<'a, T: ICoreWebView2AcceleratorKeyPressedEventArgs2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2AcceleratorKeyPressedEventArgs2_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2AcceleratorKeyPressedEventHandler,
        ICoreWebView2AcceleratorKeyPressedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2AcceleratorKeyPressedEventHandler_Vtbl {}
    pub trait ICoreWebView2AcceleratorKeyPressedEventHandler_Impl {}
    impl ICoreWebView2AcceleratorKeyPressedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2AcceleratorKeyPressedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2AcceleratorKeyPressedEventHandler_ImplVtbl<
        T: ICoreWebView2AcceleratorKeyPressedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2AcceleratorKeyPressedEventHandler_Impl>
        ICoreWebView2AcceleratorKeyPressedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2AcceleratorKeyPressedEventHandler_Vtbl =
            ICoreWebView2AcceleratorKeyPressedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2AcceleratorKeyPressedEventHandler {
        pub fn new<'a, T: ICoreWebView2AcceleratorKeyPressedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2AcceleratorKeyPressedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler,
        ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_Vtbl {}
    pub trait ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_Impl {}
    impl ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_Vtbl {
        pub const fn new<
            Identity: ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_Impl,
        >() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_ImplVtbl<
        T: ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_Impl>
        ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_Vtbl =
            ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler {
        pub fn new<'a, T: ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_ImplVtbl::<
                    T,
                >::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2BasicAuthenticationRequestedEventArgs,
        ICoreWebView2BasicAuthenticationRequestedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2BasicAuthenticationRequestedEventArgs_Vtbl {}
    pub trait ICoreWebView2BasicAuthenticationRequestedEventArgs_Impl {}
    impl ICoreWebView2BasicAuthenticationRequestedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2BasicAuthenticationRequestedEventArgs_Impl>() -> Self
        {
            Self {}
        }
    }
    struct ICoreWebView2BasicAuthenticationRequestedEventArgs_ImplVtbl<
        T: ICoreWebView2BasicAuthenticationRequestedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2BasicAuthenticationRequestedEventArgs_Impl>
        ICoreWebView2BasicAuthenticationRequestedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2BasicAuthenticationRequestedEventArgs_Vtbl =
            ICoreWebView2BasicAuthenticationRequestedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2BasicAuthenticationRequestedEventArgs {
        pub fn new<'a, T: ICoreWebView2BasicAuthenticationRequestedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2BasicAuthenticationRequestedEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2BasicAuthenticationRequestedEventHandler,
        ICoreWebView2BasicAuthenticationRequestedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2BasicAuthenticationRequestedEventHandler_Vtbl {}
    pub trait ICoreWebView2BasicAuthenticationRequestedEventHandler_Impl {}
    impl ICoreWebView2BasicAuthenticationRequestedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2BasicAuthenticationRequestedEventHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2BasicAuthenticationRequestedEventHandler_ImplVtbl<
        T: ICoreWebView2BasicAuthenticationRequestedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2BasicAuthenticationRequestedEventHandler_Impl>
        ICoreWebView2BasicAuthenticationRequestedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2BasicAuthenticationRequestedEventHandler_Vtbl =
            ICoreWebView2BasicAuthenticationRequestedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2BasicAuthenticationRequestedEventHandler {
        pub fn new<'a, T: ICoreWebView2BasicAuthenticationRequestedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2BasicAuthenticationRequestedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2BasicAuthenticationResponse,
        ICoreWebView2BasicAuthenticationResponse_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2BasicAuthenticationResponse_Vtbl {}
    pub trait ICoreWebView2BasicAuthenticationResponse_Impl {}
    impl ICoreWebView2BasicAuthenticationResponse_Vtbl {
        pub const fn new<Identity: ICoreWebView2BasicAuthenticationResponse_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2BasicAuthenticationResponse_ImplVtbl<
        T: ICoreWebView2BasicAuthenticationResponse_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2BasicAuthenticationResponse_Impl>
        ICoreWebView2BasicAuthenticationResponse_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2BasicAuthenticationResponse_Vtbl =
            ICoreWebView2BasicAuthenticationResponse_Vtbl::new::<T>();
    }
    impl ICoreWebView2BasicAuthenticationResponse {
        pub fn new<'a, T: ICoreWebView2BasicAuthenticationResponse_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2BasicAuthenticationResponse_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2BrowserExtension,
        ICoreWebView2BrowserExtension_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2BrowserExtension_Vtbl {}
    pub trait ICoreWebView2BrowserExtension_Impl {}
    impl ICoreWebView2BrowserExtension_Vtbl {
        pub const fn new<Identity: ICoreWebView2BrowserExtension_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2BrowserExtension_ImplVtbl<T: ICoreWebView2BrowserExtension_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2BrowserExtension_Impl> ICoreWebView2BrowserExtension_ImplVtbl<T> {
        const VTABLE: ICoreWebView2BrowserExtension_Vtbl =
            ICoreWebView2BrowserExtension_Vtbl::new::<T>();
    }
    impl ICoreWebView2BrowserExtension {
        pub fn new<'a, T: ICoreWebView2BrowserExtension_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2BrowserExtension_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2BrowserExtensionEnableCompletedHandler,
        ICoreWebView2BrowserExtensionEnableCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2BrowserExtensionEnableCompletedHandler_Vtbl {}
    pub trait ICoreWebView2BrowserExtensionEnableCompletedHandler_Impl {}
    impl ICoreWebView2BrowserExtensionEnableCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2BrowserExtensionEnableCompletedHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2BrowserExtensionEnableCompletedHandler_ImplVtbl<
        T: ICoreWebView2BrowserExtensionEnableCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2BrowserExtensionEnableCompletedHandler_Impl>
        ICoreWebView2BrowserExtensionEnableCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2BrowserExtensionEnableCompletedHandler_Vtbl =
            ICoreWebView2BrowserExtensionEnableCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2BrowserExtensionEnableCompletedHandler {
        pub fn new<'a, T: ICoreWebView2BrowserExtensionEnableCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2BrowserExtensionEnableCompletedHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2BrowserExtensionList,
        ICoreWebView2BrowserExtensionList_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2BrowserExtensionList_Vtbl {}
    pub trait ICoreWebView2BrowserExtensionList_Impl {}
    impl ICoreWebView2BrowserExtensionList_Vtbl {
        pub const fn new<Identity: ICoreWebView2BrowserExtensionList_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2BrowserExtensionList_ImplVtbl<T: ICoreWebView2BrowserExtensionList_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2BrowserExtensionList_Impl> ICoreWebView2BrowserExtensionList_ImplVtbl<T> {
        const VTABLE: ICoreWebView2BrowserExtensionList_Vtbl =
            ICoreWebView2BrowserExtensionList_Vtbl::new::<T>();
    }
    impl ICoreWebView2BrowserExtensionList {
        pub fn new<'a, T: ICoreWebView2BrowserExtensionList_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2BrowserExtensionList_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2BrowserExtensionRemoveCompletedHandler,
        ICoreWebView2BrowserExtensionRemoveCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2BrowserExtensionRemoveCompletedHandler_Vtbl {}
    pub trait ICoreWebView2BrowserExtensionRemoveCompletedHandler_Impl {}
    impl ICoreWebView2BrowserExtensionRemoveCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2BrowserExtensionRemoveCompletedHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2BrowserExtensionRemoveCompletedHandler_ImplVtbl<
        T: ICoreWebView2BrowserExtensionRemoveCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2BrowserExtensionRemoveCompletedHandler_Impl>
        ICoreWebView2BrowserExtensionRemoveCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2BrowserExtensionRemoveCompletedHandler_Vtbl =
            ICoreWebView2BrowserExtensionRemoveCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2BrowserExtensionRemoveCompletedHandler {
        pub fn new<'a, T: ICoreWebView2BrowserExtensionRemoveCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2BrowserExtensionRemoveCompletedHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2BrowserProcessExitedEventArgs,
        ICoreWebView2BrowserProcessExitedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2BrowserProcessExitedEventArgs_Vtbl {}
    pub trait ICoreWebView2BrowserProcessExitedEventArgs_Impl {}
    impl ICoreWebView2BrowserProcessExitedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2BrowserProcessExitedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2BrowserProcessExitedEventArgs_ImplVtbl<
        T: ICoreWebView2BrowserProcessExitedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2BrowserProcessExitedEventArgs_Impl>
        ICoreWebView2BrowserProcessExitedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2BrowserProcessExitedEventArgs_Vtbl =
            ICoreWebView2BrowserProcessExitedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2BrowserProcessExitedEventArgs {
        pub fn new<'a, T: ICoreWebView2BrowserProcessExitedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2BrowserProcessExitedEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2BrowserProcessExitedEventHandler,
        ICoreWebView2BrowserProcessExitedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2BrowserProcessExitedEventHandler_Vtbl {}
    pub trait ICoreWebView2BrowserProcessExitedEventHandler_Impl {}
    impl ICoreWebView2BrowserProcessExitedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2BrowserProcessExitedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2BrowserProcessExitedEventHandler_ImplVtbl<
        T: ICoreWebView2BrowserProcessExitedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2BrowserProcessExitedEventHandler_Impl>
        ICoreWebView2BrowserProcessExitedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2BrowserProcessExitedEventHandler_Vtbl =
            ICoreWebView2BrowserProcessExitedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2BrowserProcessExitedEventHandler {
        pub fn new<'a, T: ICoreWebView2BrowserProcessExitedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2BrowserProcessExitedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2BytesReceivedChangedEventHandler,
        ICoreWebView2BytesReceivedChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2BytesReceivedChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2BytesReceivedChangedEventHandler_Impl {}
    impl ICoreWebView2BytesReceivedChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2BytesReceivedChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2BytesReceivedChangedEventHandler_ImplVtbl<
        T: ICoreWebView2BytesReceivedChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2BytesReceivedChangedEventHandler_Impl>
        ICoreWebView2BytesReceivedChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2BytesReceivedChangedEventHandler_Vtbl =
            ICoreWebView2BytesReceivedChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2BytesReceivedChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2BytesReceivedChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2BytesReceivedChangedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CallDevToolsProtocolMethodCompletedHandler,
        ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_Vtbl {}
    pub trait ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_Impl {}
    impl ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_ImplVtbl<
        T: ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_Impl>
        ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_Vtbl =
            ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2CallDevToolsProtocolMethodCompletedHandler {
        pub fn new<'a, T: ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable:
                    &ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_ImplVtbl::<T>::VTABLE
                        as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CapturePreviewCompletedHandler,
        ICoreWebView2CapturePreviewCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CapturePreviewCompletedHandler_Vtbl {}
    pub trait ICoreWebView2CapturePreviewCompletedHandler_Impl {}
    impl ICoreWebView2CapturePreviewCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2CapturePreviewCompletedHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CapturePreviewCompletedHandler_ImplVtbl<
        T: ICoreWebView2CapturePreviewCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2CapturePreviewCompletedHandler_Impl>
        ICoreWebView2CapturePreviewCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2CapturePreviewCompletedHandler_Vtbl =
            ICoreWebView2CapturePreviewCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2CapturePreviewCompletedHandler {
        pub fn new<'a, T: ICoreWebView2CapturePreviewCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2CapturePreviewCompletedHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Certificate, ICoreWebView2Certificate_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Certificate_Vtbl {}
    pub trait ICoreWebView2Certificate_Impl {}
    impl ICoreWebView2Certificate_Vtbl {
        pub const fn new<Identity: ICoreWebView2Certificate_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Certificate_ImplVtbl<T: ICoreWebView2Certificate_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Certificate_Impl> ICoreWebView2Certificate_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Certificate_Vtbl = ICoreWebView2Certificate_Vtbl::new::<T>();
    }
    impl ICoreWebView2Certificate {
        pub fn new<'a, T: ICoreWebView2Certificate_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Certificate_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ClearBrowsingDataCompletedHandler,
        ICoreWebView2ClearBrowsingDataCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ClearBrowsingDataCompletedHandler_Vtbl {}
    pub trait ICoreWebView2ClearBrowsingDataCompletedHandler_Impl {}
    impl ICoreWebView2ClearBrowsingDataCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ClearBrowsingDataCompletedHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ClearBrowsingDataCompletedHandler_ImplVtbl<
        T: ICoreWebView2ClearBrowsingDataCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ClearBrowsingDataCompletedHandler_Impl>
        ICoreWebView2ClearBrowsingDataCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ClearBrowsingDataCompletedHandler_Vtbl =
            ICoreWebView2ClearBrowsingDataCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ClearBrowsingDataCompletedHandler {
        pub fn new<'a, T: ICoreWebView2ClearBrowsingDataCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ClearBrowsingDataCompletedHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler,
        ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_Vtbl {}
    pub trait ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_Impl {}
    impl ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_Vtbl {
        pub const fn new<
            Identity: ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_Impl,
        >() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_ImplVtbl<
        T: ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_Impl>
        ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_Vtbl =
            ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler {
        pub fn new<'a, T: ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap { vtable : & ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_ImplVtbl:: < T >::VTABLE as * const _ as * const _ , this :this as * const _ as * const _ } ;
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ClientCertificate,
        ICoreWebView2ClientCertificate_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ClientCertificate_Vtbl {}
    pub trait ICoreWebView2ClientCertificate_Impl {}
    impl ICoreWebView2ClientCertificate_Vtbl {
        pub const fn new<Identity: ICoreWebView2ClientCertificate_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ClientCertificate_ImplVtbl<T: ICoreWebView2ClientCertificate_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ClientCertificate_Impl> ICoreWebView2ClientCertificate_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ClientCertificate_Vtbl =
            ICoreWebView2ClientCertificate_Vtbl::new::<T>();
    }
    impl ICoreWebView2ClientCertificate {
        pub fn new<'a, T: ICoreWebView2ClientCertificate_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ClientCertificate_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ClientCertificateCollection,
        ICoreWebView2ClientCertificateCollection_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ClientCertificateCollection_Vtbl {}
    pub trait ICoreWebView2ClientCertificateCollection_Impl {}
    impl ICoreWebView2ClientCertificateCollection_Vtbl {
        pub const fn new<Identity: ICoreWebView2ClientCertificateCollection_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ClientCertificateCollection_ImplVtbl<
        T: ICoreWebView2ClientCertificateCollection_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ClientCertificateCollection_Impl>
        ICoreWebView2ClientCertificateCollection_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ClientCertificateCollection_Vtbl =
            ICoreWebView2ClientCertificateCollection_Vtbl::new::<T>();
    }
    impl ICoreWebView2ClientCertificateCollection {
        pub fn new<'a, T: ICoreWebView2ClientCertificateCollection_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ClientCertificateCollection_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ClientCertificateRequestedEventArgs,
        ICoreWebView2ClientCertificateRequestedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ClientCertificateRequestedEventArgs_Vtbl {}
    pub trait ICoreWebView2ClientCertificateRequestedEventArgs_Impl {}
    impl ICoreWebView2ClientCertificateRequestedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2ClientCertificateRequestedEventArgs_Impl>() -> Self
        {
            Self {}
        }
    }
    struct ICoreWebView2ClientCertificateRequestedEventArgs_ImplVtbl<
        T: ICoreWebView2ClientCertificateRequestedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ClientCertificateRequestedEventArgs_Impl>
        ICoreWebView2ClientCertificateRequestedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ClientCertificateRequestedEventArgs_Vtbl =
            ICoreWebView2ClientCertificateRequestedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2ClientCertificateRequestedEventArgs {
        pub fn new<'a, T: ICoreWebView2ClientCertificateRequestedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ClientCertificateRequestedEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ClientCertificateRequestedEventHandler,
        ICoreWebView2ClientCertificateRequestedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ClientCertificateRequestedEventHandler_Vtbl {}
    pub trait ICoreWebView2ClientCertificateRequestedEventHandler_Impl {}
    impl ICoreWebView2ClientCertificateRequestedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ClientCertificateRequestedEventHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ClientCertificateRequestedEventHandler_ImplVtbl<
        T: ICoreWebView2ClientCertificateRequestedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ClientCertificateRequestedEventHandler_Impl>
        ICoreWebView2ClientCertificateRequestedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ClientCertificateRequestedEventHandler_Vtbl =
            ICoreWebView2ClientCertificateRequestedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ClientCertificateRequestedEventHandler {
        pub fn new<'a, T: ICoreWebView2ClientCertificateRequestedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ClientCertificateRequestedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CompositionController,
        ICoreWebView2CompositionController_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CompositionController_Vtbl {}
    pub trait ICoreWebView2CompositionController_Impl {}
    impl ICoreWebView2CompositionController_Vtbl {
        pub const fn new<Identity: ICoreWebView2CompositionController_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CompositionController_ImplVtbl<T: ICoreWebView2CompositionController_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2CompositionController_Impl> ICoreWebView2CompositionController_ImplVtbl<T> {
        const VTABLE: ICoreWebView2CompositionController_Vtbl =
            ICoreWebView2CompositionController_Vtbl::new::<T>();
    }
    impl ICoreWebView2CompositionController {
        pub fn new<'a, T: ICoreWebView2CompositionController_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2CompositionController_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CompositionController2,
        ICoreWebView2CompositionController2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CompositionController2_Vtbl {}
    pub trait ICoreWebView2CompositionController2_Impl {}
    impl ICoreWebView2CompositionController2_Vtbl {
        pub const fn new<Identity: ICoreWebView2CompositionController2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CompositionController2_ImplVtbl<T: ICoreWebView2CompositionController2_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2CompositionController2_Impl> ICoreWebView2CompositionController2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2CompositionController2_Vtbl =
            ICoreWebView2CompositionController2_Vtbl::new::<T>();
    }
    impl ICoreWebView2CompositionController2 {
        pub fn new<'a, T: ICoreWebView2CompositionController2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2CompositionController2_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CompositionController3,
        ICoreWebView2CompositionController3_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CompositionController3_Vtbl {}
    pub trait ICoreWebView2CompositionController3_Impl {}
    impl ICoreWebView2CompositionController3_Vtbl {
        pub const fn new<Identity: ICoreWebView2CompositionController3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CompositionController3_ImplVtbl<T: ICoreWebView2CompositionController3_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2CompositionController3_Impl> ICoreWebView2CompositionController3_ImplVtbl<T> {
        const VTABLE: ICoreWebView2CompositionController3_Vtbl =
            ICoreWebView2CompositionController3_Vtbl::new::<T>();
    }
    impl ICoreWebView2CompositionController3 {
        pub fn new<'a, T: ICoreWebView2CompositionController3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2CompositionController3_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CompositionController4,
        ICoreWebView2CompositionController4_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CompositionController4_Vtbl {}
    pub trait ICoreWebView2CompositionController4_Impl {}
    impl ICoreWebView2CompositionController4_Vtbl {
        pub const fn new<Identity: ICoreWebView2CompositionController4_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CompositionController4_ImplVtbl<T: ICoreWebView2CompositionController4_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2CompositionController4_Impl> ICoreWebView2CompositionController4_ImplVtbl<T> {
        const VTABLE: ICoreWebView2CompositionController4_Vtbl =
            ICoreWebView2CompositionController4_Vtbl::new::<T>();
    }
    impl ICoreWebView2CompositionController4 {
        pub fn new<'a, T: ICoreWebView2CompositionController4_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2CompositionController4_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ContainsFullScreenElementChangedEventHandler,
        ICoreWebView2ContainsFullScreenElementChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ContainsFullScreenElementChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2ContainsFullScreenElementChangedEventHandler_Impl {}
    impl ICoreWebView2ContainsFullScreenElementChangedEventHandler_Vtbl {
        pub const fn new<
            Identity: ICoreWebView2ContainsFullScreenElementChangedEventHandler_Impl,
        >() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ContainsFullScreenElementChangedEventHandler_ImplVtbl<
        T: ICoreWebView2ContainsFullScreenElementChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ContainsFullScreenElementChangedEventHandler_Impl>
        ICoreWebView2ContainsFullScreenElementChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ContainsFullScreenElementChangedEventHandler_Vtbl =
            ICoreWebView2ContainsFullScreenElementChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ContainsFullScreenElementChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2ContainsFullScreenElementChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable:
                    &ICoreWebView2ContainsFullScreenElementChangedEventHandler_ImplVtbl::<T>::VTABLE
                        as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ContentLoadingEventArgs,
        ICoreWebView2ContentLoadingEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ContentLoadingEventArgs_Vtbl {}
    pub trait ICoreWebView2ContentLoadingEventArgs_Impl {}
    impl ICoreWebView2ContentLoadingEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2ContentLoadingEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ContentLoadingEventArgs_ImplVtbl<T: ICoreWebView2ContentLoadingEventArgs_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ContentLoadingEventArgs_Impl>
        ICoreWebView2ContentLoadingEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ContentLoadingEventArgs_Vtbl =
            ICoreWebView2ContentLoadingEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2ContentLoadingEventArgs {
        pub fn new<'a, T: ICoreWebView2ContentLoadingEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ContentLoadingEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ContentLoadingEventHandler,
        ICoreWebView2ContentLoadingEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ContentLoadingEventHandler_Vtbl {}
    pub trait ICoreWebView2ContentLoadingEventHandler_Impl {}
    impl ICoreWebView2ContentLoadingEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ContentLoadingEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ContentLoadingEventHandler_ImplVtbl<
        T: ICoreWebView2ContentLoadingEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ContentLoadingEventHandler_Impl>
        ICoreWebView2ContentLoadingEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ContentLoadingEventHandler_Vtbl =
            ICoreWebView2ContentLoadingEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ContentLoadingEventHandler {
        pub fn new<'a, T: ICoreWebView2ContentLoadingEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ContentLoadingEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ContextMenuItem,
        ICoreWebView2ContextMenuItem_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ContextMenuItem_Vtbl {}
    pub trait ICoreWebView2ContextMenuItem_Impl {}
    impl ICoreWebView2ContextMenuItem_Vtbl {
        pub const fn new<Identity: ICoreWebView2ContextMenuItem_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ContextMenuItem_ImplVtbl<T: ICoreWebView2ContextMenuItem_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ContextMenuItem_Impl> ICoreWebView2ContextMenuItem_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ContextMenuItem_Vtbl =
            ICoreWebView2ContextMenuItem_Vtbl::new::<T>();
    }
    impl ICoreWebView2ContextMenuItem {
        pub fn new<'a, T: ICoreWebView2ContextMenuItem_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ContextMenuItem_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ContextMenuItemCollection,
        ICoreWebView2ContextMenuItemCollection_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ContextMenuItemCollection_Vtbl {}
    pub trait ICoreWebView2ContextMenuItemCollection_Impl {}
    impl ICoreWebView2ContextMenuItemCollection_Vtbl {
        pub const fn new<Identity: ICoreWebView2ContextMenuItemCollection_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ContextMenuItemCollection_ImplVtbl<
        T: ICoreWebView2ContextMenuItemCollection_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ContextMenuItemCollection_Impl>
        ICoreWebView2ContextMenuItemCollection_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ContextMenuItemCollection_Vtbl =
            ICoreWebView2ContextMenuItemCollection_Vtbl::new::<T>();
    }
    impl ICoreWebView2ContextMenuItemCollection {
        pub fn new<'a, T: ICoreWebView2ContextMenuItemCollection_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ContextMenuItemCollection_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ContextMenuRequestedEventArgs,
        ICoreWebView2ContextMenuRequestedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ContextMenuRequestedEventArgs_Vtbl {}
    pub trait ICoreWebView2ContextMenuRequestedEventArgs_Impl {}
    impl ICoreWebView2ContextMenuRequestedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2ContextMenuRequestedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ContextMenuRequestedEventArgs_ImplVtbl<
        T: ICoreWebView2ContextMenuRequestedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ContextMenuRequestedEventArgs_Impl>
        ICoreWebView2ContextMenuRequestedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ContextMenuRequestedEventArgs_Vtbl =
            ICoreWebView2ContextMenuRequestedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2ContextMenuRequestedEventArgs {
        pub fn new<'a, T: ICoreWebView2ContextMenuRequestedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ContextMenuRequestedEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ContextMenuRequestedEventHandler,
        ICoreWebView2ContextMenuRequestedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ContextMenuRequestedEventHandler_Vtbl {}
    pub trait ICoreWebView2ContextMenuRequestedEventHandler_Impl {}
    impl ICoreWebView2ContextMenuRequestedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ContextMenuRequestedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ContextMenuRequestedEventHandler_ImplVtbl<
        T: ICoreWebView2ContextMenuRequestedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ContextMenuRequestedEventHandler_Impl>
        ICoreWebView2ContextMenuRequestedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ContextMenuRequestedEventHandler_Vtbl =
            ICoreWebView2ContextMenuRequestedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ContextMenuRequestedEventHandler {
        pub fn new<'a, T: ICoreWebView2ContextMenuRequestedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ContextMenuRequestedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ContextMenuTarget,
        ICoreWebView2ContextMenuTarget_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ContextMenuTarget_Vtbl {}
    pub trait ICoreWebView2ContextMenuTarget_Impl {}
    impl ICoreWebView2ContextMenuTarget_Vtbl {
        pub const fn new<Identity: ICoreWebView2ContextMenuTarget_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ContextMenuTarget_ImplVtbl<T: ICoreWebView2ContextMenuTarget_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ContextMenuTarget_Impl> ICoreWebView2ContextMenuTarget_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ContextMenuTarget_Vtbl =
            ICoreWebView2ContextMenuTarget_Vtbl::new::<T>();
    }
    impl ICoreWebView2ContextMenuTarget {
        pub fn new<'a, T: ICoreWebView2ContextMenuTarget_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ContextMenuTarget_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Controller, ICoreWebView2Controller_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Controller_Vtbl {}
    pub trait ICoreWebView2Controller_Impl {}
    impl ICoreWebView2Controller_Vtbl {
        pub const fn new<Identity: ICoreWebView2Controller_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Controller_ImplVtbl<T: ICoreWebView2Controller_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Controller_Impl> ICoreWebView2Controller_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Controller_Vtbl = ICoreWebView2Controller_Vtbl::new::<T>();
    }
    impl ICoreWebView2Controller {
        pub fn new<'a, T: ICoreWebView2Controller_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Controller_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Controller2, ICoreWebView2Controller2_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Controller2_Vtbl {}
    pub trait ICoreWebView2Controller2_Impl {}
    impl ICoreWebView2Controller2_Vtbl {
        pub const fn new<Identity: ICoreWebView2Controller2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Controller2_ImplVtbl<T: ICoreWebView2Controller2_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Controller2_Impl> ICoreWebView2Controller2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Controller2_Vtbl = ICoreWebView2Controller2_Vtbl::new::<T>();
    }
    impl ICoreWebView2Controller2 {
        pub fn new<'a, T: ICoreWebView2Controller2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Controller2_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Controller3, ICoreWebView2Controller3_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Controller3_Vtbl {}
    pub trait ICoreWebView2Controller3_Impl {}
    impl ICoreWebView2Controller3_Vtbl {
        pub const fn new<Identity: ICoreWebView2Controller3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Controller3_ImplVtbl<T: ICoreWebView2Controller3_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Controller3_Impl> ICoreWebView2Controller3_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Controller3_Vtbl = ICoreWebView2Controller3_Vtbl::new::<T>();
    }
    impl ICoreWebView2Controller3 {
        pub fn new<'a, T: ICoreWebView2Controller3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Controller3_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Controller4, ICoreWebView2Controller4_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Controller4_Vtbl {}
    pub trait ICoreWebView2Controller4_Impl {}
    impl ICoreWebView2Controller4_Vtbl {
        pub const fn new<Identity: ICoreWebView2Controller4_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Controller4_ImplVtbl<T: ICoreWebView2Controller4_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Controller4_Impl> ICoreWebView2Controller4_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Controller4_Vtbl = ICoreWebView2Controller4_Vtbl::new::<T>();
    }
    impl ICoreWebView2Controller4 {
        pub fn new<'a, T: ICoreWebView2Controller4_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Controller4_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ControllerOptions,
        ICoreWebView2ControllerOptions_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ControllerOptions_Vtbl {}
    pub trait ICoreWebView2ControllerOptions_Impl {}
    impl ICoreWebView2ControllerOptions_Vtbl {
        pub const fn new<Identity: ICoreWebView2ControllerOptions_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ControllerOptions_ImplVtbl<T: ICoreWebView2ControllerOptions_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ControllerOptions_Impl> ICoreWebView2ControllerOptions_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ControllerOptions_Vtbl =
            ICoreWebView2ControllerOptions_Vtbl::new::<T>();
    }
    impl ICoreWebView2ControllerOptions {
        pub fn new<'a, T: ICoreWebView2ControllerOptions_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ControllerOptions_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ControllerOptions2,
        ICoreWebView2ControllerOptions2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ControllerOptions2_Vtbl {}
    pub trait ICoreWebView2ControllerOptions2_Impl {}
    impl ICoreWebView2ControllerOptions2_Vtbl {
        pub const fn new<Identity: ICoreWebView2ControllerOptions2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ControllerOptions2_ImplVtbl<T: ICoreWebView2ControllerOptions2_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ControllerOptions2_Impl> ICoreWebView2ControllerOptions2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ControllerOptions2_Vtbl =
            ICoreWebView2ControllerOptions2_Vtbl::new::<T>();
    }
    impl ICoreWebView2ControllerOptions2 {
        pub fn new<'a, T: ICoreWebView2ControllerOptions2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ControllerOptions2_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Cookie, ICoreWebView2Cookie_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Cookie_Vtbl {}
    pub trait ICoreWebView2Cookie_Impl {}
    impl ICoreWebView2Cookie_Vtbl {
        pub const fn new<Identity: ICoreWebView2Cookie_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Cookie_ImplVtbl<T: ICoreWebView2Cookie_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2Cookie_Impl> ICoreWebView2Cookie_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Cookie_Vtbl = ICoreWebView2Cookie_Vtbl::new::<T>();
    }
    impl ICoreWebView2Cookie {
        pub fn new<'a, T: ICoreWebView2Cookie_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Cookie_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2CookieList, ICoreWebView2CookieList_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CookieList_Vtbl {}
    pub trait ICoreWebView2CookieList_Impl {}
    impl ICoreWebView2CookieList_Vtbl {
        pub const fn new<Identity: ICoreWebView2CookieList_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CookieList_ImplVtbl<T: ICoreWebView2CookieList_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2CookieList_Impl> ICoreWebView2CookieList_ImplVtbl<T> {
        const VTABLE: ICoreWebView2CookieList_Vtbl = ICoreWebView2CookieList_Vtbl::new::<T>();
    }
    impl ICoreWebView2CookieList {
        pub fn new<'a, T: ICoreWebView2CookieList_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2CookieList_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CookieManager,
        ICoreWebView2CookieManager_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CookieManager_Vtbl {}
    pub trait ICoreWebView2CookieManager_Impl {}
    impl ICoreWebView2CookieManager_Vtbl {
        pub const fn new<Identity: ICoreWebView2CookieManager_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CookieManager_ImplVtbl<T: ICoreWebView2CookieManager_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2CookieManager_Impl> ICoreWebView2CookieManager_ImplVtbl<T> {
        const VTABLE: ICoreWebView2CookieManager_Vtbl = ICoreWebView2CookieManager_Vtbl::new::<T>();
    }
    impl ICoreWebView2CookieManager {
        pub fn new<'a, T: ICoreWebView2CookieManager_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2CookieManager_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler,
        ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_Vtbl {}
    pub trait ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_Impl {}
    impl ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_Vtbl {
        pub const fn new<
            Identity: ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_Impl,
        >() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_ImplVtbl<
        T: ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_Impl>
        ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_Vtbl =
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler {
        pub fn new<
            'a,
            T: ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_Impl,
        >(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable:
                    &ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_ImplVtbl::<
                        T,
                    >::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CreateCoreWebView2ControllerCompletedHandler,
        ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_Vtbl {}
    pub trait ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_Impl {}
    impl ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_Vtbl {
        pub const fn new<
            Identity: ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_Impl,
        >() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_ImplVtbl<
        T: ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_Impl>
        ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_Vtbl =
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2CreateCoreWebView2ControllerCompletedHandler {
        pub fn new<'a, T: ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable:
                    &ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_ImplVtbl::<T>::VTABLE
                        as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler,
        ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_Vtbl {}
    pub trait ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_Impl {}
    impl ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_Vtbl {
        pub const fn new<
            Identity: ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_Impl,
        >() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_ImplVtbl<
        T: ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_Impl>
        ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_Vtbl =
            ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler {
        pub fn new<'a, T: ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap { vtable : & ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_ImplVtbl:: < T >::VTABLE as * const _ as * const _ , this :this as * const _ as * const _ } ;
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CursorChangedEventHandler,
        ICoreWebView2CursorChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CursorChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2CursorChangedEventHandler_Impl {}
    impl ICoreWebView2CursorChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2CursorChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CursorChangedEventHandler_ImplVtbl<
        T: ICoreWebView2CursorChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2CursorChangedEventHandler_Impl>
        ICoreWebView2CursorChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2CursorChangedEventHandler_Vtbl =
            ICoreWebView2CursorChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2CursorChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2CursorChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2CursorChangedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CustomItemSelectedEventHandler,
        ICoreWebView2CustomItemSelectedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CustomItemSelectedEventHandler_Vtbl {}
    pub trait ICoreWebView2CustomItemSelectedEventHandler_Impl {}
    impl ICoreWebView2CustomItemSelectedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2CustomItemSelectedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CustomItemSelectedEventHandler_ImplVtbl<
        T: ICoreWebView2CustomItemSelectedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2CustomItemSelectedEventHandler_Impl>
        ICoreWebView2CustomItemSelectedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2CustomItemSelectedEventHandler_Vtbl =
            ICoreWebView2CustomItemSelectedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2CustomItemSelectedEventHandler {
        pub fn new<'a, T: ICoreWebView2CustomItemSelectedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2CustomItemSelectedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2CustomSchemeRegistration,
        ICoreWebView2CustomSchemeRegistration_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2CustomSchemeRegistration_Vtbl {}
    pub trait ICoreWebView2CustomSchemeRegistration_Impl {}
    impl ICoreWebView2CustomSchemeRegistration_Vtbl {
        pub const fn new<Identity: ICoreWebView2CustomSchemeRegistration_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2CustomSchemeRegistration_ImplVtbl<T: ICoreWebView2CustomSchemeRegistration_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2CustomSchemeRegistration_Impl>
        ICoreWebView2CustomSchemeRegistration_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2CustomSchemeRegistration_Vtbl =
            ICoreWebView2CustomSchemeRegistration_Vtbl::new::<T>();
    }
    impl ICoreWebView2CustomSchemeRegistration {
        pub fn new<'a, T: ICoreWebView2CustomSchemeRegistration_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2CustomSchemeRegistration_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2DOMContentLoadedEventArgs,
        ICoreWebView2DOMContentLoadedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2DOMContentLoadedEventArgs_Vtbl {}
    pub trait ICoreWebView2DOMContentLoadedEventArgs_Impl {}
    impl ICoreWebView2DOMContentLoadedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2DOMContentLoadedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2DOMContentLoadedEventArgs_ImplVtbl<
        T: ICoreWebView2DOMContentLoadedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2DOMContentLoadedEventArgs_Impl>
        ICoreWebView2DOMContentLoadedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2DOMContentLoadedEventArgs_Vtbl =
            ICoreWebView2DOMContentLoadedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2DOMContentLoadedEventArgs {
        pub fn new<'a, T: ICoreWebView2DOMContentLoadedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2DOMContentLoadedEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2DOMContentLoadedEventHandler,
        ICoreWebView2DOMContentLoadedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2DOMContentLoadedEventHandler_Vtbl {}
    pub trait ICoreWebView2DOMContentLoadedEventHandler_Impl {}
    impl ICoreWebView2DOMContentLoadedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2DOMContentLoadedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2DOMContentLoadedEventHandler_ImplVtbl<
        T: ICoreWebView2DOMContentLoadedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2DOMContentLoadedEventHandler_Impl>
        ICoreWebView2DOMContentLoadedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2DOMContentLoadedEventHandler_Vtbl =
            ICoreWebView2DOMContentLoadedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2DOMContentLoadedEventHandler {
        pub fn new<'a, T: ICoreWebView2DOMContentLoadedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2DOMContentLoadedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Deferral, ICoreWebView2Deferral_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Deferral_Vtbl {}
    pub trait ICoreWebView2Deferral_Impl {}
    impl ICoreWebView2Deferral_Vtbl {
        pub const fn new<Identity: ICoreWebView2Deferral_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Deferral_ImplVtbl<T: ICoreWebView2Deferral_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Deferral_Impl> ICoreWebView2Deferral_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Deferral_Vtbl = ICoreWebView2Deferral_Vtbl::new::<T>();
    }
    impl ICoreWebView2Deferral {
        pub fn new<'a, T: ICoreWebView2Deferral_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Deferral_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2DevToolsProtocolEventReceivedEventArgs,
        ICoreWebView2DevToolsProtocolEventReceivedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2DevToolsProtocolEventReceivedEventArgs_Vtbl {}
    pub trait ICoreWebView2DevToolsProtocolEventReceivedEventArgs_Impl {}
    impl ICoreWebView2DevToolsProtocolEventReceivedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2DevToolsProtocolEventReceivedEventArgs_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2DevToolsProtocolEventReceivedEventArgs_ImplVtbl<
        T: ICoreWebView2DevToolsProtocolEventReceivedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2DevToolsProtocolEventReceivedEventArgs_Impl>
        ICoreWebView2DevToolsProtocolEventReceivedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2DevToolsProtocolEventReceivedEventArgs_Vtbl =
            ICoreWebView2DevToolsProtocolEventReceivedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2DevToolsProtocolEventReceivedEventArgs {
        pub fn new<'a, T: ICoreWebView2DevToolsProtocolEventReceivedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2DevToolsProtocolEventReceivedEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2DevToolsProtocolEventReceivedEventArgs2,
        ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_Vtbl {}
    pub trait ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_Impl {}
    impl ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_Vtbl {
        pub const fn new<Identity: ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_ImplVtbl<
        T: ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_Impl>
        ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_Vtbl =
            ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_Vtbl::new::<T>();
    }
    impl ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 {
        pub fn new<'a, T: ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2DevToolsProtocolEventReceivedEventHandler,
        ICoreWebView2DevToolsProtocolEventReceivedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2DevToolsProtocolEventReceivedEventHandler_Vtbl {}
    pub trait ICoreWebView2DevToolsProtocolEventReceivedEventHandler_Impl {}
    impl ICoreWebView2DevToolsProtocolEventReceivedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2DevToolsProtocolEventReceivedEventHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2DevToolsProtocolEventReceivedEventHandler_ImplVtbl<
        T: ICoreWebView2DevToolsProtocolEventReceivedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2DevToolsProtocolEventReceivedEventHandler_Impl>
        ICoreWebView2DevToolsProtocolEventReceivedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2DevToolsProtocolEventReceivedEventHandler_Vtbl =
            ICoreWebView2DevToolsProtocolEventReceivedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2DevToolsProtocolEventReceivedEventHandler {
        pub fn new<'a, T: ICoreWebView2DevToolsProtocolEventReceivedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable:
                    &ICoreWebView2DevToolsProtocolEventReceivedEventHandler_ImplVtbl::<T>::VTABLE
                        as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2DevToolsProtocolEventReceiver,
        ICoreWebView2DevToolsProtocolEventReceiver_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2DevToolsProtocolEventReceiver_Vtbl {}
    pub trait ICoreWebView2DevToolsProtocolEventReceiver_Impl {}
    impl ICoreWebView2DevToolsProtocolEventReceiver_Vtbl {
        pub const fn new<Identity: ICoreWebView2DevToolsProtocolEventReceiver_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2DevToolsProtocolEventReceiver_ImplVtbl<
        T: ICoreWebView2DevToolsProtocolEventReceiver_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2DevToolsProtocolEventReceiver_Impl>
        ICoreWebView2DevToolsProtocolEventReceiver_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2DevToolsProtocolEventReceiver_Vtbl =
            ICoreWebView2DevToolsProtocolEventReceiver_Vtbl::new::<T>();
    }
    impl ICoreWebView2DevToolsProtocolEventReceiver {
        pub fn new<'a, T: ICoreWebView2DevToolsProtocolEventReceiver_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2DevToolsProtocolEventReceiver_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2DocumentTitleChangedEventHandler,
        ICoreWebView2DocumentTitleChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2DocumentTitleChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2DocumentTitleChangedEventHandler_Impl {}
    impl ICoreWebView2DocumentTitleChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2DocumentTitleChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2DocumentTitleChangedEventHandler_ImplVtbl<
        T: ICoreWebView2DocumentTitleChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2DocumentTitleChangedEventHandler_Impl>
        ICoreWebView2DocumentTitleChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2DocumentTitleChangedEventHandler_Vtbl =
            ICoreWebView2DocumentTitleChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2DocumentTitleChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2DocumentTitleChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2DocumentTitleChangedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2DownloadOperation,
        ICoreWebView2DownloadOperation_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2DownloadOperation_Vtbl {}
    pub trait ICoreWebView2DownloadOperation_Impl {}
    impl ICoreWebView2DownloadOperation_Vtbl {
        pub const fn new<Identity: ICoreWebView2DownloadOperation_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2DownloadOperation_ImplVtbl<T: ICoreWebView2DownloadOperation_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2DownloadOperation_Impl> ICoreWebView2DownloadOperation_ImplVtbl<T> {
        const VTABLE: ICoreWebView2DownloadOperation_Vtbl =
            ICoreWebView2DownloadOperation_Vtbl::new::<T>();
    }
    impl ICoreWebView2DownloadOperation {
        pub fn new<'a, T: ICoreWebView2DownloadOperation_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2DownloadOperation_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2DownloadStartingEventArgs,
        ICoreWebView2DownloadStartingEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2DownloadStartingEventArgs_Vtbl {}
    pub trait ICoreWebView2DownloadStartingEventArgs_Impl {}
    impl ICoreWebView2DownloadStartingEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2DownloadStartingEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2DownloadStartingEventArgs_ImplVtbl<
        T: ICoreWebView2DownloadStartingEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2DownloadStartingEventArgs_Impl>
        ICoreWebView2DownloadStartingEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2DownloadStartingEventArgs_Vtbl =
            ICoreWebView2DownloadStartingEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2DownloadStartingEventArgs {
        pub fn new<'a, T: ICoreWebView2DownloadStartingEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2DownloadStartingEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2DownloadStartingEventHandler,
        ICoreWebView2DownloadStartingEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2DownloadStartingEventHandler_Vtbl {}
    pub trait ICoreWebView2DownloadStartingEventHandler_Impl {}
    impl ICoreWebView2DownloadStartingEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2DownloadStartingEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2DownloadStartingEventHandler_ImplVtbl<
        T: ICoreWebView2DownloadStartingEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2DownloadStartingEventHandler_Impl>
        ICoreWebView2DownloadStartingEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2DownloadStartingEventHandler_Vtbl =
            ICoreWebView2DownloadStartingEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2DownloadStartingEventHandler {
        pub fn new<'a, T: ICoreWebView2DownloadStartingEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2DownloadStartingEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Environment, ICoreWebView2Environment_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment_Vtbl {}
    pub trait ICoreWebView2Environment_Impl {}
    impl ICoreWebView2Environment_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment_ImplVtbl<T: ICoreWebView2Environment_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment_Impl> ICoreWebView2Environment_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment_Vtbl = ICoreWebView2Environment_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment {
        pub fn new<'a, T: ICoreWebView2Environment_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2Environment10,
        ICoreWebView2Environment10_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment10_Vtbl {}
    pub trait ICoreWebView2Environment10_Impl {}
    impl ICoreWebView2Environment10_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment10_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment10_ImplVtbl<T: ICoreWebView2Environment10_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment10_Impl> ICoreWebView2Environment10_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment10_Vtbl = ICoreWebView2Environment10_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment10 {
        pub fn new<'a, T: ICoreWebView2Environment10_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment10_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2Environment11,
        ICoreWebView2Environment11_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment11_Vtbl {}
    pub trait ICoreWebView2Environment11_Impl {}
    impl ICoreWebView2Environment11_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment11_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment11_ImplVtbl<T: ICoreWebView2Environment11_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment11_Impl> ICoreWebView2Environment11_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment11_Vtbl = ICoreWebView2Environment11_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment11 {
        pub fn new<'a, T: ICoreWebView2Environment11_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment11_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2Environment12,
        ICoreWebView2Environment12_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment12_Vtbl {}
    pub trait ICoreWebView2Environment12_Impl {}
    impl ICoreWebView2Environment12_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment12_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment12_ImplVtbl<T: ICoreWebView2Environment12_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment12_Impl> ICoreWebView2Environment12_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment12_Vtbl = ICoreWebView2Environment12_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment12 {
        pub fn new<'a, T: ICoreWebView2Environment12_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment12_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2Environment13,
        ICoreWebView2Environment13_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment13_Vtbl {}
    pub trait ICoreWebView2Environment13_Impl {}
    impl ICoreWebView2Environment13_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment13_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment13_ImplVtbl<T: ICoreWebView2Environment13_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment13_Impl> ICoreWebView2Environment13_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment13_Vtbl = ICoreWebView2Environment13_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment13 {
        pub fn new<'a, T: ICoreWebView2Environment13_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment13_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2Environment14,
        ICoreWebView2Environment14_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment14_Vtbl {}
    pub trait ICoreWebView2Environment14_Impl {}
    impl ICoreWebView2Environment14_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment14_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment14_ImplVtbl<T: ICoreWebView2Environment14_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment14_Impl> ICoreWebView2Environment14_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment14_Vtbl = ICoreWebView2Environment14_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment14 {
        pub fn new<'a, T: ICoreWebView2Environment14_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment14_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Environment2, ICoreWebView2Environment2_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment2_Vtbl {}
    pub trait ICoreWebView2Environment2_Impl {}
    impl ICoreWebView2Environment2_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment2_ImplVtbl<T: ICoreWebView2Environment2_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment2_Impl> ICoreWebView2Environment2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment2_Vtbl = ICoreWebView2Environment2_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment2 {
        pub fn new<'a, T: ICoreWebView2Environment2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment2_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Environment3, ICoreWebView2Environment3_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment3_Vtbl {}
    pub trait ICoreWebView2Environment3_Impl {}
    impl ICoreWebView2Environment3_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment3_ImplVtbl<T: ICoreWebView2Environment3_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment3_Impl> ICoreWebView2Environment3_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment3_Vtbl = ICoreWebView2Environment3_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment3 {
        pub fn new<'a, T: ICoreWebView2Environment3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment3_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Environment4, ICoreWebView2Environment4_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment4_Vtbl {}
    pub trait ICoreWebView2Environment4_Impl {}
    impl ICoreWebView2Environment4_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment4_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment4_ImplVtbl<T: ICoreWebView2Environment4_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment4_Impl> ICoreWebView2Environment4_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment4_Vtbl = ICoreWebView2Environment4_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment4 {
        pub fn new<'a, T: ICoreWebView2Environment4_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment4_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Environment5, ICoreWebView2Environment5_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment5_Vtbl {}
    pub trait ICoreWebView2Environment5_Impl {}
    impl ICoreWebView2Environment5_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment5_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment5_ImplVtbl<T: ICoreWebView2Environment5_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment5_Impl> ICoreWebView2Environment5_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment5_Vtbl = ICoreWebView2Environment5_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment5 {
        pub fn new<'a, T: ICoreWebView2Environment5_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment5_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Environment6, ICoreWebView2Environment6_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment6_Vtbl {}
    pub trait ICoreWebView2Environment6_Impl {}
    impl ICoreWebView2Environment6_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment6_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment6_ImplVtbl<T: ICoreWebView2Environment6_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment6_Impl> ICoreWebView2Environment6_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment6_Vtbl = ICoreWebView2Environment6_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment6 {
        pub fn new<'a, T: ICoreWebView2Environment6_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment6_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Environment7, ICoreWebView2Environment7_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment7_Vtbl {}
    pub trait ICoreWebView2Environment7_Impl {}
    impl ICoreWebView2Environment7_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment7_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment7_ImplVtbl<T: ICoreWebView2Environment7_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment7_Impl> ICoreWebView2Environment7_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment7_Vtbl = ICoreWebView2Environment7_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment7 {
        pub fn new<'a, T: ICoreWebView2Environment7_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment7_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Environment8, ICoreWebView2Environment8_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment8_Vtbl {}
    pub trait ICoreWebView2Environment8_Impl {}
    impl ICoreWebView2Environment8_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment8_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment8_ImplVtbl<T: ICoreWebView2Environment8_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment8_Impl> ICoreWebView2Environment8_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment8_Vtbl = ICoreWebView2Environment8_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment8 {
        pub fn new<'a, T: ICoreWebView2Environment8_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment8_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Environment9, ICoreWebView2Environment9_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Environment9_Vtbl {}
    pub trait ICoreWebView2Environment9_Impl {}
    impl ICoreWebView2Environment9_Vtbl {
        pub const fn new<Identity: ICoreWebView2Environment9_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Environment9_ImplVtbl<T: ICoreWebView2Environment9_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Environment9_Impl> ICoreWebView2Environment9_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Environment9_Vtbl = ICoreWebView2Environment9_Vtbl::new::<T>();
    }
    impl ICoreWebView2Environment9 {
        pub fn new<'a, T: ICoreWebView2Environment9_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Environment9_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2EnvironmentOptions,
        ICoreWebView2EnvironmentOptions_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2EnvironmentOptions_Vtbl {}
    pub trait ICoreWebView2EnvironmentOptions_Impl {}
    impl ICoreWebView2EnvironmentOptions_Vtbl {
        pub const fn new<Identity: ICoreWebView2EnvironmentOptions_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2EnvironmentOptions_ImplVtbl<T: ICoreWebView2EnvironmentOptions_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2EnvironmentOptions_Impl> ICoreWebView2EnvironmentOptions_ImplVtbl<T> {
        const VTABLE: ICoreWebView2EnvironmentOptions_Vtbl =
            ICoreWebView2EnvironmentOptions_Vtbl::new::<T>();
    }
    impl ICoreWebView2EnvironmentOptions {
        pub fn new<'a, T: ICoreWebView2EnvironmentOptions_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2EnvironmentOptions_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2EnvironmentOptions2,
        ICoreWebView2EnvironmentOptions2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2EnvironmentOptions2_Vtbl {}
    pub trait ICoreWebView2EnvironmentOptions2_Impl {}
    impl ICoreWebView2EnvironmentOptions2_Vtbl {
        pub const fn new<Identity: ICoreWebView2EnvironmentOptions2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2EnvironmentOptions2_ImplVtbl<T: ICoreWebView2EnvironmentOptions2_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2EnvironmentOptions2_Impl> ICoreWebView2EnvironmentOptions2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2EnvironmentOptions2_Vtbl =
            ICoreWebView2EnvironmentOptions2_Vtbl::new::<T>();
    }
    impl ICoreWebView2EnvironmentOptions2 {
        pub fn new<'a, T: ICoreWebView2EnvironmentOptions2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2EnvironmentOptions2_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2EnvironmentOptions3,
        ICoreWebView2EnvironmentOptions3_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2EnvironmentOptions3_Vtbl {}
    pub trait ICoreWebView2EnvironmentOptions3_Impl {}
    impl ICoreWebView2EnvironmentOptions3_Vtbl {
        pub const fn new<Identity: ICoreWebView2EnvironmentOptions3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2EnvironmentOptions3_ImplVtbl<T: ICoreWebView2EnvironmentOptions3_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2EnvironmentOptions3_Impl> ICoreWebView2EnvironmentOptions3_ImplVtbl<T> {
        const VTABLE: ICoreWebView2EnvironmentOptions3_Vtbl =
            ICoreWebView2EnvironmentOptions3_Vtbl::new::<T>();
    }
    impl ICoreWebView2EnvironmentOptions3 {
        pub fn new<'a, T: ICoreWebView2EnvironmentOptions3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2EnvironmentOptions3_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2EnvironmentOptions4,
        ICoreWebView2EnvironmentOptions4_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2EnvironmentOptions4_Vtbl {}
    pub trait ICoreWebView2EnvironmentOptions4_Impl {}
    impl ICoreWebView2EnvironmentOptions4_Vtbl {
        pub const fn new<Identity: ICoreWebView2EnvironmentOptions4_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2EnvironmentOptions4_ImplVtbl<T: ICoreWebView2EnvironmentOptions4_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2EnvironmentOptions4_Impl> ICoreWebView2EnvironmentOptions4_ImplVtbl<T> {
        const VTABLE: ICoreWebView2EnvironmentOptions4_Vtbl =
            ICoreWebView2EnvironmentOptions4_Vtbl::new::<T>();
    }
    impl ICoreWebView2EnvironmentOptions4 {
        pub fn new<'a, T: ICoreWebView2EnvironmentOptions4_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2EnvironmentOptions4_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2EnvironmentOptions5,
        ICoreWebView2EnvironmentOptions5_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2EnvironmentOptions5_Vtbl {}
    pub trait ICoreWebView2EnvironmentOptions5_Impl {}
    impl ICoreWebView2EnvironmentOptions5_Vtbl {
        pub const fn new<Identity: ICoreWebView2EnvironmentOptions5_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2EnvironmentOptions5_ImplVtbl<T: ICoreWebView2EnvironmentOptions5_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2EnvironmentOptions5_Impl> ICoreWebView2EnvironmentOptions5_ImplVtbl<T> {
        const VTABLE: ICoreWebView2EnvironmentOptions5_Vtbl =
            ICoreWebView2EnvironmentOptions5_Vtbl::new::<T>();
    }
    impl ICoreWebView2EnvironmentOptions5 {
        pub fn new<'a, T: ICoreWebView2EnvironmentOptions5_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2EnvironmentOptions5_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2EnvironmentOptions6,
        ICoreWebView2EnvironmentOptions6_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2EnvironmentOptions6_Vtbl {}
    pub trait ICoreWebView2EnvironmentOptions6_Impl {}
    impl ICoreWebView2EnvironmentOptions6_Vtbl {
        pub const fn new<Identity: ICoreWebView2EnvironmentOptions6_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2EnvironmentOptions6_ImplVtbl<T: ICoreWebView2EnvironmentOptions6_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2EnvironmentOptions6_Impl> ICoreWebView2EnvironmentOptions6_ImplVtbl<T> {
        const VTABLE: ICoreWebView2EnvironmentOptions6_Vtbl =
            ICoreWebView2EnvironmentOptions6_Vtbl::new::<T>();
    }
    impl ICoreWebView2EnvironmentOptions6 {
        pub fn new<'a, T: ICoreWebView2EnvironmentOptions6_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2EnvironmentOptions6_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2EnvironmentOptions7,
        ICoreWebView2EnvironmentOptions7_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2EnvironmentOptions7_Vtbl {}
    pub trait ICoreWebView2EnvironmentOptions7_Impl {}
    impl ICoreWebView2EnvironmentOptions7_Vtbl {
        pub const fn new<Identity: ICoreWebView2EnvironmentOptions7_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2EnvironmentOptions7_ImplVtbl<T: ICoreWebView2EnvironmentOptions7_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2EnvironmentOptions7_Impl> ICoreWebView2EnvironmentOptions7_ImplVtbl<T> {
        const VTABLE: ICoreWebView2EnvironmentOptions7_Vtbl =
            ICoreWebView2EnvironmentOptions7_Vtbl::new::<T>();
    }
    impl ICoreWebView2EnvironmentOptions7 {
        pub fn new<'a, T: ICoreWebView2EnvironmentOptions7_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2EnvironmentOptions7_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2EnvironmentOptions8,
        ICoreWebView2EnvironmentOptions8_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2EnvironmentOptions8_Vtbl {}
    pub trait ICoreWebView2EnvironmentOptions8_Impl {}
    impl ICoreWebView2EnvironmentOptions8_Vtbl {
        pub const fn new<Identity: ICoreWebView2EnvironmentOptions8_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2EnvironmentOptions8_ImplVtbl<T: ICoreWebView2EnvironmentOptions8_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2EnvironmentOptions8_Impl> ICoreWebView2EnvironmentOptions8_ImplVtbl<T> {
        const VTABLE: ICoreWebView2EnvironmentOptions8_Vtbl =
            ICoreWebView2EnvironmentOptions8_Vtbl::new::<T>();
    }
    impl ICoreWebView2EnvironmentOptions8 {
        pub fn new<'a, T: ICoreWebView2EnvironmentOptions8_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2EnvironmentOptions8_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2EstimatedEndTimeChangedEventHandler,
        ICoreWebView2EstimatedEndTimeChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2EstimatedEndTimeChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2EstimatedEndTimeChangedEventHandler_Impl {}
    impl ICoreWebView2EstimatedEndTimeChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2EstimatedEndTimeChangedEventHandler_Impl>() -> Self
        {
            Self {}
        }
    }
    struct ICoreWebView2EstimatedEndTimeChangedEventHandler_ImplVtbl<
        T: ICoreWebView2EstimatedEndTimeChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2EstimatedEndTimeChangedEventHandler_Impl>
        ICoreWebView2EstimatedEndTimeChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2EstimatedEndTimeChangedEventHandler_Vtbl =
            ICoreWebView2EstimatedEndTimeChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2EstimatedEndTimeChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2EstimatedEndTimeChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2EstimatedEndTimeChangedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ExecuteScriptCompletedHandler,
        ICoreWebView2ExecuteScriptCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ExecuteScriptCompletedHandler_Vtbl {}
    pub trait ICoreWebView2ExecuteScriptCompletedHandler_Impl {}
    impl ICoreWebView2ExecuteScriptCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ExecuteScriptCompletedHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ExecuteScriptCompletedHandler_ImplVtbl<
        T: ICoreWebView2ExecuteScriptCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ExecuteScriptCompletedHandler_Impl>
        ICoreWebView2ExecuteScriptCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ExecuteScriptCompletedHandler_Vtbl =
            ICoreWebView2ExecuteScriptCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ExecuteScriptCompletedHandler {
        pub fn new<'a, T: ICoreWebView2ExecuteScriptCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ExecuteScriptCompletedHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ExecuteScriptResult,
        ICoreWebView2ExecuteScriptResult_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ExecuteScriptResult_Vtbl {}
    pub trait ICoreWebView2ExecuteScriptResult_Impl {}
    impl ICoreWebView2ExecuteScriptResult_Vtbl {
        pub const fn new<Identity: ICoreWebView2ExecuteScriptResult_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ExecuteScriptResult_ImplVtbl<T: ICoreWebView2ExecuteScriptResult_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ExecuteScriptResult_Impl> ICoreWebView2ExecuteScriptResult_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ExecuteScriptResult_Vtbl =
            ICoreWebView2ExecuteScriptResult_Vtbl::new::<T>();
    }
    impl ICoreWebView2ExecuteScriptResult {
        pub fn new<'a, T: ICoreWebView2ExecuteScriptResult_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ExecuteScriptResult_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ExecuteScriptWithResultCompletedHandler,
        ICoreWebView2ExecuteScriptWithResultCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ExecuteScriptWithResultCompletedHandler_Vtbl {}
    pub trait ICoreWebView2ExecuteScriptWithResultCompletedHandler_Impl {}
    impl ICoreWebView2ExecuteScriptWithResultCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ExecuteScriptWithResultCompletedHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ExecuteScriptWithResultCompletedHandler_ImplVtbl<
        T: ICoreWebView2ExecuteScriptWithResultCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ExecuteScriptWithResultCompletedHandler_Impl>
        ICoreWebView2ExecuteScriptWithResultCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ExecuteScriptWithResultCompletedHandler_Vtbl =
            ICoreWebView2ExecuteScriptWithResultCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ExecuteScriptWithResultCompletedHandler {
        pub fn new<'a, T: ICoreWebView2ExecuteScriptWithResultCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ExecuteScriptWithResultCompletedHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FaviconChangedEventHandler,
        ICoreWebView2FaviconChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FaviconChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2FaviconChangedEventHandler_Impl {}
    impl ICoreWebView2FaviconChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FaviconChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FaviconChangedEventHandler_ImplVtbl<
        T: ICoreWebView2FaviconChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FaviconChangedEventHandler_Impl>
        ICoreWebView2FaviconChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FaviconChangedEventHandler_Vtbl =
            ICoreWebView2FaviconChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FaviconChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2FaviconChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FaviconChangedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2File, ICoreWebView2File_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2File_Vtbl {}
    pub trait ICoreWebView2File_Impl {}
    impl ICoreWebView2File_Vtbl {
        pub const fn new<Identity: ICoreWebView2File_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2File_ImplVtbl<T: ICoreWebView2File_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2File_Impl> ICoreWebView2File_ImplVtbl<T> {
        const VTABLE: ICoreWebView2File_Vtbl = ICoreWebView2File_Vtbl::new::<T>();
    }
    impl ICoreWebView2File {
        pub fn new<'a, T: ICoreWebView2File_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2File_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FileSystemHandle,
        ICoreWebView2FileSystemHandle_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FileSystemHandle_Vtbl {}
    pub trait ICoreWebView2FileSystemHandle_Impl {}
    impl ICoreWebView2FileSystemHandle_Vtbl {
        pub const fn new<Identity: ICoreWebView2FileSystemHandle_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FileSystemHandle_ImplVtbl<T: ICoreWebView2FileSystemHandle_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2FileSystemHandle_Impl> ICoreWebView2FileSystemHandle_ImplVtbl<T> {
        const VTABLE: ICoreWebView2FileSystemHandle_Vtbl =
            ICoreWebView2FileSystemHandle_Vtbl::new::<T>();
    }
    impl ICoreWebView2FileSystemHandle {
        pub fn new<'a, T: ICoreWebView2FileSystemHandle_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FileSystemHandle_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FocusChangedEventHandler,
        ICoreWebView2FocusChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FocusChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2FocusChangedEventHandler_Impl {}
    impl ICoreWebView2FocusChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FocusChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FocusChangedEventHandler_ImplVtbl<T: ICoreWebView2FocusChangedEventHandler_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2FocusChangedEventHandler_Impl>
        ICoreWebView2FocusChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FocusChangedEventHandler_Vtbl =
            ICoreWebView2FocusChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FocusChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2FocusChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FocusChangedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Frame, ICoreWebView2Frame_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Frame_Vtbl {}
    pub trait ICoreWebView2Frame_Impl {}
    impl ICoreWebView2Frame_Vtbl {
        pub const fn new<Identity: ICoreWebView2Frame_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Frame_ImplVtbl<T: ICoreWebView2Frame_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2Frame_Impl> ICoreWebView2Frame_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Frame_Vtbl = ICoreWebView2Frame_Vtbl::new::<T>();
    }
    impl ICoreWebView2Frame {
        pub fn new<'a, T: ICoreWebView2Frame_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Frame_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Frame2, ICoreWebView2Frame2_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Frame2_Vtbl {}
    pub trait ICoreWebView2Frame2_Impl {}
    impl ICoreWebView2Frame2_Vtbl {
        pub const fn new<Identity: ICoreWebView2Frame2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Frame2_ImplVtbl<T: ICoreWebView2Frame2_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2Frame2_Impl> ICoreWebView2Frame2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Frame2_Vtbl = ICoreWebView2Frame2_Vtbl::new::<T>();
    }
    impl ICoreWebView2Frame2 {
        pub fn new<'a, T: ICoreWebView2Frame2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Frame2_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Frame3, ICoreWebView2Frame3_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Frame3_Vtbl {}
    pub trait ICoreWebView2Frame3_Impl {}
    impl ICoreWebView2Frame3_Vtbl {
        pub const fn new<Identity: ICoreWebView2Frame3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Frame3_ImplVtbl<T: ICoreWebView2Frame3_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2Frame3_Impl> ICoreWebView2Frame3_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Frame3_Vtbl = ICoreWebView2Frame3_Vtbl::new::<T>();
    }
    impl ICoreWebView2Frame3 {
        pub fn new<'a, T: ICoreWebView2Frame3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Frame3_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Frame4, ICoreWebView2Frame4_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Frame4_Vtbl {}
    pub trait ICoreWebView2Frame4_Impl {}
    impl ICoreWebView2Frame4_Vtbl {
        pub const fn new<Identity: ICoreWebView2Frame4_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Frame4_ImplVtbl<T: ICoreWebView2Frame4_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2Frame4_Impl> ICoreWebView2Frame4_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Frame4_Vtbl = ICoreWebView2Frame4_Vtbl::new::<T>();
    }
    impl ICoreWebView2Frame4 {
        pub fn new<'a, T: ICoreWebView2Frame4_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Frame4_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Frame5, ICoreWebView2Frame5_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Frame5_Vtbl {}
    pub trait ICoreWebView2Frame5_Impl {}
    impl ICoreWebView2Frame5_Vtbl {
        pub const fn new<Identity: ICoreWebView2Frame5_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Frame5_ImplVtbl<T: ICoreWebView2Frame5_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2Frame5_Impl> ICoreWebView2Frame5_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Frame5_Vtbl = ICoreWebView2Frame5_Vtbl::new::<T>();
    }
    impl ICoreWebView2Frame5 {
        pub fn new<'a, T: ICoreWebView2Frame5_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Frame5_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Frame6, ICoreWebView2Frame6_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Frame6_Vtbl {}
    pub trait ICoreWebView2Frame6_Impl {}
    impl ICoreWebView2Frame6_Vtbl {
        pub const fn new<Identity: ICoreWebView2Frame6_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Frame6_ImplVtbl<T: ICoreWebView2Frame6_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2Frame6_Impl> ICoreWebView2Frame6_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Frame6_Vtbl = ICoreWebView2Frame6_Vtbl::new::<T>();
    }
    impl ICoreWebView2Frame6 {
        pub fn new<'a, T: ICoreWebView2Frame6_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Frame6_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Frame7, ICoreWebView2Frame7_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Frame7_Vtbl {}
    pub trait ICoreWebView2Frame7_Impl {}
    impl ICoreWebView2Frame7_Vtbl {
        pub const fn new<Identity: ICoreWebView2Frame7_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Frame7_ImplVtbl<T: ICoreWebView2Frame7_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2Frame7_Impl> ICoreWebView2Frame7_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Frame7_Vtbl = ICoreWebView2Frame7_Vtbl::new::<T>();
    }
    impl ICoreWebView2Frame7 {
        pub fn new<'a, T: ICoreWebView2Frame7_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Frame7_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameChildFrameCreatedEventHandler,
        ICoreWebView2FrameChildFrameCreatedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameChildFrameCreatedEventHandler_Vtbl {}
    pub trait ICoreWebView2FrameChildFrameCreatedEventHandler_Impl {}
    impl ICoreWebView2FrameChildFrameCreatedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameChildFrameCreatedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameChildFrameCreatedEventHandler_ImplVtbl<
        T: ICoreWebView2FrameChildFrameCreatedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FrameChildFrameCreatedEventHandler_Impl>
        ICoreWebView2FrameChildFrameCreatedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FrameChildFrameCreatedEventHandler_Vtbl =
            ICoreWebView2FrameChildFrameCreatedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameChildFrameCreatedEventHandler {
        pub fn new<'a, T: ICoreWebView2FrameChildFrameCreatedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameChildFrameCreatedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameContentLoadingEventHandler,
        ICoreWebView2FrameContentLoadingEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameContentLoadingEventHandler_Vtbl {}
    pub trait ICoreWebView2FrameContentLoadingEventHandler_Impl {}
    impl ICoreWebView2FrameContentLoadingEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameContentLoadingEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameContentLoadingEventHandler_ImplVtbl<
        T: ICoreWebView2FrameContentLoadingEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FrameContentLoadingEventHandler_Impl>
        ICoreWebView2FrameContentLoadingEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FrameContentLoadingEventHandler_Vtbl =
            ICoreWebView2FrameContentLoadingEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameContentLoadingEventHandler {
        pub fn new<'a, T: ICoreWebView2FrameContentLoadingEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameContentLoadingEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameCreatedEventArgs,
        ICoreWebView2FrameCreatedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameCreatedEventArgs_Vtbl {}
    pub trait ICoreWebView2FrameCreatedEventArgs_Impl {}
    impl ICoreWebView2FrameCreatedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameCreatedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameCreatedEventArgs_ImplVtbl<T: ICoreWebView2FrameCreatedEventArgs_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2FrameCreatedEventArgs_Impl> ICoreWebView2FrameCreatedEventArgs_ImplVtbl<T> {
        const VTABLE: ICoreWebView2FrameCreatedEventArgs_Vtbl =
            ICoreWebView2FrameCreatedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameCreatedEventArgs {
        pub fn new<'a, T: ICoreWebView2FrameCreatedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameCreatedEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameCreatedEventHandler,
        ICoreWebView2FrameCreatedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameCreatedEventHandler_Vtbl {}
    pub trait ICoreWebView2FrameCreatedEventHandler_Impl {}
    impl ICoreWebView2FrameCreatedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameCreatedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameCreatedEventHandler_ImplVtbl<T: ICoreWebView2FrameCreatedEventHandler_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2FrameCreatedEventHandler_Impl>
        ICoreWebView2FrameCreatedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FrameCreatedEventHandler_Vtbl =
            ICoreWebView2FrameCreatedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameCreatedEventHandler {
        pub fn new<'a, T: ICoreWebView2FrameCreatedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameCreatedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameDOMContentLoadedEventHandler,
        ICoreWebView2FrameDOMContentLoadedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameDOMContentLoadedEventHandler_Vtbl {}
    pub trait ICoreWebView2FrameDOMContentLoadedEventHandler_Impl {}
    impl ICoreWebView2FrameDOMContentLoadedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameDOMContentLoadedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameDOMContentLoadedEventHandler_ImplVtbl<
        T: ICoreWebView2FrameDOMContentLoadedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FrameDOMContentLoadedEventHandler_Impl>
        ICoreWebView2FrameDOMContentLoadedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FrameDOMContentLoadedEventHandler_Vtbl =
            ICoreWebView2FrameDOMContentLoadedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameDOMContentLoadedEventHandler {
        pub fn new<'a, T: ICoreWebView2FrameDOMContentLoadedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameDOMContentLoadedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameDestroyedEventHandler,
        ICoreWebView2FrameDestroyedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameDestroyedEventHandler_Vtbl {}
    pub trait ICoreWebView2FrameDestroyedEventHandler_Impl {}
    impl ICoreWebView2FrameDestroyedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameDestroyedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameDestroyedEventHandler_ImplVtbl<
        T: ICoreWebView2FrameDestroyedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FrameDestroyedEventHandler_Impl>
        ICoreWebView2FrameDestroyedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FrameDestroyedEventHandler_Vtbl =
            ICoreWebView2FrameDestroyedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameDestroyedEventHandler {
        pub fn new<'a, T: ICoreWebView2FrameDestroyedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameDestroyedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2FrameInfo, ICoreWebView2FrameInfo_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameInfo_Vtbl {}
    pub trait ICoreWebView2FrameInfo_Impl {}
    impl ICoreWebView2FrameInfo_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameInfo_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameInfo_ImplVtbl<T: ICoreWebView2FrameInfo_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2FrameInfo_Impl> ICoreWebView2FrameInfo_ImplVtbl<T> {
        const VTABLE: ICoreWebView2FrameInfo_Vtbl = ICoreWebView2FrameInfo_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameInfo {
        pub fn new<'a, T: ICoreWebView2FrameInfo_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameInfo_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2FrameInfo2, ICoreWebView2FrameInfo2_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameInfo2_Vtbl {}
    pub trait ICoreWebView2FrameInfo2_Impl {}
    impl ICoreWebView2FrameInfo2_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameInfo2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameInfo2_ImplVtbl<T: ICoreWebView2FrameInfo2_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2FrameInfo2_Impl> ICoreWebView2FrameInfo2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2FrameInfo2_Vtbl = ICoreWebView2FrameInfo2_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameInfo2 {
        pub fn new<'a, T: ICoreWebView2FrameInfo2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameInfo2_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameInfoCollection,
        ICoreWebView2FrameInfoCollection_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameInfoCollection_Vtbl {}
    pub trait ICoreWebView2FrameInfoCollection_Impl {}
    impl ICoreWebView2FrameInfoCollection_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameInfoCollection_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameInfoCollection_ImplVtbl<T: ICoreWebView2FrameInfoCollection_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2FrameInfoCollection_Impl> ICoreWebView2FrameInfoCollection_ImplVtbl<T> {
        const VTABLE: ICoreWebView2FrameInfoCollection_Vtbl =
            ICoreWebView2FrameInfoCollection_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameInfoCollection {
        pub fn new<'a, T: ICoreWebView2FrameInfoCollection_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameInfoCollection_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameInfoCollectionIterator,
        ICoreWebView2FrameInfoCollectionIterator_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameInfoCollectionIterator_Vtbl {}
    pub trait ICoreWebView2FrameInfoCollectionIterator_Impl {}
    impl ICoreWebView2FrameInfoCollectionIterator_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameInfoCollectionIterator_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameInfoCollectionIterator_ImplVtbl<
        T: ICoreWebView2FrameInfoCollectionIterator_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FrameInfoCollectionIterator_Impl>
        ICoreWebView2FrameInfoCollectionIterator_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FrameInfoCollectionIterator_Vtbl =
            ICoreWebView2FrameInfoCollectionIterator_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameInfoCollectionIterator {
        pub fn new<'a, T: ICoreWebView2FrameInfoCollectionIterator_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameInfoCollectionIterator_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameNameChangedEventHandler,
        ICoreWebView2FrameNameChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameNameChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2FrameNameChangedEventHandler_Impl {}
    impl ICoreWebView2FrameNameChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameNameChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameNameChangedEventHandler_ImplVtbl<
        T: ICoreWebView2FrameNameChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FrameNameChangedEventHandler_Impl>
        ICoreWebView2FrameNameChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FrameNameChangedEventHandler_Vtbl =
            ICoreWebView2FrameNameChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameNameChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2FrameNameChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameNameChangedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameNavigationCompletedEventHandler,
        ICoreWebView2FrameNavigationCompletedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameNavigationCompletedEventHandler_Vtbl {}
    pub trait ICoreWebView2FrameNavigationCompletedEventHandler_Impl {}
    impl ICoreWebView2FrameNavigationCompletedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameNavigationCompletedEventHandler_Impl>() -> Self
        {
            Self {}
        }
    }
    struct ICoreWebView2FrameNavigationCompletedEventHandler_ImplVtbl<
        T: ICoreWebView2FrameNavigationCompletedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FrameNavigationCompletedEventHandler_Impl>
        ICoreWebView2FrameNavigationCompletedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FrameNavigationCompletedEventHandler_Vtbl =
            ICoreWebView2FrameNavigationCompletedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameNavigationCompletedEventHandler {
        pub fn new<'a, T: ICoreWebView2FrameNavigationCompletedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameNavigationCompletedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameNavigationStartingEventHandler,
        ICoreWebView2FrameNavigationStartingEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameNavigationStartingEventHandler_Vtbl {}
    pub trait ICoreWebView2FrameNavigationStartingEventHandler_Impl {}
    impl ICoreWebView2FrameNavigationStartingEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameNavigationStartingEventHandler_Impl>() -> Self
        {
            Self {}
        }
    }
    struct ICoreWebView2FrameNavigationStartingEventHandler_ImplVtbl<
        T: ICoreWebView2FrameNavigationStartingEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FrameNavigationStartingEventHandler_Impl>
        ICoreWebView2FrameNavigationStartingEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FrameNavigationStartingEventHandler_Vtbl =
            ICoreWebView2FrameNavigationStartingEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameNavigationStartingEventHandler {
        pub fn new<'a, T: ICoreWebView2FrameNavigationStartingEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameNavigationStartingEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FramePermissionRequestedEventHandler,
        ICoreWebView2FramePermissionRequestedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FramePermissionRequestedEventHandler_Vtbl {}
    pub trait ICoreWebView2FramePermissionRequestedEventHandler_Impl {}
    impl ICoreWebView2FramePermissionRequestedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FramePermissionRequestedEventHandler_Impl>() -> Self
        {
            Self {}
        }
    }
    struct ICoreWebView2FramePermissionRequestedEventHandler_ImplVtbl<
        T: ICoreWebView2FramePermissionRequestedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FramePermissionRequestedEventHandler_Impl>
        ICoreWebView2FramePermissionRequestedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FramePermissionRequestedEventHandler_Vtbl =
            ICoreWebView2FramePermissionRequestedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FramePermissionRequestedEventHandler {
        pub fn new<'a, T: ICoreWebView2FramePermissionRequestedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FramePermissionRequestedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameScreenCaptureStartingEventHandler,
        ICoreWebView2FrameScreenCaptureStartingEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameScreenCaptureStartingEventHandler_Vtbl {}
    pub trait ICoreWebView2FrameScreenCaptureStartingEventHandler_Impl {}
    impl ICoreWebView2FrameScreenCaptureStartingEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameScreenCaptureStartingEventHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2FrameScreenCaptureStartingEventHandler_ImplVtbl<
        T: ICoreWebView2FrameScreenCaptureStartingEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FrameScreenCaptureStartingEventHandler_Impl>
        ICoreWebView2FrameScreenCaptureStartingEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FrameScreenCaptureStartingEventHandler_Vtbl =
            ICoreWebView2FrameScreenCaptureStartingEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameScreenCaptureStartingEventHandler {
        pub fn new<'a, T: ICoreWebView2FrameScreenCaptureStartingEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameScreenCaptureStartingEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2FrameWebMessageReceivedEventHandler,
        ICoreWebView2FrameWebMessageReceivedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2FrameWebMessageReceivedEventHandler_Vtbl {}
    pub trait ICoreWebView2FrameWebMessageReceivedEventHandler_Impl {}
    impl ICoreWebView2FrameWebMessageReceivedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2FrameWebMessageReceivedEventHandler_Impl>() -> Self
        {
            Self {}
        }
    }
    struct ICoreWebView2FrameWebMessageReceivedEventHandler_ImplVtbl<
        T: ICoreWebView2FrameWebMessageReceivedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2FrameWebMessageReceivedEventHandler_Impl>
        ICoreWebView2FrameWebMessageReceivedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2FrameWebMessageReceivedEventHandler_Vtbl =
            ICoreWebView2FrameWebMessageReceivedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2FrameWebMessageReceivedEventHandler {
        pub fn new<'a, T: ICoreWebView2FrameWebMessageReceivedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2FrameWebMessageReceivedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2GetCookiesCompletedHandler,
        ICoreWebView2GetCookiesCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2GetCookiesCompletedHandler_Vtbl {}
    pub trait ICoreWebView2GetCookiesCompletedHandler_Impl {}
    impl ICoreWebView2GetCookiesCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2GetCookiesCompletedHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2GetCookiesCompletedHandler_ImplVtbl<
        T: ICoreWebView2GetCookiesCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2GetCookiesCompletedHandler_Impl>
        ICoreWebView2GetCookiesCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2GetCookiesCompletedHandler_Vtbl =
            ICoreWebView2GetCookiesCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2GetCookiesCompletedHandler {
        pub fn new<'a, T: ICoreWebView2GetCookiesCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2GetCookiesCompletedHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2GetFaviconCompletedHandler,
        ICoreWebView2GetFaviconCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2GetFaviconCompletedHandler_Vtbl {}
    pub trait ICoreWebView2GetFaviconCompletedHandler_Impl {}
    impl ICoreWebView2GetFaviconCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2GetFaviconCompletedHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2GetFaviconCompletedHandler_ImplVtbl<
        T: ICoreWebView2GetFaviconCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2GetFaviconCompletedHandler_Impl>
        ICoreWebView2GetFaviconCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2GetFaviconCompletedHandler_Vtbl =
            ICoreWebView2GetFaviconCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2GetFaviconCompletedHandler {
        pub fn new<'a, T: ICoreWebView2GetFaviconCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2GetFaviconCompletedHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler,
        ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_Vtbl {}
    pub trait ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_Impl {}
    impl ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_Vtbl {
        pub const fn new<
            Identity: ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_Impl,
        >() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_ImplVtbl<
        T: ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_Impl>
        ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_Vtbl =
            ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler {
        pub fn new<'a, T: ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this =
                windows_core::ScopedHeap {
                    vtable: &ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler_ImplVtbl::<
                        T,
                    >::VTABLE as *const _ as *const _,
                    this: this as *const _ as *const _,
                };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2GetProcessExtendedInfosCompletedHandler,
        ICoreWebView2GetProcessExtendedInfosCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2GetProcessExtendedInfosCompletedHandler_Vtbl {}
    pub trait ICoreWebView2GetProcessExtendedInfosCompletedHandler_Impl {}
    impl ICoreWebView2GetProcessExtendedInfosCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2GetProcessExtendedInfosCompletedHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2GetProcessExtendedInfosCompletedHandler_ImplVtbl<
        T: ICoreWebView2GetProcessExtendedInfosCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2GetProcessExtendedInfosCompletedHandler_Impl>
        ICoreWebView2GetProcessExtendedInfosCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2GetProcessExtendedInfosCompletedHandler_Vtbl =
            ICoreWebView2GetProcessExtendedInfosCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2GetProcessExtendedInfosCompletedHandler {
        pub fn new<'a, T: ICoreWebView2GetProcessExtendedInfosCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2GetProcessExtendedInfosCompletedHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2HistoryChangedEventHandler,
        ICoreWebView2HistoryChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2HistoryChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2HistoryChangedEventHandler_Impl {}
    impl ICoreWebView2HistoryChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2HistoryChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2HistoryChangedEventHandler_ImplVtbl<
        T: ICoreWebView2HistoryChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2HistoryChangedEventHandler_Impl>
        ICoreWebView2HistoryChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2HistoryChangedEventHandler_Vtbl =
            ICoreWebView2HistoryChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2HistoryChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2HistoryChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2HistoryChangedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2HttpHeadersCollectionIterator,
        ICoreWebView2HttpHeadersCollectionIterator_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2HttpHeadersCollectionIterator_Vtbl {}
    pub trait ICoreWebView2HttpHeadersCollectionIterator_Impl {}
    impl ICoreWebView2HttpHeadersCollectionIterator_Vtbl {
        pub const fn new<Identity: ICoreWebView2HttpHeadersCollectionIterator_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2HttpHeadersCollectionIterator_ImplVtbl<
        T: ICoreWebView2HttpHeadersCollectionIterator_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2HttpHeadersCollectionIterator_Impl>
        ICoreWebView2HttpHeadersCollectionIterator_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2HttpHeadersCollectionIterator_Vtbl =
            ICoreWebView2HttpHeadersCollectionIterator_Vtbl::new::<T>();
    }
    impl ICoreWebView2HttpHeadersCollectionIterator {
        pub fn new<'a, T: ICoreWebView2HttpHeadersCollectionIterator_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2HttpHeadersCollectionIterator_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2HttpRequestHeaders,
        ICoreWebView2HttpRequestHeaders_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2HttpRequestHeaders_Vtbl {}
    pub trait ICoreWebView2HttpRequestHeaders_Impl {}
    impl ICoreWebView2HttpRequestHeaders_Vtbl {
        pub const fn new<Identity: ICoreWebView2HttpRequestHeaders_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2HttpRequestHeaders_ImplVtbl<T: ICoreWebView2HttpRequestHeaders_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2HttpRequestHeaders_Impl> ICoreWebView2HttpRequestHeaders_ImplVtbl<T> {
        const VTABLE: ICoreWebView2HttpRequestHeaders_Vtbl =
            ICoreWebView2HttpRequestHeaders_Vtbl::new::<T>();
    }
    impl ICoreWebView2HttpRequestHeaders {
        pub fn new<'a, T: ICoreWebView2HttpRequestHeaders_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2HttpRequestHeaders_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2HttpResponseHeaders,
        ICoreWebView2HttpResponseHeaders_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2HttpResponseHeaders_Vtbl {}
    pub trait ICoreWebView2HttpResponseHeaders_Impl {}
    impl ICoreWebView2HttpResponseHeaders_Vtbl {
        pub const fn new<Identity: ICoreWebView2HttpResponseHeaders_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2HttpResponseHeaders_ImplVtbl<T: ICoreWebView2HttpResponseHeaders_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2HttpResponseHeaders_Impl> ICoreWebView2HttpResponseHeaders_ImplVtbl<T> {
        const VTABLE: ICoreWebView2HttpResponseHeaders_Vtbl =
            ICoreWebView2HttpResponseHeaders_Vtbl::new::<T>();
    }
    impl ICoreWebView2HttpResponseHeaders {
        pub fn new<'a, T: ICoreWebView2HttpResponseHeaders_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2HttpResponseHeaders_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler,
        ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_Impl {}
    impl ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_Vtbl {
        pub const fn new<
            Identity: ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_Impl,
        >() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_ImplVtbl<
        T: ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_Impl>
        ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_Vtbl =
            ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap { vtable : & ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_ImplVtbl:: < T >::VTABLE as * const _ as * const _ , this :this as * const _ as * const _ } ;
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2IsDocumentPlayingAudioChangedEventHandler,
        ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_Impl {}
    impl ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_ImplVtbl<
        T: ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_Impl>
        ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_Vtbl =
            ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2IsDocumentPlayingAudioChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable:
                    &ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_ImplVtbl::<T>::VTABLE
                        as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2IsMutedChangedEventHandler,
        ICoreWebView2IsMutedChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2IsMutedChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2IsMutedChangedEventHandler_Impl {}
    impl ICoreWebView2IsMutedChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2IsMutedChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2IsMutedChangedEventHandler_ImplVtbl<
        T: ICoreWebView2IsMutedChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2IsMutedChangedEventHandler_Impl>
        ICoreWebView2IsMutedChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2IsMutedChangedEventHandler_Vtbl =
            ICoreWebView2IsMutedChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2IsMutedChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2IsMutedChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2IsMutedChangedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2LaunchingExternalUriSchemeEventArgs,
        ICoreWebView2LaunchingExternalUriSchemeEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2LaunchingExternalUriSchemeEventArgs_Vtbl {}
    pub trait ICoreWebView2LaunchingExternalUriSchemeEventArgs_Impl {}
    impl ICoreWebView2LaunchingExternalUriSchemeEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2LaunchingExternalUriSchemeEventArgs_Impl>() -> Self
        {
            Self {}
        }
    }
    struct ICoreWebView2LaunchingExternalUriSchemeEventArgs_ImplVtbl<
        T: ICoreWebView2LaunchingExternalUriSchemeEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2LaunchingExternalUriSchemeEventArgs_Impl>
        ICoreWebView2LaunchingExternalUriSchemeEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2LaunchingExternalUriSchemeEventArgs_Vtbl =
            ICoreWebView2LaunchingExternalUriSchemeEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2LaunchingExternalUriSchemeEventArgs {
        pub fn new<'a, T: ICoreWebView2LaunchingExternalUriSchemeEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2LaunchingExternalUriSchemeEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2LaunchingExternalUriSchemeEventHandler,
        ICoreWebView2LaunchingExternalUriSchemeEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2LaunchingExternalUriSchemeEventHandler_Vtbl {}
    pub trait ICoreWebView2LaunchingExternalUriSchemeEventHandler_Impl {}
    impl ICoreWebView2LaunchingExternalUriSchemeEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2LaunchingExternalUriSchemeEventHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2LaunchingExternalUriSchemeEventHandler_ImplVtbl<
        T: ICoreWebView2LaunchingExternalUriSchemeEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2LaunchingExternalUriSchemeEventHandler_Impl>
        ICoreWebView2LaunchingExternalUriSchemeEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2LaunchingExternalUriSchemeEventHandler_Vtbl =
            ICoreWebView2LaunchingExternalUriSchemeEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2LaunchingExternalUriSchemeEventHandler {
        pub fn new<'a, T: ICoreWebView2LaunchingExternalUriSchemeEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2LaunchingExternalUriSchemeEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2MoveFocusRequestedEventArgs,
        ICoreWebView2MoveFocusRequestedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2MoveFocusRequestedEventArgs_Vtbl {}
    pub trait ICoreWebView2MoveFocusRequestedEventArgs_Impl {}
    impl ICoreWebView2MoveFocusRequestedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2MoveFocusRequestedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2MoveFocusRequestedEventArgs_ImplVtbl<
        T: ICoreWebView2MoveFocusRequestedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2MoveFocusRequestedEventArgs_Impl>
        ICoreWebView2MoveFocusRequestedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2MoveFocusRequestedEventArgs_Vtbl =
            ICoreWebView2MoveFocusRequestedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2MoveFocusRequestedEventArgs {
        pub fn new<'a, T: ICoreWebView2MoveFocusRequestedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2MoveFocusRequestedEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2MoveFocusRequestedEventHandler,
        ICoreWebView2MoveFocusRequestedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2MoveFocusRequestedEventHandler_Vtbl {}
    pub trait ICoreWebView2MoveFocusRequestedEventHandler_Impl {}
    impl ICoreWebView2MoveFocusRequestedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2MoveFocusRequestedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2MoveFocusRequestedEventHandler_ImplVtbl<
        T: ICoreWebView2MoveFocusRequestedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2MoveFocusRequestedEventHandler_Impl>
        ICoreWebView2MoveFocusRequestedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2MoveFocusRequestedEventHandler_Vtbl =
            ICoreWebView2MoveFocusRequestedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2MoveFocusRequestedEventHandler {
        pub fn new<'a, T: ICoreWebView2MoveFocusRequestedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2MoveFocusRequestedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NavigationCompletedEventArgs,
        ICoreWebView2NavigationCompletedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NavigationCompletedEventArgs_Vtbl {}
    pub trait ICoreWebView2NavigationCompletedEventArgs_Impl {}
    impl ICoreWebView2NavigationCompletedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2NavigationCompletedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NavigationCompletedEventArgs_ImplVtbl<
        T: ICoreWebView2NavigationCompletedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NavigationCompletedEventArgs_Impl>
        ICoreWebView2NavigationCompletedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NavigationCompletedEventArgs_Vtbl =
            ICoreWebView2NavigationCompletedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2NavigationCompletedEventArgs {
        pub fn new<'a, T: ICoreWebView2NavigationCompletedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NavigationCompletedEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NavigationCompletedEventArgs2,
        ICoreWebView2NavigationCompletedEventArgs2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NavigationCompletedEventArgs2_Vtbl {}
    pub trait ICoreWebView2NavigationCompletedEventArgs2_Impl {}
    impl ICoreWebView2NavigationCompletedEventArgs2_Vtbl {
        pub const fn new<Identity: ICoreWebView2NavigationCompletedEventArgs2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NavigationCompletedEventArgs2_ImplVtbl<
        T: ICoreWebView2NavigationCompletedEventArgs2_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NavigationCompletedEventArgs2_Impl>
        ICoreWebView2NavigationCompletedEventArgs2_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NavigationCompletedEventArgs2_Vtbl =
            ICoreWebView2NavigationCompletedEventArgs2_Vtbl::new::<T>();
    }
    impl ICoreWebView2NavigationCompletedEventArgs2 {
        pub fn new<'a, T: ICoreWebView2NavigationCompletedEventArgs2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NavigationCompletedEventArgs2_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NavigationCompletedEventHandler,
        ICoreWebView2NavigationCompletedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NavigationCompletedEventHandler_Vtbl {}
    pub trait ICoreWebView2NavigationCompletedEventHandler_Impl {}
    impl ICoreWebView2NavigationCompletedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2NavigationCompletedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NavigationCompletedEventHandler_ImplVtbl<
        T: ICoreWebView2NavigationCompletedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NavigationCompletedEventHandler_Impl>
        ICoreWebView2NavigationCompletedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NavigationCompletedEventHandler_Vtbl =
            ICoreWebView2NavigationCompletedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2NavigationCompletedEventHandler {
        pub fn new<'a, T: ICoreWebView2NavigationCompletedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NavigationCompletedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NavigationStartingEventArgs,
        ICoreWebView2NavigationStartingEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NavigationStartingEventArgs_Vtbl {}
    pub trait ICoreWebView2NavigationStartingEventArgs_Impl {}
    impl ICoreWebView2NavigationStartingEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2NavigationStartingEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NavigationStartingEventArgs_ImplVtbl<
        T: ICoreWebView2NavigationStartingEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NavigationStartingEventArgs_Impl>
        ICoreWebView2NavigationStartingEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NavigationStartingEventArgs_Vtbl =
            ICoreWebView2NavigationStartingEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2NavigationStartingEventArgs {
        pub fn new<'a, T: ICoreWebView2NavigationStartingEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NavigationStartingEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NavigationStartingEventArgs2,
        ICoreWebView2NavigationStartingEventArgs2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NavigationStartingEventArgs2_Vtbl {}
    pub trait ICoreWebView2NavigationStartingEventArgs2_Impl {}
    impl ICoreWebView2NavigationStartingEventArgs2_Vtbl {
        pub const fn new<Identity: ICoreWebView2NavigationStartingEventArgs2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NavigationStartingEventArgs2_ImplVtbl<
        T: ICoreWebView2NavigationStartingEventArgs2_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NavigationStartingEventArgs2_Impl>
        ICoreWebView2NavigationStartingEventArgs2_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NavigationStartingEventArgs2_Vtbl =
            ICoreWebView2NavigationStartingEventArgs2_Vtbl::new::<T>();
    }
    impl ICoreWebView2NavigationStartingEventArgs2 {
        pub fn new<'a, T: ICoreWebView2NavigationStartingEventArgs2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NavigationStartingEventArgs2_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NavigationStartingEventArgs3,
        ICoreWebView2NavigationStartingEventArgs3_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NavigationStartingEventArgs3_Vtbl {}
    pub trait ICoreWebView2NavigationStartingEventArgs3_Impl {}
    impl ICoreWebView2NavigationStartingEventArgs3_Vtbl {
        pub const fn new<Identity: ICoreWebView2NavigationStartingEventArgs3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NavigationStartingEventArgs3_ImplVtbl<
        T: ICoreWebView2NavigationStartingEventArgs3_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NavigationStartingEventArgs3_Impl>
        ICoreWebView2NavigationStartingEventArgs3_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NavigationStartingEventArgs3_Vtbl =
            ICoreWebView2NavigationStartingEventArgs3_Vtbl::new::<T>();
    }
    impl ICoreWebView2NavigationStartingEventArgs3 {
        pub fn new<'a, T: ICoreWebView2NavigationStartingEventArgs3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NavigationStartingEventArgs3_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NavigationStartingEventHandler,
        ICoreWebView2NavigationStartingEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NavigationStartingEventHandler_Vtbl {}
    pub trait ICoreWebView2NavigationStartingEventHandler_Impl {}
    impl ICoreWebView2NavigationStartingEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2NavigationStartingEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NavigationStartingEventHandler_ImplVtbl<
        T: ICoreWebView2NavigationStartingEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NavigationStartingEventHandler_Impl>
        ICoreWebView2NavigationStartingEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NavigationStartingEventHandler_Vtbl =
            ICoreWebView2NavigationStartingEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2NavigationStartingEventHandler {
        pub fn new<'a, T: ICoreWebView2NavigationStartingEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NavigationStartingEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NewBrowserVersionAvailableEventHandler,
        ICoreWebView2NewBrowserVersionAvailableEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NewBrowserVersionAvailableEventHandler_Vtbl {}
    pub trait ICoreWebView2NewBrowserVersionAvailableEventHandler_Impl {}
    impl ICoreWebView2NewBrowserVersionAvailableEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2NewBrowserVersionAvailableEventHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NewBrowserVersionAvailableEventHandler_ImplVtbl<
        T: ICoreWebView2NewBrowserVersionAvailableEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NewBrowserVersionAvailableEventHandler_Impl>
        ICoreWebView2NewBrowserVersionAvailableEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NewBrowserVersionAvailableEventHandler_Vtbl =
            ICoreWebView2NewBrowserVersionAvailableEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2NewBrowserVersionAvailableEventHandler {
        pub fn new<'a, T: ICoreWebView2NewBrowserVersionAvailableEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NewBrowserVersionAvailableEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NewWindowRequestedEventArgs,
        ICoreWebView2NewWindowRequestedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NewWindowRequestedEventArgs_Vtbl {}
    pub trait ICoreWebView2NewWindowRequestedEventArgs_Impl {}
    impl ICoreWebView2NewWindowRequestedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2NewWindowRequestedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NewWindowRequestedEventArgs_ImplVtbl<
        T: ICoreWebView2NewWindowRequestedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NewWindowRequestedEventArgs_Impl>
        ICoreWebView2NewWindowRequestedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NewWindowRequestedEventArgs_Vtbl =
            ICoreWebView2NewWindowRequestedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2NewWindowRequestedEventArgs {
        pub fn new<'a, T: ICoreWebView2NewWindowRequestedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NewWindowRequestedEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NewWindowRequestedEventArgs2,
        ICoreWebView2NewWindowRequestedEventArgs2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NewWindowRequestedEventArgs2_Vtbl {}
    pub trait ICoreWebView2NewWindowRequestedEventArgs2_Impl {}
    impl ICoreWebView2NewWindowRequestedEventArgs2_Vtbl {
        pub const fn new<Identity: ICoreWebView2NewWindowRequestedEventArgs2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NewWindowRequestedEventArgs2_ImplVtbl<
        T: ICoreWebView2NewWindowRequestedEventArgs2_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NewWindowRequestedEventArgs2_Impl>
        ICoreWebView2NewWindowRequestedEventArgs2_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NewWindowRequestedEventArgs2_Vtbl =
            ICoreWebView2NewWindowRequestedEventArgs2_Vtbl::new::<T>();
    }
    impl ICoreWebView2NewWindowRequestedEventArgs2 {
        pub fn new<'a, T: ICoreWebView2NewWindowRequestedEventArgs2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NewWindowRequestedEventArgs2_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NewWindowRequestedEventArgs3,
        ICoreWebView2NewWindowRequestedEventArgs3_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NewWindowRequestedEventArgs3_Vtbl {}
    pub trait ICoreWebView2NewWindowRequestedEventArgs3_Impl {}
    impl ICoreWebView2NewWindowRequestedEventArgs3_Vtbl {
        pub const fn new<Identity: ICoreWebView2NewWindowRequestedEventArgs3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NewWindowRequestedEventArgs3_ImplVtbl<
        T: ICoreWebView2NewWindowRequestedEventArgs3_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NewWindowRequestedEventArgs3_Impl>
        ICoreWebView2NewWindowRequestedEventArgs3_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NewWindowRequestedEventArgs3_Vtbl =
            ICoreWebView2NewWindowRequestedEventArgs3_Vtbl::new::<T>();
    }
    impl ICoreWebView2NewWindowRequestedEventArgs3 {
        pub fn new<'a, T: ICoreWebView2NewWindowRequestedEventArgs3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NewWindowRequestedEventArgs3_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NewWindowRequestedEventHandler,
        ICoreWebView2NewWindowRequestedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NewWindowRequestedEventHandler_Vtbl {}
    pub trait ICoreWebView2NewWindowRequestedEventHandler_Impl {}
    impl ICoreWebView2NewWindowRequestedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2NewWindowRequestedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NewWindowRequestedEventHandler_ImplVtbl<
        T: ICoreWebView2NewWindowRequestedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NewWindowRequestedEventHandler_Impl>
        ICoreWebView2NewWindowRequestedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NewWindowRequestedEventHandler_Vtbl =
            ICoreWebView2NewWindowRequestedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2NewWindowRequestedEventHandler {
        pub fn new<'a, T: ICoreWebView2NewWindowRequestedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NewWindowRequestedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NonClientRegionChangedEventArgs,
        ICoreWebView2NonClientRegionChangedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NonClientRegionChangedEventArgs_Vtbl {}
    pub trait ICoreWebView2NonClientRegionChangedEventArgs_Impl {}
    impl ICoreWebView2NonClientRegionChangedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2NonClientRegionChangedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NonClientRegionChangedEventArgs_ImplVtbl<
        T: ICoreWebView2NonClientRegionChangedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NonClientRegionChangedEventArgs_Impl>
        ICoreWebView2NonClientRegionChangedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NonClientRegionChangedEventArgs_Vtbl =
            ICoreWebView2NonClientRegionChangedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2NonClientRegionChangedEventArgs {
        pub fn new<'a, T: ICoreWebView2NonClientRegionChangedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NonClientRegionChangedEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NonClientRegionChangedEventHandler,
        ICoreWebView2NonClientRegionChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NonClientRegionChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2NonClientRegionChangedEventHandler_Impl {}
    impl ICoreWebView2NonClientRegionChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2NonClientRegionChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NonClientRegionChangedEventHandler_ImplVtbl<
        T: ICoreWebView2NonClientRegionChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NonClientRegionChangedEventHandler_Impl>
        ICoreWebView2NonClientRegionChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NonClientRegionChangedEventHandler_Vtbl =
            ICoreWebView2NonClientRegionChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2NonClientRegionChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2NonClientRegionChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NonClientRegionChangedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Notification, ICoreWebView2Notification_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Notification_Vtbl {}
    pub trait ICoreWebView2Notification_Impl {}
    impl ICoreWebView2Notification_Vtbl {
        pub const fn new<Identity: ICoreWebView2Notification_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Notification_ImplVtbl<T: ICoreWebView2Notification_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Notification_Impl> ICoreWebView2Notification_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Notification_Vtbl = ICoreWebView2Notification_Vtbl::new::<T>();
    }
    impl ICoreWebView2Notification {
        pub fn new<'a, T: ICoreWebView2Notification_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Notification_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NotificationCloseRequestedEventHandler,
        ICoreWebView2NotificationCloseRequestedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NotificationCloseRequestedEventHandler_Vtbl {}
    pub trait ICoreWebView2NotificationCloseRequestedEventHandler_Impl {}
    impl ICoreWebView2NotificationCloseRequestedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2NotificationCloseRequestedEventHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NotificationCloseRequestedEventHandler_ImplVtbl<
        T: ICoreWebView2NotificationCloseRequestedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NotificationCloseRequestedEventHandler_Impl>
        ICoreWebView2NotificationCloseRequestedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NotificationCloseRequestedEventHandler_Vtbl =
            ICoreWebView2NotificationCloseRequestedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2NotificationCloseRequestedEventHandler {
        pub fn new<'a, T: ICoreWebView2NotificationCloseRequestedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NotificationCloseRequestedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NotificationReceivedEventArgs,
        ICoreWebView2NotificationReceivedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NotificationReceivedEventArgs_Vtbl {}
    pub trait ICoreWebView2NotificationReceivedEventArgs_Impl {}
    impl ICoreWebView2NotificationReceivedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2NotificationReceivedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NotificationReceivedEventArgs_ImplVtbl<
        T: ICoreWebView2NotificationReceivedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NotificationReceivedEventArgs_Impl>
        ICoreWebView2NotificationReceivedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NotificationReceivedEventArgs_Vtbl =
            ICoreWebView2NotificationReceivedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2NotificationReceivedEventArgs {
        pub fn new<'a, T: ICoreWebView2NotificationReceivedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NotificationReceivedEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2NotificationReceivedEventHandler,
        ICoreWebView2NotificationReceivedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2NotificationReceivedEventHandler_Vtbl {}
    pub trait ICoreWebView2NotificationReceivedEventHandler_Impl {}
    impl ICoreWebView2NotificationReceivedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2NotificationReceivedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2NotificationReceivedEventHandler_ImplVtbl<
        T: ICoreWebView2NotificationReceivedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2NotificationReceivedEventHandler_Impl>
        ICoreWebView2NotificationReceivedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2NotificationReceivedEventHandler_Vtbl =
            ICoreWebView2NotificationReceivedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2NotificationReceivedEventHandler {
        pub fn new<'a, T: ICoreWebView2NotificationReceivedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2NotificationReceivedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ObjectCollection,
        ICoreWebView2ObjectCollection_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ObjectCollection_Vtbl {}
    pub trait ICoreWebView2ObjectCollection_Impl {}
    impl ICoreWebView2ObjectCollection_Vtbl {
        pub const fn new<Identity: ICoreWebView2ObjectCollection_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ObjectCollection_ImplVtbl<T: ICoreWebView2ObjectCollection_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ObjectCollection_Impl> ICoreWebView2ObjectCollection_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ObjectCollection_Vtbl =
            ICoreWebView2ObjectCollection_Vtbl::new::<T>();
    }
    impl ICoreWebView2ObjectCollection {
        pub fn new<'a, T: ICoreWebView2ObjectCollection_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ObjectCollection_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ObjectCollectionView,
        ICoreWebView2ObjectCollectionView_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ObjectCollectionView_Vtbl {}
    pub trait ICoreWebView2ObjectCollectionView_Impl {}
    impl ICoreWebView2ObjectCollectionView_Vtbl {
        pub const fn new<Identity: ICoreWebView2ObjectCollectionView_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ObjectCollectionView_ImplVtbl<T: ICoreWebView2ObjectCollectionView_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ObjectCollectionView_Impl> ICoreWebView2ObjectCollectionView_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ObjectCollectionView_Vtbl =
            ICoreWebView2ObjectCollectionView_Vtbl::new::<T>();
    }
    impl ICoreWebView2ObjectCollectionView {
        pub fn new<'a, T: ICoreWebView2ObjectCollectionView_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ObjectCollectionView_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2PermissionRequestedEventArgs,
        ICoreWebView2PermissionRequestedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PermissionRequestedEventArgs_Vtbl {}
    pub trait ICoreWebView2PermissionRequestedEventArgs_Impl {}
    impl ICoreWebView2PermissionRequestedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2PermissionRequestedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PermissionRequestedEventArgs_ImplVtbl<
        T: ICoreWebView2PermissionRequestedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2PermissionRequestedEventArgs_Impl>
        ICoreWebView2PermissionRequestedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2PermissionRequestedEventArgs_Vtbl =
            ICoreWebView2PermissionRequestedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2PermissionRequestedEventArgs {
        pub fn new<'a, T: ICoreWebView2PermissionRequestedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PermissionRequestedEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2PermissionRequestedEventArgs2,
        ICoreWebView2PermissionRequestedEventArgs2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PermissionRequestedEventArgs2_Vtbl {}
    pub trait ICoreWebView2PermissionRequestedEventArgs2_Impl {}
    impl ICoreWebView2PermissionRequestedEventArgs2_Vtbl {
        pub const fn new<Identity: ICoreWebView2PermissionRequestedEventArgs2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PermissionRequestedEventArgs2_ImplVtbl<
        T: ICoreWebView2PermissionRequestedEventArgs2_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2PermissionRequestedEventArgs2_Impl>
        ICoreWebView2PermissionRequestedEventArgs2_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2PermissionRequestedEventArgs2_Vtbl =
            ICoreWebView2PermissionRequestedEventArgs2_Vtbl::new::<T>();
    }
    impl ICoreWebView2PermissionRequestedEventArgs2 {
        pub fn new<'a, T: ICoreWebView2PermissionRequestedEventArgs2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PermissionRequestedEventArgs2_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2PermissionRequestedEventArgs3,
        ICoreWebView2PermissionRequestedEventArgs3_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PermissionRequestedEventArgs3_Vtbl {}
    pub trait ICoreWebView2PermissionRequestedEventArgs3_Impl {}
    impl ICoreWebView2PermissionRequestedEventArgs3_Vtbl {
        pub const fn new<Identity: ICoreWebView2PermissionRequestedEventArgs3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PermissionRequestedEventArgs3_ImplVtbl<
        T: ICoreWebView2PermissionRequestedEventArgs3_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2PermissionRequestedEventArgs3_Impl>
        ICoreWebView2PermissionRequestedEventArgs3_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2PermissionRequestedEventArgs3_Vtbl =
            ICoreWebView2PermissionRequestedEventArgs3_Vtbl::new::<T>();
    }
    impl ICoreWebView2PermissionRequestedEventArgs3 {
        pub fn new<'a, T: ICoreWebView2PermissionRequestedEventArgs3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PermissionRequestedEventArgs3_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2PermissionRequestedEventHandler,
        ICoreWebView2PermissionRequestedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PermissionRequestedEventHandler_Vtbl {}
    pub trait ICoreWebView2PermissionRequestedEventHandler_Impl {}
    impl ICoreWebView2PermissionRequestedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2PermissionRequestedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PermissionRequestedEventHandler_ImplVtbl<
        T: ICoreWebView2PermissionRequestedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2PermissionRequestedEventHandler_Impl>
        ICoreWebView2PermissionRequestedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2PermissionRequestedEventHandler_Vtbl =
            ICoreWebView2PermissionRequestedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2PermissionRequestedEventHandler {
        pub fn new<'a, T: ICoreWebView2PermissionRequestedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PermissionRequestedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2PermissionSetting,
        ICoreWebView2PermissionSetting_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PermissionSetting_Vtbl {}
    pub trait ICoreWebView2PermissionSetting_Impl {}
    impl ICoreWebView2PermissionSetting_Vtbl {
        pub const fn new<Identity: ICoreWebView2PermissionSetting_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PermissionSetting_ImplVtbl<T: ICoreWebView2PermissionSetting_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2PermissionSetting_Impl> ICoreWebView2PermissionSetting_ImplVtbl<T> {
        const VTABLE: ICoreWebView2PermissionSetting_Vtbl =
            ICoreWebView2PermissionSetting_Vtbl::new::<T>();
    }
    impl ICoreWebView2PermissionSetting {
        pub fn new<'a, T: ICoreWebView2PermissionSetting_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PermissionSetting_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2PermissionSettingCollectionView,
        ICoreWebView2PermissionSettingCollectionView_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PermissionSettingCollectionView_Vtbl {}
    pub trait ICoreWebView2PermissionSettingCollectionView_Impl {}
    impl ICoreWebView2PermissionSettingCollectionView_Vtbl {
        pub const fn new<Identity: ICoreWebView2PermissionSettingCollectionView_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PermissionSettingCollectionView_ImplVtbl<
        T: ICoreWebView2PermissionSettingCollectionView_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2PermissionSettingCollectionView_Impl>
        ICoreWebView2PermissionSettingCollectionView_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2PermissionSettingCollectionView_Vtbl =
            ICoreWebView2PermissionSettingCollectionView_Vtbl::new::<T>();
    }
    impl ICoreWebView2PermissionSettingCollectionView {
        pub fn new<'a, T: ICoreWebView2PermissionSettingCollectionView_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PermissionSettingCollectionView_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2PointerInfo, ICoreWebView2PointerInfo_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PointerInfo_Vtbl {}
    pub trait ICoreWebView2PointerInfo_Impl {}
    impl ICoreWebView2PointerInfo_Vtbl {
        pub const fn new<Identity: ICoreWebView2PointerInfo_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PointerInfo_ImplVtbl<T: ICoreWebView2PointerInfo_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2PointerInfo_Impl> ICoreWebView2PointerInfo_ImplVtbl<T> {
        const VTABLE: ICoreWebView2PointerInfo_Vtbl = ICoreWebView2PointerInfo_Vtbl::new::<T>();
    }
    impl ICoreWebView2PointerInfo {
        pub fn new<'a, T: ICoreWebView2PointerInfo_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PointerInfo_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2PrintCompletedHandler,
        ICoreWebView2PrintCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PrintCompletedHandler_Vtbl {}
    pub trait ICoreWebView2PrintCompletedHandler_Impl {}
    impl ICoreWebView2PrintCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2PrintCompletedHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PrintCompletedHandler_ImplVtbl<T: ICoreWebView2PrintCompletedHandler_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2PrintCompletedHandler_Impl> ICoreWebView2PrintCompletedHandler_ImplVtbl<T> {
        const VTABLE: ICoreWebView2PrintCompletedHandler_Vtbl =
            ICoreWebView2PrintCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2PrintCompletedHandler {
        pub fn new<'a, T: ICoreWebView2PrintCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PrintCompletedHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2PrintSettings,
        ICoreWebView2PrintSettings_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PrintSettings_Vtbl {}
    pub trait ICoreWebView2PrintSettings_Impl {}
    impl ICoreWebView2PrintSettings_Vtbl {
        pub const fn new<Identity: ICoreWebView2PrintSettings_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PrintSettings_ImplVtbl<T: ICoreWebView2PrintSettings_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2PrintSettings_Impl> ICoreWebView2PrintSettings_ImplVtbl<T> {
        const VTABLE: ICoreWebView2PrintSettings_Vtbl = ICoreWebView2PrintSettings_Vtbl::new::<T>();
    }
    impl ICoreWebView2PrintSettings {
        pub fn new<'a, T: ICoreWebView2PrintSettings_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PrintSettings_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2PrintSettings2,
        ICoreWebView2PrintSettings2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PrintSettings2_Vtbl {}
    pub trait ICoreWebView2PrintSettings2_Impl {}
    impl ICoreWebView2PrintSettings2_Vtbl {
        pub const fn new<Identity: ICoreWebView2PrintSettings2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PrintSettings2_ImplVtbl<T: ICoreWebView2PrintSettings2_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2PrintSettings2_Impl> ICoreWebView2PrintSettings2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2PrintSettings2_Vtbl =
            ICoreWebView2PrintSettings2_Vtbl::new::<T>();
    }
    impl ICoreWebView2PrintSettings2 {
        pub fn new<'a, T: ICoreWebView2PrintSettings2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PrintSettings2_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2PrintToPdfCompletedHandler,
        ICoreWebView2PrintToPdfCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PrintToPdfCompletedHandler_Vtbl {}
    pub trait ICoreWebView2PrintToPdfCompletedHandler_Impl {}
    impl ICoreWebView2PrintToPdfCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2PrintToPdfCompletedHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PrintToPdfCompletedHandler_ImplVtbl<
        T: ICoreWebView2PrintToPdfCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2PrintToPdfCompletedHandler_Impl>
        ICoreWebView2PrintToPdfCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2PrintToPdfCompletedHandler_Vtbl =
            ICoreWebView2PrintToPdfCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2PrintToPdfCompletedHandler {
        pub fn new<'a, T: ICoreWebView2PrintToPdfCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PrintToPdfCompletedHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2PrintToPdfStreamCompletedHandler,
        ICoreWebView2PrintToPdfStreamCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2PrintToPdfStreamCompletedHandler_Vtbl {}
    pub trait ICoreWebView2PrintToPdfStreamCompletedHandler_Impl {}
    impl ICoreWebView2PrintToPdfStreamCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2PrintToPdfStreamCompletedHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2PrintToPdfStreamCompletedHandler_ImplVtbl<
        T: ICoreWebView2PrintToPdfStreamCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2PrintToPdfStreamCompletedHandler_Impl>
        ICoreWebView2PrintToPdfStreamCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2PrintToPdfStreamCompletedHandler_Vtbl =
            ICoreWebView2PrintToPdfStreamCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2PrintToPdfStreamCompletedHandler {
        pub fn new<'a, T: ICoreWebView2PrintToPdfStreamCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2PrintToPdfStreamCompletedHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ProcessExtendedInfo,
        ICoreWebView2ProcessExtendedInfo_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProcessExtendedInfo_Vtbl {}
    pub trait ICoreWebView2ProcessExtendedInfo_Impl {}
    impl ICoreWebView2ProcessExtendedInfo_Vtbl {
        pub const fn new<Identity: ICoreWebView2ProcessExtendedInfo_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProcessExtendedInfo_ImplVtbl<T: ICoreWebView2ProcessExtendedInfo_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ProcessExtendedInfo_Impl> ICoreWebView2ProcessExtendedInfo_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ProcessExtendedInfo_Vtbl =
            ICoreWebView2ProcessExtendedInfo_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProcessExtendedInfo {
        pub fn new<'a, T: ICoreWebView2ProcessExtendedInfo_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ProcessExtendedInfo_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ProcessExtendedInfoCollection,
        ICoreWebView2ProcessExtendedInfoCollection_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProcessExtendedInfoCollection_Vtbl {}
    pub trait ICoreWebView2ProcessExtendedInfoCollection_Impl {}
    impl ICoreWebView2ProcessExtendedInfoCollection_Vtbl {
        pub const fn new<Identity: ICoreWebView2ProcessExtendedInfoCollection_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProcessExtendedInfoCollection_ImplVtbl<
        T: ICoreWebView2ProcessExtendedInfoCollection_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ProcessExtendedInfoCollection_Impl>
        ICoreWebView2ProcessExtendedInfoCollection_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ProcessExtendedInfoCollection_Vtbl =
            ICoreWebView2ProcessExtendedInfoCollection_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProcessExtendedInfoCollection {
        pub fn new<'a, T: ICoreWebView2ProcessExtendedInfoCollection_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ProcessExtendedInfoCollection_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ProcessFailedEventArgs,
        ICoreWebView2ProcessFailedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProcessFailedEventArgs_Vtbl {}
    pub trait ICoreWebView2ProcessFailedEventArgs_Impl {}
    impl ICoreWebView2ProcessFailedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2ProcessFailedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProcessFailedEventArgs_ImplVtbl<T: ICoreWebView2ProcessFailedEventArgs_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ProcessFailedEventArgs_Impl> ICoreWebView2ProcessFailedEventArgs_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ProcessFailedEventArgs_Vtbl =
            ICoreWebView2ProcessFailedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProcessFailedEventArgs {
        pub fn new<'a, T: ICoreWebView2ProcessFailedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ProcessFailedEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ProcessFailedEventArgs2,
        ICoreWebView2ProcessFailedEventArgs2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProcessFailedEventArgs2_Vtbl {}
    pub trait ICoreWebView2ProcessFailedEventArgs2_Impl {}
    impl ICoreWebView2ProcessFailedEventArgs2_Vtbl {
        pub const fn new<Identity: ICoreWebView2ProcessFailedEventArgs2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProcessFailedEventArgs2_ImplVtbl<T: ICoreWebView2ProcessFailedEventArgs2_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ProcessFailedEventArgs2_Impl>
        ICoreWebView2ProcessFailedEventArgs2_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ProcessFailedEventArgs2_Vtbl =
            ICoreWebView2ProcessFailedEventArgs2_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProcessFailedEventArgs2 {
        pub fn new<'a, T: ICoreWebView2ProcessFailedEventArgs2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ProcessFailedEventArgs2_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ProcessFailedEventArgs3,
        ICoreWebView2ProcessFailedEventArgs3_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProcessFailedEventArgs3_Vtbl {}
    pub trait ICoreWebView2ProcessFailedEventArgs3_Impl {}
    impl ICoreWebView2ProcessFailedEventArgs3_Vtbl {
        pub const fn new<Identity: ICoreWebView2ProcessFailedEventArgs3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProcessFailedEventArgs3_ImplVtbl<T: ICoreWebView2ProcessFailedEventArgs3_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ProcessFailedEventArgs3_Impl>
        ICoreWebView2ProcessFailedEventArgs3_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ProcessFailedEventArgs3_Vtbl =
            ICoreWebView2ProcessFailedEventArgs3_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProcessFailedEventArgs3 {
        pub fn new<'a, T: ICoreWebView2ProcessFailedEventArgs3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ProcessFailedEventArgs3_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ProcessFailedEventHandler,
        ICoreWebView2ProcessFailedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProcessFailedEventHandler_Vtbl {}
    pub trait ICoreWebView2ProcessFailedEventHandler_Impl {}
    impl ICoreWebView2ProcessFailedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ProcessFailedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProcessFailedEventHandler_ImplVtbl<
        T: ICoreWebView2ProcessFailedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ProcessFailedEventHandler_Impl>
        ICoreWebView2ProcessFailedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ProcessFailedEventHandler_Vtbl =
            ICoreWebView2ProcessFailedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProcessFailedEventHandler {
        pub fn new<'a, T: ICoreWebView2ProcessFailedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ProcessFailedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2ProcessInfo, ICoreWebView2ProcessInfo_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProcessInfo_Vtbl {}
    pub trait ICoreWebView2ProcessInfo_Impl {}
    impl ICoreWebView2ProcessInfo_Vtbl {
        pub const fn new<Identity: ICoreWebView2ProcessInfo_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProcessInfo_ImplVtbl<T: ICoreWebView2ProcessInfo_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ProcessInfo_Impl> ICoreWebView2ProcessInfo_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ProcessInfo_Vtbl = ICoreWebView2ProcessInfo_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProcessInfo {
        pub fn new<'a, T: ICoreWebView2ProcessInfo_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ProcessInfo_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ProcessInfoCollection,
        ICoreWebView2ProcessInfoCollection_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProcessInfoCollection_Vtbl {}
    pub trait ICoreWebView2ProcessInfoCollection_Impl {}
    impl ICoreWebView2ProcessInfoCollection_Vtbl {
        pub const fn new<Identity: ICoreWebView2ProcessInfoCollection_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProcessInfoCollection_ImplVtbl<T: ICoreWebView2ProcessInfoCollection_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ProcessInfoCollection_Impl> ICoreWebView2ProcessInfoCollection_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ProcessInfoCollection_Vtbl =
            ICoreWebView2ProcessInfoCollection_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProcessInfoCollection {
        pub fn new<'a, T: ICoreWebView2ProcessInfoCollection_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ProcessInfoCollection_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ProcessInfosChangedEventHandler,
        ICoreWebView2ProcessInfosChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProcessInfosChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2ProcessInfosChangedEventHandler_Impl {}
    impl ICoreWebView2ProcessInfosChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ProcessInfosChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProcessInfosChangedEventHandler_ImplVtbl<
        T: ICoreWebView2ProcessInfosChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ProcessInfosChangedEventHandler_Impl>
        ICoreWebView2ProcessInfosChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ProcessInfosChangedEventHandler_Vtbl =
            ICoreWebView2ProcessInfosChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProcessInfosChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2ProcessInfosChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ProcessInfosChangedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Profile, ICoreWebView2Profile_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Profile_Vtbl {}
    pub trait ICoreWebView2Profile_Impl {}
    impl ICoreWebView2Profile_Vtbl {
        pub const fn new<Identity: ICoreWebView2Profile_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Profile_ImplVtbl<T: ICoreWebView2Profile_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Profile_Impl> ICoreWebView2Profile_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Profile_Vtbl = ICoreWebView2Profile_Vtbl::new::<T>();
    }
    impl ICoreWebView2Profile {
        pub fn new<'a, T: ICoreWebView2Profile_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Profile_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Profile2, ICoreWebView2Profile2_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Profile2_Vtbl {}
    pub trait ICoreWebView2Profile2_Impl {}
    impl ICoreWebView2Profile2_Vtbl {
        pub const fn new<Identity: ICoreWebView2Profile2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Profile2_ImplVtbl<T: ICoreWebView2Profile2_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Profile2_Impl> ICoreWebView2Profile2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Profile2_Vtbl = ICoreWebView2Profile2_Vtbl::new::<T>();
    }
    impl ICoreWebView2Profile2 {
        pub fn new<'a, T: ICoreWebView2Profile2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Profile2_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Profile3, ICoreWebView2Profile3_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Profile3_Vtbl {}
    pub trait ICoreWebView2Profile3_Impl {}
    impl ICoreWebView2Profile3_Vtbl {
        pub const fn new<Identity: ICoreWebView2Profile3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Profile3_ImplVtbl<T: ICoreWebView2Profile3_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Profile3_Impl> ICoreWebView2Profile3_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Profile3_Vtbl = ICoreWebView2Profile3_Vtbl::new::<T>();
    }
    impl ICoreWebView2Profile3 {
        pub fn new<'a, T: ICoreWebView2Profile3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Profile3_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Profile4, ICoreWebView2Profile4_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Profile4_Vtbl {}
    pub trait ICoreWebView2Profile4_Impl {}
    impl ICoreWebView2Profile4_Vtbl {
        pub const fn new<Identity: ICoreWebView2Profile4_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Profile4_ImplVtbl<T: ICoreWebView2Profile4_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Profile4_Impl> ICoreWebView2Profile4_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Profile4_Vtbl = ICoreWebView2Profile4_Vtbl::new::<T>();
    }
    impl ICoreWebView2Profile4 {
        pub fn new<'a, T: ICoreWebView2Profile4_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Profile4_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Profile5, ICoreWebView2Profile5_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Profile5_Vtbl {}
    pub trait ICoreWebView2Profile5_Impl {}
    impl ICoreWebView2Profile5_Vtbl {
        pub const fn new<Identity: ICoreWebView2Profile5_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Profile5_ImplVtbl<T: ICoreWebView2Profile5_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Profile5_Impl> ICoreWebView2Profile5_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Profile5_Vtbl = ICoreWebView2Profile5_Vtbl::new::<T>();
    }
    impl ICoreWebView2Profile5 {
        pub fn new<'a, T: ICoreWebView2Profile5_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Profile5_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Profile6, ICoreWebView2Profile6_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Profile6_Vtbl {}
    pub trait ICoreWebView2Profile6_Impl {}
    impl ICoreWebView2Profile6_Vtbl {
        pub const fn new<Identity: ICoreWebView2Profile6_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Profile6_ImplVtbl<T: ICoreWebView2Profile6_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Profile6_Impl> ICoreWebView2Profile6_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Profile6_Vtbl = ICoreWebView2Profile6_Vtbl::new::<T>();
    }
    impl ICoreWebView2Profile6 {
        pub fn new<'a, T: ICoreWebView2Profile6_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Profile6_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Profile7, ICoreWebView2Profile7_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Profile7_Vtbl {}
    pub trait ICoreWebView2Profile7_Impl {}
    impl ICoreWebView2Profile7_Vtbl {
        pub const fn new<Identity: ICoreWebView2Profile7_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Profile7_ImplVtbl<T: ICoreWebView2Profile7_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Profile7_Impl> ICoreWebView2Profile7_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Profile7_Vtbl = ICoreWebView2Profile7_Vtbl::new::<T>();
    }
    impl ICoreWebView2Profile7 {
        pub fn new<'a, T: ICoreWebView2Profile7_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Profile7_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Profile8, ICoreWebView2Profile8_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Profile8_Vtbl {}
    pub trait ICoreWebView2Profile8_Impl {}
    impl ICoreWebView2Profile8_Vtbl {
        pub const fn new<Identity: ICoreWebView2Profile8_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Profile8_ImplVtbl<T: ICoreWebView2Profile8_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Profile8_Impl> ICoreWebView2Profile8_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Profile8_Vtbl = ICoreWebView2Profile8_Vtbl::new::<T>();
    }
    impl ICoreWebView2Profile8 {
        pub fn new<'a, T: ICoreWebView2Profile8_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Profile8_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ProfileAddBrowserExtensionCompletedHandler,
        ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_Vtbl {}
    pub trait ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_Impl {}
    impl ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_ImplVtbl<
        T: ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_Impl>
        ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_Vtbl =
            ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProfileAddBrowserExtensionCompletedHandler {
        pub fn new<'a, T: ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable:
                    &ICoreWebView2ProfileAddBrowserExtensionCompletedHandler_ImplVtbl::<T>::VTABLE
                        as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ProfileDeletedEventHandler,
        ICoreWebView2ProfileDeletedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProfileDeletedEventHandler_Vtbl {}
    pub trait ICoreWebView2ProfileDeletedEventHandler_Impl {}
    impl ICoreWebView2ProfileDeletedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ProfileDeletedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProfileDeletedEventHandler_ImplVtbl<
        T: ICoreWebView2ProfileDeletedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ProfileDeletedEventHandler_Impl>
        ICoreWebView2ProfileDeletedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ProfileDeletedEventHandler_Vtbl =
            ICoreWebView2ProfileDeletedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProfileDeletedEventHandler {
        pub fn new<'a, T: ICoreWebView2ProfileDeletedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ProfileDeletedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler,
        ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_Vtbl {}
    pub trait ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_Impl {}
    impl ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_Vtbl {
        pub const fn new<
            Identity: ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_Impl,
        >() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_ImplVtbl<
        T: ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_Impl>
        ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_Vtbl =
            ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler {
        pub fn new<'a, T: ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable:
                    &ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler_ImplVtbl::<T>::VTABLE
                        as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2RasterizationScaleChangedEventHandler,
        ICoreWebView2RasterizationScaleChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2RasterizationScaleChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2RasterizationScaleChangedEventHandler_Impl {}
    impl ICoreWebView2RasterizationScaleChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2RasterizationScaleChangedEventHandler_Impl>() -> Self
        {
            Self {}
        }
    }
    struct ICoreWebView2RasterizationScaleChangedEventHandler_ImplVtbl<
        T: ICoreWebView2RasterizationScaleChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2RasterizationScaleChangedEventHandler_Impl>
        ICoreWebView2RasterizationScaleChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2RasterizationScaleChangedEventHandler_Vtbl =
            ICoreWebView2RasterizationScaleChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2RasterizationScaleChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2RasterizationScaleChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2RasterizationScaleChangedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2RegionRectCollectionView,
        ICoreWebView2RegionRectCollectionView_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2RegionRectCollectionView_Vtbl {}
    pub trait ICoreWebView2RegionRectCollectionView_Impl {}
    impl ICoreWebView2RegionRectCollectionView_Vtbl {
        pub const fn new<Identity: ICoreWebView2RegionRectCollectionView_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2RegionRectCollectionView_ImplVtbl<T: ICoreWebView2RegionRectCollectionView_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2RegionRectCollectionView_Impl>
        ICoreWebView2RegionRectCollectionView_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2RegionRectCollectionView_Vtbl =
            ICoreWebView2RegionRectCollectionView_Vtbl::new::<T>();
    }
    impl ICoreWebView2RegionRectCollectionView {
        pub fn new<'a, T: ICoreWebView2RegionRectCollectionView_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2RegionRectCollectionView_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2SaveAsUIShowingEventArgs,
        ICoreWebView2SaveAsUIShowingEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2SaveAsUIShowingEventArgs_Vtbl {}
    pub trait ICoreWebView2SaveAsUIShowingEventArgs_Impl {}
    impl ICoreWebView2SaveAsUIShowingEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2SaveAsUIShowingEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2SaveAsUIShowingEventArgs_ImplVtbl<T: ICoreWebView2SaveAsUIShowingEventArgs_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2SaveAsUIShowingEventArgs_Impl>
        ICoreWebView2SaveAsUIShowingEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2SaveAsUIShowingEventArgs_Vtbl =
            ICoreWebView2SaveAsUIShowingEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2SaveAsUIShowingEventArgs {
        pub fn new<'a, T: ICoreWebView2SaveAsUIShowingEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2SaveAsUIShowingEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2SaveAsUIShowingEventHandler,
        ICoreWebView2SaveAsUIShowingEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2SaveAsUIShowingEventHandler_Vtbl {}
    pub trait ICoreWebView2SaveAsUIShowingEventHandler_Impl {}
    impl ICoreWebView2SaveAsUIShowingEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2SaveAsUIShowingEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2SaveAsUIShowingEventHandler_ImplVtbl<
        T: ICoreWebView2SaveAsUIShowingEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2SaveAsUIShowingEventHandler_Impl>
        ICoreWebView2SaveAsUIShowingEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2SaveAsUIShowingEventHandler_Vtbl =
            ICoreWebView2SaveAsUIShowingEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2SaveAsUIShowingEventHandler {
        pub fn new<'a, T: ICoreWebView2SaveAsUIShowingEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2SaveAsUIShowingEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2SaveFileSecurityCheckStartingEventArgs,
        ICoreWebView2SaveFileSecurityCheckStartingEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2SaveFileSecurityCheckStartingEventArgs_Vtbl {}
    pub trait ICoreWebView2SaveFileSecurityCheckStartingEventArgs_Impl {}
    impl ICoreWebView2SaveFileSecurityCheckStartingEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2SaveFileSecurityCheckStartingEventArgs_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2SaveFileSecurityCheckStartingEventArgs_ImplVtbl<
        T: ICoreWebView2SaveFileSecurityCheckStartingEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2SaveFileSecurityCheckStartingEventArgs_Impl>
        ICoreWebView2SaveFileSecurityCheckStartingEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2SaveFileSecurityCheckStartingEventArgs_Vtbl =
            ICoreWebView2SaveFileSecurityCheckStartingEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2SaveFileSecurityCheckStartingEventArgs {
        pub fn new<'a, T: ICoreWebView2SaveFileSecurityCheckStartingEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2SaveFileSecurityCheckStartingEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2SaveFileSecurityCheckStartingEventHandler,
        ICoreWebView2SaveFileSecurityCheckStartingEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2SaveFileSecurityCheckStartingEventHandler_Vtbl {}
    pub trait ICoreWebView2SaveFileSecurityCheckStartingEventHandler_Impl {}
    impl ICoreWebView2SaveFileSecurityCheckStartingEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2SaveFileSecurityCheckStartingEventHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2SaveFileSecurityCheckStartingEventHandler_ImplVtbl<
        T: ICoreWebView2SaveFileSecurityCheckStartingEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2SaveFileSecurityCheckStartingEventHandler_Impl>
        ICoreWebView2SaveFileSecurityCheckStartingEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2SaveFileSecurityCheckStartingEventHandler_Vtbl =
            ICoreWebView2SaveFileSecurityCheckStartingEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2SaveFileSecurityCheckStartingEventHandler {
        pub fn new<'a, T: ICoreWebView2SaveFileSecurityCheckStartingEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable:
                    &ICoreWebView2SaveFileSecurityCheckStartingEventHandler_ImplVtbl::<T>::VTABLE
                        as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ScreenCaptureStartingEventArgs,
        ICoreWebView2ScreenCaptureStartingEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ScreenCaptureStartingEventArgs_Vtbl {}
    pub trait ICoreWebView2ScreenCaptureStartingEventArgs_Impl {}
    impl ICoreWebView2ScreenCaptureStartingEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2ScreenCaptureStartingEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ScreenCaptureStartingEventArgs_ImplVtbl<
        T: ICoreWebView2ScreenCaptureStartingEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ScreenCaptureStartingEventArgs_Impl>
        ICoreWebView2ScreenCaptureStartingEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ScreenCaptureStartingEventArgs_Vtbl =
            ICoreWebView2ScreenCaptureStartingEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2ScreenCaptureStartingEventArgs {
        pub fn new<'a, T: ICoreWebView2ScreenCaptureStartingEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ScreenCaptureStartingEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ScreenCaptureStartingEventHandler,
        ICoreWebView2ScreenCaptureStartingEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ScreenCaptureStartingEventHandler_Vtbl {}
    pub trait ICoreWebView2ScreenCaptureStartingEventHandler_Impl {}
    impl ICoreWebView2ScreenCaptureStartingEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ScreenCaptureStartingEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ScreenCaptureStartingEventHandler_ImplVtbl<
        T: ICoreWebView2ScreenCaptureStartingEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ScreenCaptureStartingEventHandler_Impl>
        ICoreWebView2ScreenCaptureStartingEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ScreenCaptureStartingEventHandler_Vtbl =
            ICoreWebView2ScreenCaptureStartingEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ScreenCaptureStartingEventHandler {
        pub fn new<'a, T: ICoreWebView2ScreenCaptureStartingEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ScreenCaptureStartingEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ScriptDialogOpeningEventArgs,
        ICoreWebView2ScriptDialogOpeningEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ScriptDialogOpeningEventArgs_Vtbl {}
    pub trait ICoreWebView2ScriptDialogOpeningEventArgs_Impl {}
    impl ICoreWebView2ScriptDialogOpeningEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2ScriptDialogOpeningEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ScriptDialogOpeningEventArgs_ImplVtbl<
        T: ICoreWebView2ScriptDialogOpeningEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ScriptDialogOpeningEventArgs_Impl>
        ICoreWebView2ScriptDialogOpeningEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ScriptDialogOpeningEventArgs_Vtbl =
            ICoreWebView2ScriptDialogOpeningEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2ScriptDialogOpeningEventArgs {
        pub fn new<'a, T: ICoreWebView2ScriptDialogOpeningEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ScriptDialogOpeningEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ScriptDialogOpeningEventHandler,
        ICoreWebView2ScriptDialogOpeningEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ScriptDialogOpeningEventHandler_Vtbl {}
    pub trait ICoreWebView2ScriptDialogOpeningEventHandler_Impl {}
    impl ICoreWebView2ScriptDialogOpeningEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ScriptDialogOpeningEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ScriptDialogOpeningEventHandler_ImplVtbl<
        T: ICoreWebView2ScriptDialogOpeningEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ScriptDialogOpeningEventHandler_Impl>
        ICoreWebView2ScriptDialogOpeningEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ScriptDialogOpeningEventHandler_Vtbl =
            ICoreWebView2ScriptDialogOpeningEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ScriptDialogOpeningEventHandler {
        pub fn new<'a, T: ICoreWebView2ScriptDialogOpeningEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ScriptDialogOpeningEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ScriptException,
        ICoreWebView2ScriptException_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ScriptException_Vtbl {}
    pub trait ICoreWebView2ScriptException_Impl {}
    impl ICoreWebView2ScriptException_Vtbl {
        pub const fn new<Identity: ICoreWebView2ScriptException_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ScriptException_ImplVtbl<T: ICoreWebView2ScriptException_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2ScriptException_Impl> ICoreWebView2ScriptException_ImplVtbl<T> {
        const VTABLE: ICoreWebView2ScriptException_Vtbl =
            ICoreWebView2ScriptException_Vtbl::new::<T>();
    }
    impl ICoreWebView2ScriptException {
        pub fn new<'a, T: ICoreWebView2ScriptException_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ScriptException_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ServerCertificateErrorDetectedEventArgs,
        ICoreWebView2ServerCertificateErrorDetectedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ServerCertificateErrorDetectedEventArgs_Vtbl {}
    pub trait ICoreWebView2ServerCertificateErrorDetectedEventArgs_Impl {}
    impl ICoreWebView2ServerCertificateErrorDetectedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2ServerCertificateErrorDetectedEventArgs_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ServerCertificateErrorDetectedEventArgs_ImplVtbl<
        T: ICoreWebView2ServerCertificateErrorDetectedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ServerCertificateErrorDetectedEventArgs_Impl>
        ICoreWebView2ServerCertificateErrorDetectedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ServerCertificateErrorDetectedEventArgs_Vtbl =
            ICoreWebView2ServerCertificateErrorDetectedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2ServerCertificateErrorDetectedEventArgs {
        pub fn new<'a, T: ICoreWebView2ServerCertificateErrorDetectedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ServerCertificateErrorDetectedEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ServerCertificateErrorDetectedEventHandler,
        ICoreWebView2ServerCertificateErrorDetectedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ServerCertificateErrorDetectedEventHandler_Vtbl {}
    pub trait ICoreWebView2ServerCertificateErrorDetectedEventHandler_Impl {}
    impl ICoreWebView2ServerCertificateErrorDetectedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ServerCertificateErrorDetectedEventHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ServerCertificateErrorDetectedEventHandler_ImplVtbl<
        T: ICoreWebView2ServerCertificateErrorDetectedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ServerCertificateErrorDetectedEventHandler_Impl>
        ICoreWebView2ServerCertificateErrorDetectedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ServerCertificateErrorDetectedEventHandler_Vtbl =
            ICoreWebView2ServerCertificateErrorDetectedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ServerCertificateErrorDetectedEventHandler {
        pub fn new<'a, T: ICoreWebView2ServerCertificateErrorDetectedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable:
                    &ICoreWebView2ServerCertificateErrorDetectedEventHandler_ImplVtbl::<T>::VTABLE
                        as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2SetPermissionStateCompletedHandler,
        ICoreWebView2SetPermissionStateCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2SetPermissionStateCompletedHandler_Vtbl {}
    pub trait ICoreWebView2SetPermissionStateCompletedHandler_Impl {}
    impl ICoreWebView2SetPermissionStateCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2SetPermissionStateCompletedHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2SetPermissionStateCompletedHandler_ImplVtbl<
        T: ICoreWebView2SetPermissionStateCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2SetPermissionStateCompletedHandler_Impl>
        ICoreWebView2SetPermissionStateCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2SetPermissionStateCompletedHandler_Vtbl =
            ICoreWebView2SetPermissionStateCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2SetPermissionStateCompletedHandler {
        pub fn new<'a, T: ICoreWebView2SetPermissionStateCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2SetPermissionStateCompletedHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Settings, ICoreWebView2Settings_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Settings_Vtbl {}
    pub trait ICoreWebView2Settings_Impl {}
    impl ICoreWebView2Settings_Vtbl {
        pub const fn new<Identity: ICoreWebView2Settings_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Settings_ImplVtbl<T: ICoreWebView2Settings_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Settings_Impl> ICoreWebView2Settings_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Settings_Vtbl = ICoreWebView2Settings_Vtbl::new::<T>();
    }
    impl ICoreWebView2Settings {
        pub fn new<'a, T: ICoreWebView2Settings_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Settings_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Settings2, ICoreWebView2Settings2_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Settings2_Vtbl {}
    pub trait ICoreWebView2Settings2_Impl {}
    impl ICoreWebView2Settings2_Vtbl {
        pub const fn new<Identity: ICoreWebView2Settings2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Settings2_ImplVtbl<T: ICoreWebView2Settings2_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Settings2_Impl> ICoreWebView2Settings2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Settings2_Vtbl = ICoreWebView2Settings2_Vtbl::new::<T>();
    }
    impl ICoreWebView2Settings2 {
        pub fn new<'a, T: ICoreWebView2Settings2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Settings2_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Settings3, ICoreWebView2Settings3_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Settings3_Vtbl {}
    pub trait ICoreWebView2Settings3_Impl {}
    impl ICoreWebView2Settings3_Vtbl {
        pub const fn new<Identity: ICoreWebView2Settings3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Settings3_ImplVtbl<T: ICoreWebView2Settings3_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Settings3_Impl> ICoreWebView2Settings3_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Settings3_Vtbl = ICoreWebView2Settings3_Vtbl::new::<T>();
    }
    impl ICoreWebView2Settings3 {
        pub fn new<'a, T: ICoreWebView2Settings3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Settings3_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Settings4, ICoreWebView2Settings4_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Settings4_Vtbl {}
    pub trait ICoreWebView2Settings4_Impl {}
    impl ICoreWebView2Settings4_Vtbl {
        pub const fn new<Identity: ICoreWebView2Settings4_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Settings4_ImplVtbl<T: ICoreWebView2Settings4_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Settings4_Impl> ICoreWebView2Settings4_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Settings4_Vtbl = ICoreWebView2Settings4_Vtbl::new::<T>();
    }
    impl ICoreWebView2Settings4 {
        pub fn new<'a, T: ICoreWebView2Settings4_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Settings4_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Settings5, ICoreWebView2Settings5_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Settings5_Vtbl {}
    pub trait ICoreWebView2Settings5_Impl {}
    impl ICoreWebView2Settings5_Vtbl {
        pub const fn new<Identity: ICoreWebView2Settings5_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Settings5_ImplVtbl<T: ICoreWebView2Settings5_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Settings5_Impl> ICoreWebView2Settings5_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Settings5_Vtbl = ICoreWebView2Settings5_Vtbl::new::<T>();
    }
    impl ICoreWebView2Settings5 {
        pub fn new<'a, T: ICoreWebView2Settings5_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Settings5_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Settings6, ICoreWebView2Settings6_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Settings6_Vtbl {}
    pub trait ICoreWebView2Settings6_Impl {}
    impl ICoreWebView2Settings6_Vtbl {
        pub const fn new<Identity: ICoreWebView2Settings6_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Settings6_ImplVtbl<T: ICoreWebView2Settings6_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Settings6_Impl> ICoreWebView2Settings6_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Settings6_Vtbl = ICoreWebView2Settings6_Vtbl::new::<T>();
    }
    impl ICoreWebView2Settings6 {
        pub fn new<'a, T: ICoreWebView2Settings6_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Settings6_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Settings7, ICoreWebView2Settings7_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Settings7_Vtbl {}
    pub trait ICoreWebView2Settings7_Impl {}
    impl ICoreWebView2Settings7_Vtbl {
        pub const fn new<Identity: ICoreWebView2Settings7_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Settings7_ImplVtbl<T: ICoreWebView2Settings7_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Settings7_Impl> ICoreWebView2Settings7_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Settings7_Vtbl = ICoreWebView2Settings7_Vtbl::new::<T>();
    }
    impl ICoreWebView2Settings7 {
        pub fn new<'a, T: ICoreWebView2Settings7_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Settings7_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Settings8, ICoreWebView2Settings8_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Settings8_Vtbl {}
    pub trait ICoreWebView2Settings8_Impl {}
    impl ICoreWebView2Settings8_Vtbl {
        pub const fn new<Identity: ICoreWebView2Settings8_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Settings8_ImplVtbl<T: ICoreWebView2Settings8_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Settings8_Impl> ICoreWebView2Settings8_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Settings8_Vtbl = ICoreWebView2Settings8_Vtbl::new::<T>();
    }
    impl ICoreWebView2Settings8 {
        pub fn new<'a, T: ICoreWebView2Settings8_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Settings8_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2Settings9, ICoreWebView2Settings9_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2Settings9_Vtbl {}
    pub trait ICoreWebView2Settings9_Impl {}
    impl ICoreWebView2Settings9_Vtbl {
        pub const fn new<Identity: ICoreWebView2Settings9_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2Settings9_ImplVtbl<T: ICoreWebView2Settings9_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2Settings9_Impl> ICoreWebView2Settings9_ImplVtbl<T> {
        const VTABLE: ICoreWebView2Settings9_Vtbl = ICoreWebView2Settings9_Vtbl::new::<T>();
    }
    impl ICoreWebView2Settings9 {
        pub fn new<'a, T: ICoreWebView2Settings9_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2Settings9_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2SharedBuffer, ICoreWebView2SharedBuffer_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2SharedBuffer_Vtbl {}
    pub trait ICoreWebView2SharedBuffer_Impl {}
    impl ICoreWebView2SharedBuffer_Vtbl {
        pub const fn new<Identity: ICoreWebView2SharedBuffer_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2SharedBuffer_ImplVtbl<T: ICoreWebView2SharedBuffer_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2SharedBuffer_Impl> ICoreWebView2SharedBuffer_ImplVtbl<T> {
        const VTABLE: ICoreWebView2SharedBuffer_Vtbl = ICoreWebView2SharedBuffer_Vtbl::new::<T>();
    }
    impl ICoreWebView2SharedBuffer {
        pub fn new<'a, T: ICoreWebView2SharedBuffer_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2SharedBuffer_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ShowSaveAsUICompletedHandler,
        ICoreWebView2ShowSaveAsUICompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ShowSaveAsUICompletedHandler_Vtbl {}
    pub trait ICoreWebView2ShowSaveAsUICompletedHandler_Impl {}
    impl ICoreWebView2ShowSaveAsUICompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ShowSaveAsUICompletedHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ShowSaveAsUICompletedHandler_ImplVtbl<
        T: ICoreWebView2ShowSaveAsUICompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ShowSaveAsUICompletedHandler_Impl>
        ICoreWebView2ShowSaveAsUICompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ShowSaveAsUICompletedHandler_Vtbl =
            ICoreWebView2ShowSaveAsUICompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ShowSaveAsUICompletedHandler {
        pub fn new<'a, T: ICoreWebView2ShowSaveAsUICompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ShowSaveAsUICompletedHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2SourceChangedEventArgs,
        ICoreWebView2SourceChangedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2SourceChangedEventArgs_Vtbl {}
    pub trait ICoreWebView2SourceChangedEventArgs_Impl {}
    impl ICoreWebView2SourceChangedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2SourceChangedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2SourceChangedEventArgs_ImplVtbl<T: ICoreWebView2SourceChangedEventArgs_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2SourceChangedEventArgs_Impl> ICoreWebView2SourceChangedEventArgs_ImplVtbl<T> {
        const VTABLE: ICoreWebView2SourceChangedEventArgs_Vtbl =
            ICoreWebView2SourceChangedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2SourceChangedEventArgs {
        pub fn new<'a, T: ICoreWebView2SourceChangedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2SourceChangedEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2SourceChangedEventHandler,
        ICoreWebView2SourceChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2SourceChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2SourceChangedEventHandler_Impl {}
    impl ICoreWebView2SourceChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2SourceChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2SourceChangedEventHandler_ImplVtbl<
        T: ICoreWebView2SourceChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2SourceChangedEventHandler_Impl>
        ICoreWebView2SourceChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2SourceChangedEventHandler_Vtbl =
            ICoreWebView2SourceChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2SourceChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2SourceChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2SourceChangedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2StateChangedEventHandler,
        ICoreWebView2StateChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2StateChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2StateChangedEventHandler_Impl {}
    impl ICoreWebView2StateChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2StateChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2StateChangedEventHandler_ImplVtbl<T: ICoreWebView2StateChangedEventHandler_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2StateChangedEventHandler_Impl>
        ICoreWebView2StateChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2StateChangedEventHandler_Vtbl =
            ICoreWebView2StateChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2StateChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2StateChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2StateChangedEventHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2StatusBarTextChangedEventHandler,
        ICoreWebView2StatusBarTextChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2StatusBarTextChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2StatusBarTextChangedEventHandler_Impl {}
    impl ICoreWebView2StatusBarTextChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2StatusBarTextChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2StatusBarTextChangedEventHandler_ImplVtbl<
        T: ICoreWebView2StatusBarTextChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2StatusBarTextChangedEventHandler_Impl>
        ICoreWebView2StatusBarTextChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2StatusBarTextChangedEventHandler_Vtbl =
            ICoreWebView2StatusBarTextChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2StatusBarTextChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2StatusBarTextChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2StatusBarTextChangedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2StringCollection,
        ICoreWebView2StringCollection_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2StringCollection_Vtbl {}
    pub trait ICoreWebView2StringCollection_Impl {}
    impl ICoreWebView2StringCollection_Vtbl {
        pub const fn new<Identity: ICoreWebView2StringCollection_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2StringCollection_ImplVtbl<T: ICoreWebView2StringCollection_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2StringCollection_Impl> ICoreWebView2StringCollection_ImplVtbl<T> {
        const VTABLE: ICoreWebView2StringCollection_Vtbl =
            ICoreWebView2StringCollection_Vtbl::new::<T>();
    }
    impl ICoreWebView2StringCollection {
        pub fn new<'a, T: ICoreWebView2StringCollection_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2StringCollection_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2TrySuspendCompletedHandler,
        ICoreWebView2TrySuspendCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2TrySuspendCompletedHandler_Vtbl {}
    pub trait ICoreWebView2TrySuspendCompletedHandler_Impl {}
    impl ICoreWebView2TrySuspendCompletedHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2TrySuspendCompletedHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2TrySuspendCompletedHandler_ImplVtbl<
        T: ICoreWebView2TrySuspendCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2TrySuspendCompletedHandler_Impl>
        ICoreWebView2TrySuspendCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2TrySuspendCompletedHandler_Vtbl =
            ICoreWebView2TrySuspendCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2TrySuspendCompletedHandler {
        pub fn new<'a, T: ICoreWebView2TrySuspendCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2TrySuspendCompletedHandler_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebMessageReceivedEventArgs,
        ICoreWebView2WebMessageReceivedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebMessageReceivedEventArgs_Vtbl {}
    pub trait ICoreWebView2WebMessageReceivedEventArgs_Impl {}
    impl ICoreWebView2WebMessageReceivedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2WebMessageReceivedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WebMessageReceivedEventArgs_ImplVtbl<
        T: ICoreWebView2WebMessageReceivedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2WebMessageReceivedEventArgs_Impl>
        ICoreWebView2WebMessageReceivedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2WebMessageReceivedEventArgs_Vtbl =
            ICoreWebView2WebMessageReceivedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebMessageReceivedEventArgs {
        pub fn new<'a, T: ICoreWebView2WebMessageReceivedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WebMessageReceivedEventArgs_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebMessageReceivedEventArgs2,
        ICoreWebView2WebMessageReceivedEventArgs2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebMessageReceivedEventArgs2_Vtbl {}
    pub trait ICoreWebView2WebMessageReceivedEventArgs2_Impl {}
    impl ICoreWebView2WebMessageReceivedEventArgs2_Vtbl {
        pub const fn new<Identity: ICoreWebView2WebMessageReceivedEventArgs2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WebMessageReceivedEventArgs2_ImplVtbl<
        T: ICoreWebView2WebMessageReceivedEventArgs2_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2WebMessageReceivedEventArgs2_Impl>
        ICoreWebView2WebMessageReceivedEventArgs2_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2WebMessageReceivedEventArgs2_Vtbl =
            ICoreWebView2WebMessageReceivedEventArgs2_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebMessageReceivedEventArgs2 {
        pub fn new<'a, T: ICoreWebView2WebMessageReceivedEventArgs2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WebMessageReceivedEventArgs2_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebMessageReceivedEventHandler,
        ICoreWebView2WebMessageReceivedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebMessageReceivedEventHandler_Vtbl {}
    pub trait ICoreWebView2WebMessageReceivedEventHandler_Impl {}
    impl ICoreWebView2WebMessageReceivedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2WebMessageReceivedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WebMessageReceivedEventHandler_ImplVtbl<
        T: ICoreWebView2WebMessageReceivedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2WebMessageReceivedEventHandler_Impl>
        ICoreWebView2WebMessageReceivedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2WebMessageReceivedEventHandler_Vtbl =
            ICoreWebView2WebMessageReceivedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebMessageReceivedEventHandler {
        pub fn new<'a, T: ICoreWebView2WebMessageReceivedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WebMessageReceivedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebResourceRequest,
        ICoreWebView2WebResourceRequest_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebResourceRequest_Vtbl {}
    pub trait ICoreWebView2WebResourceRequest_Impl {}
    impl ICoreWebView2WebResourceRequest_Vtbl {
        pub const fn new<Identity: ICoreWebView2WebResourceRequest_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WebResourceRequest_ImplVtbl<T: ICoreWebView2WebResourceRequest_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2WebResourceRequest_Impl> ICoreWebView2WebResourceRequest_ImplVtbl<T> {
        const VTABLE: ICoreWebView2WebResourceRequest_Vtbl =
            ICoreWebView2WebResourceRequest_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebResourceRequest {
        pub fn new<'a, T: ICoreWebView2WebResourceRequest_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WebResourceRequest_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebResourceRequestedEventArgs,
        ICoreWebView2WebResourceRequestedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebResourceRequestedEventArgs_Vtbl {}
    pub trait ICoreWebView2WebResourceRequestedEventArgs_Impl {}
    impl ICoreWebView2WebResourceRequestedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2WebResourceRequestedEventArgs_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WebResourceRequestedEventArgs_ImplVtbl<
        T: ICoreWebView2WebResourceRequestedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2WebResourceRequestedEventArgs_Impl>
        ICoreWebView2WebResourceRequestedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2WebResourceRequestedEventArgs_Vtbl =
            ICoreWebView2WebResourceRequestedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebResourceRequestedEventArgs {
        pub fn new<'a, T: ICoreWebView2WebResourceRequestedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WebResourceRequestedEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebResourceRequestedEventArgs2,
        ICoreWebView2WebResourceRequestedEventArgs2_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebResourceRequestedEventArgs2_Vtbl {}
    pub trait ICoreWebView2WebResourceRequestedEventArgs2_Impl {}
    impl ICoreWebView2WebResourceRequestedEventArgs2_Vtbl {
        pub const fn new<Identity: ICoreWebView2WebResourceRequestedEventArgs2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WebResourceRequestedEventArgs2_ImplVtbl<
        T: ICoreWebView2WebResourceRequestedEventArgs2_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2WebResourceRequestedEventArgs2_Impl>
        ICoreWebView2WebResourceRequestedEventArgs2_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2WebResourceRequestedEventArgs2_Vtbl =
            ICoreWebView2WebResourceRequestedEventArgs2_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebResourceRequestedEventArgs2 {
        pub fn new<'a, T: ICoreWebView2WebResourceRequestedEventArgs2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WebResourceRequestedEventArgs2_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebResourceRequestedEventHandler,
        ICoreWebView2WebResourceRequestedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebResourceRequestedEventHandler_Vtbl {}
    pub trait ICoreWebView2WebResourceRequestedEventHandler_Impl {}
    impl ICoreWebView2WebResourceRequestedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2WebResourceRequestedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WebResourceRequestedEventHandler_ImplVtbl<
        T: ICoreWebView2WebResourceRequestedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2WebResourceRequestedEventHandler_Impl>
        ICoreWebView2WebResourceRequestedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2WebResourceRequestedEventHandler_Vtbl =
            ICoreWebView2WebResourceRequestedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebResourceRequestedEventHandler {
        pub fn new<'a, T: ICoreWebView2WebResourceRequestedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WebResourceRequestedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebResourceResponse,
        ICoreWebView2WebResourceResponse_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebResourceResponse_Vtbl {}
    pub trait ICoreWebView2WebResourceResponse_Impl {}
    impl ICoreWebView2WebResourceResponse_Vtbl {
        pub const fn new<Identity: ICoreWebView2WebResourceResponse_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WebResourceResponse_ImplVtbl<T: ICoreWebView2WebResourceResponse_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2WebResourceResponse_Impl> ICoreWebView2WebResourceResponse_ImplVtbl<T> {
        const VTABLE: ICoreWebView2WebResourceResponse_Vtbl =
            ICoreWebView2WebResourceResponse_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebResourceResponse {
        pub fn new<'a, T: ICoreWebView2WebResourceResponse_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WebResourceResponse_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebResourceResponseReceivedEventArgs,
        ICoreWebView2WebResourceResponseReceivedEventArgs_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebResourceResponseReceivedEventArgs_Vtbl {}
    pub trait ICoreWebView2WebResourceResponseReceivedEventArgs_Impl {}
    impl ICoreWebView2WebResourceResponseReceivedEventArgs_Vtbl {
        pub const fn new<Identity: ICoreWebView2WebResourceResponseReceivedEventArgs_Impl>() -> Self
        {
            Self {}
        }
    }
    struct ICoreWebView2WebResourceResponseReceivedEventArgs_ImplVtbl<
        T: ICoreWebView2WebResourceResponseReceivedEventArgs_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2WebResourceResponseReceivedEventArgs_Impl>
        ICoreWebView2WebResourceResponseReceivedEventArgs_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2WebResourceResponseReceivedEventArgs_Vtbl =
            ICoreWebView2WebResourceResponseReceivedEventArgs_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebResourceResponseReceivedEventArgs {
        pub fn new<'a, T: ICoreWebView2WebResourceResponseReceivedEventArgs_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WebResourceResponseReceivedEventArgs_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebResourceResponseReceivedEventHandler,
        ICoreWebView2WebResourceResponseReceivedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebResourceResponseReceivedEventHandler_Vtbl {}
    pub trait ICoreWebView2WebResourceResponseReceivedEventHandler_Impl {}
    impl ICoreWebView2WebResourceResponseReceivedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2WebResourceResponseReceivedEventHandler_Impl>(
        ) -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WebResourceResponseReceivedEventHandler_ImplVtbl<
        T: ICoreWebView2WebResourceResponseReceivedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2WebResourceResponseReceivedEventHandler_Impl>
        ICoreWebView2WebResourceResponseReceivedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2WebResourceResponseReceivedEventHandler_Vtbl =
            ICoreWebView2WebResourceResponseReceivedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebResourceResponseReceivedEventHandler {
        pub fn new<'a, T: ICoreWebView2WebResourceResponseReceivedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WebResourceResponseReceivedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebResourceResponseView,
        ICoreWebView2WebResourceResponseView_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebResourceResponseView_Vtbl {}
    pub trait ICoreWebView2WebResourceResponseView_Impl {}
    impl ICoreWebView2WebResourceResponseView_Vtbl {
        pub const fn new<Identity: ICoreWebView2WebResourceResponseView_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WebResourceResponseView_ImplVtbl<T: ICoreWebView2WebResourceResponseView_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2WebResourceResponseView_Impl>
        ICoreWebView2WebResourceResponseView_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2WebResourceResponseView_Vtbl =
            ICoreWebView2WebResourceResponseView_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebResourceResponseView {
        pub fn new<'a, T: ICoreWebView2WebResourceResponseView_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WebResourceResponseView_ImplVtbl::<T>::VTABLE as *const _
                    as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WebResourceResponseViewGetContentCompletedHandler,
        ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_Vtbl {}
    pub trait ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_Impl {}
    impl ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_Vtbl {
        pub const fn new<
            Identity: ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_Impl,
        >() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_ImplVtbl<
        T: ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_Impl>
        ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_Vtbl =
            ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2WebResourceResponseViewGetContentCompletedHandler {
        pub fn new<'a, T: ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this =
                windows_core::ScopedHeap {
                    vtable: &ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_ImplVtbl::<
                        T,
                    >::VTABLE as *const _ as *const _,
                    this: this as *const _ as *const _,
                };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WindowCloseRequestedEventHandler,
        ICoreWebView2WindowCloseRequestedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WindowCloseRequestedEventHandler_Vtbl {}
    pub trait ICoreWebView2WindowCloseRequestedEventHandler_Impl {}
    impl ICoreWebView2WindowCloseRequestedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2WindowCloseRequestedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WindowCloseRequestedEventHandler_ImplVtbl<
        T: ICoreWebView2WindowCloseRequestedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2WindowCloseRequestedEventHandler_Impl>
        ICoreWebView2WindowCloseRequestedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2WindowCloseRequestedEventHandler_Vtbl =
            ICoreWebView2WindowCloseRequestedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2WindowCloseRequestedEventHandler {
        pub fn new<'a, T: ICoreWebView2WindowCloseRequestedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WindowCloseRequestedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2WindowFeatures,
        ICoreWebView2WindowFeatures_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2WindowFeatures_Vtbl {}
    pub trait ICoreWebView2WindowFeatures_Impl {}
    impl ICoreWebView2WindowFeatures_Vtbl {
        pub const fn new<Identity: ICoreWebView2WindowFeatures_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2WindowFeatures_ImplVtbl<T: ICoreWebView2WindowFeatures_Impl>(
        core::marker::PhantomData<T>,
    );
    impl<T: ICoreWebView2WindowFeatures_Impl> ICoreWebView2WindowFeatures_ImplVtbl<T> {
        const VTABLE: ICoreWebView2WindowFeatures_Vtbl =
            ICoreWebView2WindowFeatures_Vtbl::new::<T>();
    }
    impl ICoreWebView2WindowFeatures {
        pub fn new<'a, T: ICoreWebView2WindowFeatures_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2WindowFeatures_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(
        ICoreWebView2ZoomFactorChangedEventHandler,
        ICoreWebView2ZoomFactorChangedEventHandler_Vtbl
    );
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2ZoomFactorChangedEventHandler_Vtbl {}
    pub trait ICoreWebView2ZoomFactorChangedEventHandler_Impl {}
    impl ICoreWebView2ZoomFactorChangedEventHandler_Vtbl {
        pub const fn new<Identity: ICoreWebView2ZoomFactorChangedEventHandler_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2ZoomFactorChangedEventHandler_ImplVtbl<
        T: ICoreWebView2ZoomFactorChangedEventHandler_Impl,
    >(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2ZoomFactorChangedEventHandler_Impl>
        ICoreWebView2ZoomFactorChangedEventHandler_ImplVtbl<T>
    {
        const VTABLE: ICoreWebView2ZoomFactorChangedEventHandler_Vtbl =
            ICoreWebView2ZoomFactorChangedEventHandler_Vtbl::new::<T>();
    }
    impl ICoreWebView2ZoomFactorChangedEventHandler {
        pub fn new<'a, T: ICoreWebView2ZoomFactorChangedEventHandler_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2ZoomFactorChangedEventHandler_ImplVtbl::<T>::VTABLE
                    as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_10, ICoreWebView2_10_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_10_Vtbl {}
    pub trait ICoreWebView2_10_Impl {}
    impl ICoreWebView2_10_Vtbl {
        pub const fn new<Identity: ICoreWebView2_10_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_10_ImplVtbl<T: ICoreWebView2_10_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_10_Impl> ICoreWebView2_10_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_10_Vtbl = ICoreWebView2_10_Vtbl::new::<T>();
    }
    impl ICoreWebView2_10 {
        pub fn new<'a, T: ICoreWebView2_10_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_10_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_11, ICoreWebView2_11_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_11_Vtbl {}
    pub trait ICoreWebView2_11_Impl {}
    impl ICoreWebView2_11_Vtbl {
        pub const fn new<Identity: ICoreWebView2_11_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_11_ImplVtbl<T: ICoreWebView2_11_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_11_Impl> ICoreWebView2_11_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_11_Vtbl = ICoreWebView2_11_Vtbl::new::<T>();
    }
    impl ICoreWebView2_11 {
        pub fn new<'a, T: ICoreWebView2_11_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_11_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_12, ICoreWebView2_12_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_12_Vtbl {}
    pub trait ICoreWebView2_12_Impl {}
    impl ICoreWebView2_12_Vtbl {
        pub const fn new<Identity: ICoreWebView2_12_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_12_ImplVtbl<T: ICoreWebView2_12_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_12_Impl> ICoreWebView2_12_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_12_Vtbl = ICoreWebView2_12_Vtbl::new::<T>();
    }
    impl ICoreWebView2_12 {
        pub fn new<'a, T: ICoreWebView2_12_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_12_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_13, ICoreWebView2_13_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_13_Vtbl {}
    pub trait ICoreWebView2_13_Impl {}
    impl ICoreWebView2_13_Vtbl {
        pub const fn new<Identity: ICoreWebView2_13_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_13_ImplVtbl<T: ICoreWebView2_13_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_13_Impl> ICoreWebView2_13_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_13_Vtbl = ICoreWebView2_13_Vtbl::new::<T>();
    }
    impl ICoreWebView2_13 {
        pub fn new<'a, T: ICoreWebView2_13_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_13_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_14, ICoreWebView2_14_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_14_Vtbl {}
    pub trait ICoreWebView2_14_Impl {}
    impl ICoreWebView2_14_Vtbl {
        pub const fn new<Identity: ICoreWebView2_14_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_14_ImplVtbl<T: ICoreWebView2_14_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_14_Impl> ICoreWebView2_14_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_14_Vtbl = ICoreWebView2_14_Vtbl::new::<T>();
    }
    impl ICoreWebView2_14 {
        pub fn new<'a, T: ICoreWebView2_14_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_14_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_15, ICoreWebView2_15_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_15_Vtbl {}
    pub trait ICoreWebView2_15_Impl {}
    impl ICoreWebView2_15_Vtbl {
        pub const fn new<Identity: ICoreWebView2_15_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_15_ImplVtbl<T: ICoreWebView2_15_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_15_Impl> ICoreWebView2_15_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_15_Vtbl = ICoreWebView2_15_Vtbl::new::<T>();
    }
    impl ICoreWebView2_15 {
        pub fn new<'a, T: ICoreWebView2_15_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_15_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_16, ICoreWebView2_16_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_16_Vtbl {}
    pub trait ICoreWebView2_16_Impl {}
    impl ICoreWebView2_16_Vtbl {
        pub const fn new<Identity: ICoreWebView2_16_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_16_ImplVtbl<T: ICoreWebView2_16_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_16_Impl> ICoreWebView2_16_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_16_Vtbl = ICoreWebView2_16_Vtbl::new::<T>();
    }
    impl ICoreWebView2_16 {
        pub fn new<'a, T: ICoreWebView2_16_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_16_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_17, ICoreWebView2_17_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_17_Vtbl {}
    pub trait ICoreWebView2_17_Impl {}
    impl ICoreWebView2_17_Vtbl {
        pub const fn new<Identity: ICoreWebView2_17_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_17_ImplVtbl<T: ICoreWebView2_17_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_17_Impl> ICoreWebView2_17_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_17_Vtbl = ICoreWebView2_17_Vtbl::new::<T>();
    }
    impl ICoreWebView2_17 {
        pub fn new<'a, T: ICoreWebView2_17_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_17_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_18, ICoreWebView2_18_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_18_Vtbl {}
    pub trait ICoreWebView2_18_Impl {}
    impl ICoreWebView2_18_Vtbl {
        pub const fn new<Identity: ICoreWebView2_18_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_18_ImplVtbl<T: ICoreWebView2_18_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_18_Impl> ICoreWebView2_18_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_18_Vtbl = ICoreWebView2_18_Vtbl::new::<T>();
    }
    impl ICoreWebView2_18 {
        pub fn new<'a, T: ICoreWebView2_18_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_18_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_19, ICoreWebView2_19_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_19_Vtbl {}
    pub trait ICoreWebView2_19_Impl {}
    impl ICoreWebView2_19_Vtbl {
        pub const fn new<Identity: ICoreWebView2_19_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_19_ImplVtbl<T: ICoreWebView2_19_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_19_Impl> ICoreWebView2_19_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_19_Vtbl = ICoreWebView2_19_Vtbl::new::<T>();
    }
    impl ICoreWebView2_19 {
        pub fn new<'a, T: ICoreWebView2_19_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_19_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_2, ICoreWebView2_2_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_2_Vtbl {}
    pub trait ICoreWebView2_2_Impl {}
    impl ICoreWebView2_2_Vtbl {
        pub const fn new<Identity: ICoreWebView2_2_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_2_ImplVtbl<T: ICoreWebView2_2_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_2_Impl> ICoreWebView2_2_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_2_Vtbl = ICoreWebView2_2_Vtbl::new::<T>();
    }
    impl ICoreWebView2_2 {
        pub fn new<'a, T: ICoreWebView2_2_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_2_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_20, ICoreWebView2_20_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_20_Vtbl {}
    pub trait ICoreWebView2_20_Impl {}
    impl ICoreWebView2_20_Vtbl {
        pub const fn new<Identity: ICoreWebView2_20_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_20_ImplVtbl<T: ICoreWebView2_20_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_20_Impl> ICoreWebView2_20_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_20_Vtbl = ICoreWebView2_20_Vtbl::new::<T>();
    }
    impl ICoreWebView2_20 {
        pub fn new<'a, T: ICoreWebView2_20_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_20_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_21, ICoreWebView2_21_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_21_Vtbl {}
    pub trait ICoreWebView2_21_Impl {}
    impl ICoreWebView2_21_Vtbl {
        pub const fn new<Identity: ICoreWebView2_21_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_21_ImplVtbl<T: ICoreWebView2_21_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_21_Impl> ICoreWebView2_21_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_21_Vtbl = ICoreWebView2_21_Vtbl::new::<T>();
    }
    impl ICoreWebView2_21 {
        pub fn new<'a, T: ICoreWebView2_21_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_21_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_22, ICoreWebView2_22_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_22_Vtbl {}
    pub trait ICoreWebView2_22_Impl {}
    impl ICoreWebView2_22_Vtbl {
        pub const fn new<Identity: ICoreWebView2_22_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_22_ImplVtbl<T: ICoreWebView2_22_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_22_Impl> ICoreWebView2_22_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_22_Vtbl = ICoreWebView2_22_Vtbl::new::<T>();
    }
    impl ICoreWebView2_22 {
        pub fn new<'a, T: ICoreWebView2_22_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_22_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_23, ICoreWebView2_23_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_23_Vtbl {}
    pub trait ICoreWebView2_23_Impl {}
    impl ICoreWebView2_23_Vtbl {
        pub const fn new<Identity: ICoreWebView2_23_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_23_ImplVtbl<T: ICoreWebView2_23_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_23_Impl> ICoreWebView2_23_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_23_Vtbl = ICoreWebView2_23_Vtbl::new::<T>();
    }
    impl ICoreWebView2_23 {
        pub fn new<'a, T: ICoreWebView2_23_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_23_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_24, ICoreWebView2_24_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_24_Vtbl {}
    pub trait ICoreWebView2_24_Impl {}
    impl ICoreWebView2_24_Vtbl {
        pub const fn new<Identity: ICoreWebView2_24_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_24_ImplVtbl<T: ICoreWebView2_24_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_24_Impl> ICoreWebView2_24_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_24_Vtbl = ICoreWebView2_24_Vtbl::new::<T>();
    }
    impl ICoreWebView2_24 {
        pub fn new<'a, T: ICoreWebView2_24_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_24_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_25, ICoreWebView2_25_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_25_Vtbl {}
    pub trait ICoreWebView2_25_Impl {}
    impl ICoreWebView2_25_Vtbl {
        pub const fn new<Identity: ICoreWebView2_25_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_25_ImplVtbl<T: ICoreWebView2_25_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_25_Impl> ICoreWebView2_25_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_25_Vtbl = ICoreWebView2_25_Vtbl::new::<T>();
    }
    impl ICoreWebView2_25 {
        pub fn new<'a, T: ICoreWebView2_25_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_25_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_26, ICoreWebView2_26_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_26_Vtbl {}
    pub trait ICoreWebView2_26_Impl {}
    impl ICoreWebView2_26_Vtbl {
        pub const fn new<Identity: ICoreWebView2_26_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_26_ImplVtbl<T: ICoreWebView2_26_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_26_Impl> ICoreWebView2_26_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_26_Vtbl = ICoreWebView2_26_Vtbl::new::<T>();
    }
    impl ICoreWebView2_26 {
        pub fn new<'a, T: ICoreWebView2_26_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_26_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_27, ICoreWebView2_27_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_27_Vtbl {}
    pub trait ICoreWebView2_27_Impl {}
    impl ICoreWebView2_27_Vtbl {
        pub const fn new<Identity: ICoreWebView2_27_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_27_ImplVtbl<T: ICoreWebView2_27_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_27_Impl> ICoreWebView2_27_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_27_Vtbl = ICoreWebView2_27_Vtbl::new::<T>();
    }
    impl ICoreWebView2_27 {
        pub fn new<'a, T: ICoreWebView2_27_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_27_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_3, ICoreWebView2_3_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_3_Vtbl {}
    pub trait ICoreWebView2_3_Impl {}
    impl ICoreWebView2_3_Vtbl {
        pub const fn new<Identity: ICoreWebView2_3_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_3_ImplVtbl<T: ICoreWebView2_3_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_3_Impl> ICoreWebView2_3_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_3_Vtbl = ICoreWebView2_3_Vtbl::new::<T>();
    }
    impl ICoreWebView2_3 {
        pub fn new<'a, T: ICoreWebView2_3_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_3_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_4, ICoreWebView2_4_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_4_Vtbl {}
    pub trait ICoreWebView2_4_Impl {}
    impl ICoreWebView2_4_Vtbl {
        pub const fn new<Identity: ICoreWebView2_4_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_4_ImplVtbl<T: ICoreWebView2_4_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_4_Impl> ICoreWebView2_4_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_4_Vtbl = ICoreWebView2_4_Vtbl::new::<T>();
    }
    impl ICoreWebView2_4 {
        pub fn new<'a, T: ICoreWebView2_4_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_4_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_5, ICoreWebView2_5_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_5_Vtbl {}
    pub trait ICoreWebView2_5_Impl {}
    impl ICoreWebView2_5_Vtbl {
        pub const fn new<Identity: ICoreWebView2_5_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_5_ImplVtbl<T: ICoreWebView2_5_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_5_Impl> ICoreWebView2_5_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_5_Vtbl = ICoreWebView2_5_Vtbl::new::<T>();
    }
    impl ICoreWebView2_5 {
        pub fn new<'a, T: ICoreWebView2_5_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_5_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_6, ICoreWebView2_6_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_6_Vtbl {}
    pub trait ICoreWebView2_6_Impl {}
    impl ICoreWebView2_6_Vtbl {
        pub const fn new<Identity: ICoreWebView2_6_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_6_ImplVtbl<T: ICoreWebView2_6_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_6_Impl> ICoreWebView2_6_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_6_Vtbl = ICoreWebView2_6_Vtbl::new::<T>();
    }
    impl ICoreWebView2_6 {
        pub fn new<'a, T: ICoreWebView2_6_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_6_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_7, ICoreWebView2_7_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_7_Vtbl {}
    pub trait ICoreWebView2_7_Impl {}
    impl ICoreWebView2_7_Vtbl {
        pub const fn new<Identity: ICoreWebView2_7_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_7_ImplVtbl<T: ICoreWebView2_7_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_7_Impl> ICoreWebView2_7_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_7_Vtbl = ICoreWebView2_7_Vtbl::new::<T>();
    }
    impl ICoreWebView2_7 {
        pub fn new<'a, T: ICoreWebView2_7_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_7_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_8, ICoreWebView2_8_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_8_Vtbl {}
    pub trait ICoreWebView2_8_Impl {}
    impl ICoreWebView2_8_Vtbl {
        pub const fn new<Identity: ICoreWebView2_8_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_8_ImplVtbl<T: ICoreWebView2_8_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_8_Impl> ICoreWebView2_8_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_8_Vtbl = ICoreWebView2_8_Vtbl::new::<T>();
    }
    impl ICoreWebView2_8 {
        pub fn new<'a, T: ICoreWebView2_8_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_8_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
    windows_core::imp::define_interface!(ICoreWebView2_9, ICoreWebView2_9_Vtbl);
    #[repr(C)]
    #[doc(hidden)]
    pub struct ICoreWebView2_9_Vtbl {}
    pub trait ICoreWebView2_9_Impl {}
    impl ICoreWebView2_9_Vtbl {
        pub const fn new<Identity: ICoreWebView2_9_Impl>() -> Self {
            Self {}
        }
    }
    struct ICoreWebView2_9_ImplVtbl<T: ICoreWebView2_9_Impl>(core::marker::PhantomData<T>);
    impl<T: ICoreWebView2_9_Impl> ICoreWebView2_9_ImplVtbl<T> {
        const VTABLE: ICoreWebView2_9_Vtbl = ICoreWebView2_9_Vtbl::new::<T>();
    }
    impl ICoreWebView2_9 {
        pub fn new<'a, T: ICoreWebView2_9_Impl>(
            this: &'a T,
        ) -> windows_core::ScopedInterface<'a, Self> {
            let this = windows_core::ScopedHeap {
                vtable: &ICoreWebView2_9_ImplVtbl::<T>::VTABLE as *const _ as *const _,
                this: this as *const _ as *const _,
            };
            let this = core::mem::ManuallyDrop::new(windows_core::imp::Box::new(this));
            unsafe { windows_core::ScopedInterface::new(core::mem::transmute(&this.vtable)) }
        }
    }
}
